FORMAT: 1A
HOST: https://api.ehealth.gov.ua/

# MEDICAL EVENTS MIS API

**Version: 9.8.8 v.1**

> Read more about eHealth API Manifest [here](https://ehealthapimanifest.docs.apiary.io/#introduction/interacting-with-api)

All the medical data, stored in eHealth, belongs to the patient and must be properly protected. eHealth provides several mechanisms to secure patient's data and limitate access.

1. Only authenticated user with appropriate scope can access medical dataverifi
List of scopes available for the specific user role can be recieved using [/roles endpoint](https://ehealthmisapi1.docs.apiary.io/#reference/public.-medical-service-provider-integration-layer/roles/list-roles) [wiki: Scopes data model](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583404101/Scopes+model)
2. Access to Patient Medical Data is driven by Attribute-based access control(ABAC). Rules [https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/17049388207/ABAC+rules+EN]
3. Patient is able to grant access to specific episode(s) for specific users. User with this approval can view episode details and its nested entities
4. Post methods are async

![Access policy](https://image.ibb.co/fOPoTV/Referrals-Medical-events-usage.png)


## About ABAC
Some routes in eHealth are managed not only by scope-based  model, but Atribute Bаsed Access Control (ABAC) model.
Routes, that responds with lists, are not designed to cut responses automatically(show only allowed items). In order to access list, user should specify filters (search params) to cut entities that are not allowed by ABAC rules. 
For example,
- to access this route:
 `/patient/{patient_id}/conditions`
user should have approval on ALL patients medical data, otherwise the response will be 403.
- But, by specifinig filters, user can access requested data, if one of the ABAC rules returns true:
 `/patient/{patient_id}/conditions?episode_context={episode_1}`

Here you can find the list of current [rules](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/17049388207/ABAC+rules+EN).

## About Forbidden Groups filtration
Some routes in eHealth are managed not only by scope-based  model and ABAC rules, but Forbidden Groups model.

After successfull access with ABAC response will be filtered according to [Medical Events filtration by Forbidden groups](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/5056954517/Medical+Events+filtration+by+Forbidden+groups+EN)

# Group Medical Events
Medical events API is a set of web services designed to provide methods of communication between eHealth Medical Data Storage and medical information systems (MIS).
Medical events API is based on the international framework for exchanging digital health records - FHIR( Release 3 (STU)). Most of  major resources, data types, data structures and their way of interpretation are inherited from FHIR. However, there are minor сhanges described in Apiary.
To find out more about business logic behind the API read [this](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583402836/Medical+Events+API).
###Sequence diagram
In order to provide a consistency of submitted data the established flow should be followed:
![Contract request flow](https://www.websequencediagrams.com/cgi-bin/cdraw?lz=dGl0bGUgU3VibWl0dGluZyBtZWRpY2FsIGRhdGEgcGFja2FnZQoKcGFydGljaXBhbnQgTUlTIGFzIG1zcAAKDWVIZWFsdGggYXMgZWgABgUAKQ1Eb2N1bWVudCBzdG9yYWdlIGFzAAMICgoKbXNwLT4AMAc6IDw8U2VhcmNoIGZvciBhIHBlcnNvbj4-CgBRBy0-bXNwOiA8PFJlc3BvbnNlIHdpdGgAIAdzIGlkcz4-Cm9wdABIDjw8Q3JlYXRlIGVwaXNvZGUARAwAgSoHIDoAHAdhc3luYyBqb2IAZQ4AaghkAGsGam9iIGlkADUTOiAAXQ4AgU4RR2V0ADkFYnkAMg8AgUwNAFwLZGV0YWlscz4-CmVuZACBSBRVcGQAdGgAXQ4AgQxQAIQFBgCDXAUAgygIbmNvdW50ZXIAhQYJABkKU2lnbgAJGACEQwwAhVsFADgSAIMwVACFWQc6IFNhdmUgc2lnbmVkIGNvbnRlbnQgdG8AhWwJAIQjElByb2Nlc3MAgS0ZAIN7OwCFehRsb3MAhSZnAF4MAIVATAoKCgoKCgoK&s=modern-blue)

## Encounter Data Package [/api/patients/{id}/encounter_package]

### Submit Encounter Package [POST]

Using this web service you can submit:

Object| Required| Part of Signed content
-------|---------|------
Visit| 0-1 | false
Encounter| 1-1 |true
Condition| 0-* |true
Observation| 0-* |true
Allergy intolerance| 0-* |true
Immunization| 0-* |true
Risk assessment|0-*| true
Device|0-*| true
Medication statement|0-*|true
Medication administration|0-*|true
Diagnostic report|0-*| true
Procedure|0-*| true
Clinical impression|0-*| true
Specimen|0-*| true
Device dispense| 0-*| true
Device association|0-*| true
Detected issue|0-*| true


You can send the same request (with the same body) multiple times, but a new job will not be created before previous is not performed.

To find out more about the process of encounter package creation read [Confluence Submit Encounter Data Package ](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/17061216257/Submit+Encounter+Package).



+ Request Package (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (object)
        + include `Submit_Encounter_Package`

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)



### Get async Job processing details [GET /api/jobs/{id}]
This resource should be used to get the processing status of the async job.

>Read more about [job processing algorithms.](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583402225/Medical+events+Technical+Documentation)



+ Parameters
    + id: `NBXk9EyErUZv1RhXgyvgg` (string, required) - request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer 342432fdsfdsgfdt24535422fgds
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Job`)

+ Response 303 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 303 (number)
        + data (`Job`)
            + status: `processed`
            + status_code: `200`
            + links (array, required, fixed-type)
                + (object)
                    + entity: `encounter` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/encounters/90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
                + (object)
                    + entity: `condition` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/conditions/df112200-64da-451b-bf77-8e7655bbd48f` (string, required)
                + (object)
                    + entity: `observation` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/observations/d118cc02-3b9b-4d1a-b728-eda4e3d58f25` (string, required)
                + (object)
                    + entity: `allergy_intolerance` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/allergy_intolerances/5f41c64a-6742-4d6d-9f3b-c6742b2ee0a1` (string, required)
                + (object)
                    + entity: `immunization` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/immunizations/12e5985d-2a79-452f-8bc4-ed3a02fdefc5` (string, required)
                + (object)
                    + entity: `risk_assessment` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/risk_assessments/22e5985d-2a79-452f-8bc4-ed3a02fdefc5` (string, required)
                + (object)
                    + entity: `device` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/devices/32e5985d-2a79-452f-8bc4-ed3a02fdefc5` (string, required)
                + (object)
                    + entity: `medication_statemet` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/medication_statemets/42e5985d-2a79-452f-8bc4-ed3a02fdefc5` (string, required)
                + (object)
                    + entity: `medication_administration` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/medication_administration/42e5985d-2a79-452f-8bc4-ed3a02fdefc5` (string, required)
                + (object)
                    + entity: `diagnostic_report` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/diagnostic_reports/42e5985d-2a79-452f-8bc4-ed3a02fdefc5` (string, required)
                + (object)
                    + entity: `procedure` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/procedure/42e5985d-2a79-452f-8bc4-ed3a02fdefc5` (string, required)
                + (object)
                    + entity: `specimen` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/specimens/42e5985d-2a79-452f-8bc4-ed3a02fdefc6` (string, required)
                + (object)
                    + entity: `device_dispense` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/device_dispenses/42e5985d-2a79-452f-8bc4-ed3a02fdefc6` (string, required)
                + (object)
                    + entity: `device_association` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/device_associations/42e5985d-2a79-452f-8bc4-ed3a02fdefc6` (string, required)
                + (object)
                    + entity: `detected_issue` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/detected_issues/42e5985d-2a79-452f-8bc4-ed3a02fdefc6` (string, required)
                

+ Response 403 (application/json)
    + Attributes (Response_OK)
        + data (`Job_Error_403`)
        + meta (Response__Meta)
            + code: 200 (number)

+ Response 409 (application/json)
    + Attributes (Response_OK)
        + data (`Job_Error_409`)
        + meta (Response__Meta)
            + code: 200 (number)

+ Response 422 (application/json)
    + Attributes (Response_OK)
        + data (`Job_Error_422`)
        + meta (Response__Meta)
            + code: 200 (number)

+ Response 404 (application/json)
    + Attributes (Response_OK)
        + data (`Job_Error_404`)
        + meta (Response__Meta)
            + code: 404 (number)
   
+ Response 500 (application/json)
    + Attributes (Response_OK)
        + data (`Job_Error_404`)
        + meta (Response__Meta)
            + code: 500 (number)

### Dummy Encounter Package [POST]
- If `encounter.class.code:"INPATIENT"`, **priority** for encounter is required 
- If `encounter.class.code:"PHC"`, **reasons** for encounter is required
- `hospitalization` may be present only with `encounter.class.code:"INPATIENT"`
- Fields `encounter.hospitalization.admit_source`, `encounter.hospitalization.discharge_disposition` and `encounter.hospitalization.discharge_department` should be required if parameter `encounter.type.coding.code = discharge`.

+ Request Encounter with new Condition (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (Encounter_Request)
        
    
#### Dummy Condition [POST]

This chapter describes the structure of a single unsigned condition that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Condition_Request`)
    
    
#### Dummy Observation [POST]

This chapter describes the structure of a single unsigned observation that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request 1 (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Observation_Request_1`)
    
    
+ Request 2 (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4 
            
    + Attributes (`Observation_Request_2`)

        
        
    
#### Dummy Immunization [POST]
This chapter describes the structure of a single unsigned immunization that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Immunization_Request`) 
    
#### Dummy Allergy_Intolerance [POST]
This chapter describes the structure of a single unsigned allergy_intolerance that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Allergy_Intolerance_Request`)

#### Dummy Risk_Assessment [POST]
This chapter describes the structure of a single unsigned risk_assessment that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Risk_Assessment_Request`)

#### Dummy Device [POST]
This chapter describes the structure of a single unsigned device that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Device_Request`)


#### Dummy Medication Stetement [POST]
This chapter describes the structure of a single unsigned medication statement that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Medication_Statement_Request`)
    
    
#### Dummy Diagnostic report [POST]
This chapter describes the structure of a single unsigned diagnostic report that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Diagnostic_Report_EncounterPCG_Request`)


#### Dummy Procedure [POST]
This chapter describes the structure of a single unsigned procedure that could be submitted as a part of Encounter Package. Procedure in Encounter Package does not need to have reference to Service Request. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Procedure_EncounterPCG_Request`)  

#### Dummy Medication Administration [POST]
This chapter describes the structure of a single unsigned medication that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Medication_Administration_EncounterPCG_Request`) 

#### Dummy Clinical Impression [POST]
This chapter describes the structure of a single unsigned clinical impression that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Clinical_Impression_EncounterPCG_Request`)

#### Dummy Specimen [POST]
This chapter describes the structure of a single unsigned Specimen that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Specimen_EDP_Request`)
            


#### Dummy Device Dispense [POST]
This chapter describes the structure of a single unsigned Device Dispense that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Device_Dispense_EncounterPCG_Request`)


#### Dummy Device Association [POST]
This chapter describes the structure of a single unsigned device association that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Device_assosiation_request`)


#### Dummy Detected Issues [POST]
This chapter describes the structure of a single unsigned detected issue that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Detected_issue_Request`)
    

### Cancel Encounter Package [PATCH]
Read more about [business logic and validations.](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/17061314561/Cancel+Encounter+Package)
+ Request Package (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (object)
        + signed_data: `ew0KICAicGVyaW9kIjogew0KIC...` (string, required)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)


### Cancel Encounter Package Dummy[PATCH]
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Cancel_Encounter`) 

+ Response 200 (application/json)
   

## Episode of Care [/api/patients/{id}/episodes]
Episode of care is a resource that contains general information about a patient`s medical case, such as care manager and diagnoses history.
### Create Episode  [POST]
Read more about [business logic and validations.](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583402023/Create+Episode)
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (object)
        + include `Episode_Of_Care_Request`

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Get Episode by id[GET /api/patients/{patient_id}/episodes/{episode_id}]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Episode identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data(`Episode_Of_Care_Response`)
    

### Get Episodes by search params [GET /api/patients/{patient_id}/episodes{?period_from,period_to,status,page,page_size}]
Use period_from period_to to find episodes that were active in a certain period of time


**Scopes required:** `episode:read`

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `period_from`: `2017-01-01` (string, optional)
    + `period_to`: `2018-01-01` (string, optional)
    + `code`: `R80` (string, optional)
    + `status`: `active` (string, optional)
    + `managing_organization_id`: `80a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, optional)    
    + `page`: 2 (number, optional) - Page number
    + `page_size`: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data(array[`Episode_Of_Care_Response`])
        


### Get Approved Episodes [GET /api/patients/{patient_id}/episodes/approved]

This web service returns episodes, that patient gave approvals to read by a current employee.
**Scopes required:** `episode:read`

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `page`: 2 (number, optional) - Page number
    + `page_size`: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code` : `R80` (string, optional) - current diagnosis code

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data(array[`Episode_Of_Care_Response`])

  
### Get Short Episodes by Diagnoses Groups [GET /api/patients/{patient_id}/diagnoses_groups/episodes{?period_from,period_to,diagnoses_group_id,managing_organization_id,page,page_size}]

This web service returns brief information of episodes grouped by Groups of Diagnoses, for which patient gave approvals to read by a current employee.
Access to full episode data is restricted by patient's approval.
If you have an approval - you can obtain episode details and nested entities through `/episode/:id/*` web services.
**Scopes required:** `episode:read`

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `period_from`: `2022-01-01` (string, optional)
    + `period_to`: `2023-01-01` (string, optional)
    + `diagnoses_group_id`: `80a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, optional)
    + `managing_organization_id`: `80a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, optional)
    + `page`: 2 (number, optional) - Page number
    + `page_size`: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data(array[`Episode_Of_Care_Short_With_Diagnoses`])

### Update Episode [PATCH /api/patients/{patient_id}/episodes/{episode_id}]
Read more about [business logic and validations.](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583402015/Update+Episode)
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier

+ Request Package (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)
        + include `Update_Episode`

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Close Episode [PATCH /api/patients/{patient_id}/episodes/{episode_id}/actions/close]
Read more about [business logic and validations.](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583402019/Close+Episode)
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier

+ Request  (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (object)
        + include `Close_Episode`


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Cancel Episode [PATCH /api/patients/{patient_id}/episodes/{episode_id}/actions/cancel]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier

+ Request  (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)
        + include `Cancel_Episode`


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Get encounters in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/encounters{?date_from,date_to,page,page_size}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `incoming_referral`: `f10aeafb-0df2-4091-bc83-f07e92a100ae` (string, optional)
    + `period_start_from`: `2000-01-01`(string, optional) - Start date of the period of encounter initiation period. Format DATE '2017-08-16'. Example: 2017-08-16
    + `period_start_to`: `2000-01-10`(string, optional) - End date of the period of encounter initiation period. Format DATE '2017-09-16'. Example: 2017-09-16.
    + `period_end_from`: `2000-01-05`(string, optional) - Start date of the period of encounter ending period. Format DATE '2017-08-20'. Example: 2017-08-20.
    + `period_end_to`: `2000-01-15`(string, optional) - End date of the period of treatment ending period. Format DATE '2017-09-20'. Example: 2017-09-20.
    + `page`: `2` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `origin_episode_id`: `d11aeafb-0df2-4091-bc83-f07e92a100af` (string, optional)

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Encounter_Response`], fixed-type)

### Get encounter details in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/encounters/{encounter_id}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `encounter_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Encounter identifier

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Encounter_Response`)

### Get conditions in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/conditions{?code,onset_date_from,onset_date_to,page,page_size}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `code`: `A20` (string, optional)
    + `onset_date_from`:`1990-01-01` (string, optional)
    + `onset_date_to`: `2000-01-01` (string, optional)
    + `page`: `2` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Condition_Response`], fixed-type)

### Get conditions details in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/conditions/{condition_id}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `condition_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Condition identifier

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Condition_Response`)

### Get observations in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/observations{?code,issued_from,issued_to,page,page_size}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `code`: `10569-2` (string, optional)
    + `issued_from`:`1990-01-01` (string, optional)
    + `issued_to`: `2000-01-01` (string, optional)
    + `page`: `2` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Observation_Response`], fixed-type)

### Get observation details in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/observations/{observation_id}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `observation_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Observation identifier

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Observation_Response`)

### Get allergy intolerances in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/allergy_intolerances{?code,onset_date_time_from,onset_date_time_to,page,page_size}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `code`: `227493005` (string, optional)
    + `onset_date_time_from`:`1990-01-01` (string, optional) 
    + `onset_date_time_to`: `2000-01-01` (string, optional)
    + `page`: `2` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Allergy_Intolerance_Response`], fixed-type)

### Get allergy intolerance details in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/allergy_intolerances/{allergy_intolerance_id}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `allergy_intolerance_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Allergy intolerance identifier

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Allergy_Intolerance_Response`)

### Get immunizations in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/immunizations{?code,date_from,date_to,page,page_size}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `vaccine_code`: `wex-10` (string, optional)
    + `date_from`: `1990-01-01` (string, optional) 
    + `date_to`: `2000-01-01` (string, optional)
    + `page`: `2` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Immunization_Response`], fixed-type)

### Get immunization details in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/immunizations/{immunization_id}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `immunization_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Immunization identifier

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Immunization_Response`)

## Encounter [/api/patients/{id}/encounters]

### Get Encounter by id[GET /api/patients/{patient_id}/encounters/{encounter_id}]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `encounter_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Encounter identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Encounter_Response`)
    

### Get Encounters by search params[GET /api/patients/{patient_id}/encounters{?date_from,date_to,episode_id,page,page_size}]
+ Parameters
    + `page`: `2` (number, optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `period_start_from`: `2000-01-01`(string, optional) - Start date of the period of encounter initiation period. Format DATE '2017-08-16'. Example: 2017-08-16
    + `period_start_to`: `2000-01-10`(string, optional) - End date of the period of encounter initiation period. Format DATE '2017-09-16'. Example: 2017-09-16.
    + `period_end_from`: `2000-01-05`(string, optional) - Start date of the period of encounter ending period. Format DATE '2017-08-20'. Example: 2017-08-20.
    + `period_end_to`: `2000-01-15`(string, optional) - End date of the period of treatment ending period. Format DATE '2017-09-20'. Example: 2017-09-20.
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional)
    + `incoming_referral_id`: `f10aeafb-0df2-4091-bc83-f07e92a100ae` (string, optional)
    + `origin_episode_id`: `d11aeafb-0df2-4091-bc83-f07e92a100af` (string, optional)
    + `managing_organization_id`: `887a37a4-c95f-4017-ba11-a000c61bf700` (string, optional)

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Encounter_Response`])

### Get Encounter context[GET /api/patients/{patient_id}/encounters/{encounter_id}/context]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `encounter_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Encounter identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medical_Event_Context_Episode_Response`)


## Conditions [/api/patients/{patient_id}/conditions]

### Get Condition by id [GET /api/patients/{patient_id}/conditions/{condition_id}]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `condition_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Condition identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Condition_Response`)
    

### Get Conditions by search params [GET /api/patients/{patient_id}/conditions{?encounter_id,episode_id,onset_date_from,onset_date_to,code,page,page_size}]
+ Parameters
    + `page`: `1` (number,optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `A20` (string, optional)
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional)
    + `onset_date_from`:`1990-01-01` (string, optional)
    + `onset_date_to`: `2000-01-01` (string, optional)
    + `managing_organization_id`: `887a37a4-c95f-4017-ba11-a000c61bf700` (string, optional)

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Condition_Response`])


### Get Condition context[GET /api/patients/{patient_id}/conditions/{condition_id}/context]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `condition_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Condition identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medical_Event_Context_Episode_Response`)
    

## Observation [/api/patients/{patient_id}/observation/{id}]

### Get Observation by id[GET /api/patients/{patient_id}/observations/{observation_id}]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `observation_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Observation identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Observation_Response`)

### Get Observations by searсh params[GET /api/patients/{patient_id}/observations{?encounter_id,diagnostic_report_id,episode_id,code,issued_from,issued_to,page,page_size}]
+ Parameters
    + `page`: `1` (number, optional) - Page number    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `10569-2` (string, optional)
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `diagnostic_report_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional)
    + `issued_from`:`1990-01-01` (string, optional)
    + `issued_to`: `2000-01-01` (string, optional)
    + `device_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `managing_organization_id`: `887a37a4-c95f-4017-ba11-a000c61bf700` (string, optional)
    + `specimen_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional)

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Observation_Response`])


### Get Observation contexts[GET /api/patients/{patient_id}/observations/{observation_id}/context]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `observation_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Observation identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medical_Event_Context_Episode_with_Diagnostic_Report_Response`)
    

## Allergy Intolerance [/api/patients/{patient_id}/allergy_intolerances/{id}]

### Get Allergy Intolerance by id[GET /api/patients/{patient_id}/allergy_intolerances/{allergy_intolerance_id}]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `allergy_intolerance_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Allergy intolerance identifier
 
+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Allergy_Intolerance_Response`)

### Get Allergy Intolerances by search params[GET /api/patients/{patient_id}/allergy_intolerances{?encounter_id,episode_id,code,onset_date_time_from,onset_date_time_to,page,page_size}]

+ Parameters
    + `page`: `2` (number, optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `227493005` (string, optional) 
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional) 
    + `onset_date_time_from`:`1990-01-01` (string, optional)
    + `onset_date_time_to`: `2000-01-01` (string, optional)

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Allergy_Intolerance_Response`])

### Get Allergy Intolerance context[GET /api/patients/{patient_id}/allergy_intolerances/{allergy_intolerance_id}/context]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `allergy_intolerance_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Allergy Intolerance identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medical_Event_Context_Episode_Response`)

## Immunization [/api/patients/{patient_id}/immunizations]

### Get Immunization by id [GET /api/patients/{patient_id}/immunizations/{immunization_id}]

+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + immunization_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique immunization identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Immunization_Response`)

### Get Immunizations by search params [GET /api/patients/{patient_id}/immunizations{?vaccine_code,date_from,date_to,page,page_size,code,encounter_id,episode_id}]

+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `vaccine_code`: `wex-10` (string, optional) 
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional) 
    + `date_from`: `1990-01-01` (string, optional) 
    + `date_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Immunization_Response`], fixed-type)

    
### Get Immunization context[GET /api/patients/{patient_id}/immunizations/{immunization_id}/context]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `immunization_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Immunization identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medical_Event_Context_Episode_Response`)


## Risk Assessment [/api/patients/{patient_id}/risk_assessments]

### Get Risk Assessment by id [GET /api/patients/{patient_id}/risk_assessments/{risk_assessment_id}]

+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + risk_assessment_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique immunization identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Risk_Assessment_Response`)

### Get Risk Assessments by search params [GET /api/patients/{patient_id}/risk_assessments{?code,asserted_date_from,asserted_date_to,page,page_size,encounter_id,episode_id}]

+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `R80` (string, optional) 
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional) 
    + `asserted_date_from`: `1990-01-01` (string, optional) 
    + `asserted_date_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Risk_Assessment_Response`], fixed-type)

    
### Get Risk Assessment context[GET /api/patients/{patient_id}/risk_assessments/{risk_assessment_id}/context]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `risk_assessment_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Risk Assessment identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medical_Event_Context_Episode_Response`)

    
## Device [/api/patients/{patient_id}/devices]

### Get Device by id [GET /api/patients/{patient_id}/devices/{device_id}]

+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + device_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique device identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Device_Response`)

### Get Devices by search params [GET /api/patients/{patient_id}/devices{?inserted_at_from,inserted_at_to,page,page_size,type,encounter_id,episode_id,definition,model_number,name,manufacturer,recorder,recorder_legal_entity_id,status,serial_number}]

> Note that it is allowed to pass multiple comma-separated values for some query parameters:
* type
* definition
* status

+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `type`: `1234` (string, optional) 
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional)
    + `definition`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `model_number`: `NSPX30` (string, optional)
    + `manufacturer`: `GlobalMed, Inc` (string, optional)
    + `name`: `name` (string, optional)
    + `recorder`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `recorder_legal_entity_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `status`: `active` (string, optional)
    + `serial_number`: `NSPX30` (string, optional)
    + `inserted_at_from`: `1990-01-01` (string, optional) 
    + `inserted_at_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Device_Response`], fixed-type)


### Get Device context[GET /api/patients/{patient_id}/devices/{device_id}/context]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `device_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Device identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medical_Event_Context_Episode_Response`)
 

## Device Association [/api/patients/{patient_id}/device_association] 

### Get Device Association by id [GET /api/patients/{patient_id}/device_associations/{device_association_id}]

+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + device_association_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique device identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Device_association_Response`)        
        

### Get Device Associations by search params [GET /api/patients/{patient_id}/device_associations{?device_id,body_site,inserted_at_from,inserted_at_to,association_date_from,association_date_to,page,page_size,encounter_id,episode_id,recorder,recorder_legal_entity_id,status}]

> Note that it is allowed to pass multiple comma-separated values for some query parameters:
* body_site
* status

+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional)
    + `recorder`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `recorder_legal_entity_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `status`: `active` (string, optional)
    + `body_site`: `head` (string, optional)
    + `device_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `association_date_from`: `1990-01-01` (string, optional) 
    + `association_date_to`: `2000-01-01` (string, optional) 
    + `recorded_from`: `1990-01-01` (string, optional) 
    + `recorded_to`: `2000-01-01` (string, optional) 
    + `inserted_at_from`: `1990-01-01` (string, optional) 
    + `inserted_at_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Device_association_Response`], fixed-type)
        
        
### Get Device Association context[GET /api/patients/{patient_id}/device_associations/{device_association_id}/context]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `device_association_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) -  Device Association identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medical_Event_Context_Episode_Response`)
        

## Detected Issue [/api/patients/{patient_id}/detected_issues] 

### Get Detected Issue by id [GET /api/patients/{patient_id}/detected_issues/{detected_issue_id}]

+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + detected_issue_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique device identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Detected_issue_Response`)    

### Get Detected Issues by search params [GET /api/patients/{patient_id}/detected_issues{?device_id,inserted_at_from,inserted_at_to,page,page_size,encounter_id,episode_id,recorder,recorder_legal_entity_id,status,identified_date_time_from,identified_date_time_to}]

> Note that it is allowed to pass multiple comma-separated values for some query parameters:
* status

+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional)
    + `status`: `active` (string, optional)
    + `recorder`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `recorder_legal_entity_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `device_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `inserted_at_from`: `1990-01-01` (string, optional)
    + `inserted_at_to`: `2000-01-01` (string, optional)
    + `identified_date_time_from`: `2021-01-01T00:00:00.000Z` (string, optional) - The start date of the period for search by identified_date_time
    + `identified_date_time_to`: `2021-01-01T00:00:00.000Z` (string, optional) - The end date of the period for search by identified_date_time
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Detected_issue_Response`], fixed-type)        

### Get Detected Issue context[GET /api/patients/{patient_id}/detected_issues/{detected_issue_id}/context]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `detected_issue_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) -  Detected Issue identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medical_Event_Context_Episode_Response`)

 
## Medication Statement [/api/patients/{patient_id}/medication_statements]
### Get Medication Statement by id  [GET /api/patients/{patient_id}/medication_statements/{medication_statement_id}]
+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + medication_statement_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique device identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medication_Statement_Response`)

### Get Medication Statement by search params [GET /api/patients/{patient_id}/medication_statements/{?asserted_date_from,asserted_date_to,page,page_size,medication_code,encounter_id,episode_id}]
+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `medication_code`: `spine_board` (string, optional) 
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `episode_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `asserted_date_from`: `1990-01-01` (string, optional) 
    + `asserted_date_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Medication_Statement_Response`], fixed-type)


### Get Medication Statement context[GET /api/patients/{patient_id}/medication_statements/{medication_statement_id}/context]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `medication_statement_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Medication Statement identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medical_Event_Context_Episode_Response`)

 
## Medication Administration [/api/patients/{patient_id}/medication_administrations]
### Get Medication Administration by id  [GET /api/patients/{patient_id}/medication_administrations/{medication_administration_id}]
+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + medication_administration_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique medication administration identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medication_Administration_Response`)

### Get Medication Administration by search params [GET /api/patients/{patient_id}/medication_administrations/{?asserted_date_from,asserted_date_to,page,page_size,medication_code,encounter_id,episode_id}]
+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + status: `completed` (string, optional) 
    + category_code: `409063005` (string, optional) - Type of medication usage
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) - unique identifier
    + `episode_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `managing_organization_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `medication_request_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `performed_date_from`: `1990-01-01` (string, optional) 
    + `performed_date_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Medication_Administration_Response`], fixed-type)


### Get Medication Administration context[GET /api/patients/{patient_id}/medication_administrations/{medication_administration_id}/context]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `medication_administration_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Medication Administration identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medical_Event_Context_Episode_Response`)

## Clinical Impression [/api/patients/{patient_id}/clinical_impressions]
### Get Clinical Impression by id  [GET /api/patients/{patient_id}/clinical_impressions/{clinical_impression_id}]
+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + clinical_impression_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique clinical impression identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Clinical_Impression_Show`)

### Get Clinical Impression by search params [GET /api/patients/{patient_id}/clinical_impressions{?encounter_id,episode_id,code,status,page,page_size}]
+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + encounter_id: `7c3da506-804d-4550-8993-bf17f9ee0400` (string, optional) - identifier of the encounter in clinical impression
    + episode_id: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional)    
    + code: `insulin_1` (string, optional) - clinical impression's code
    + status: `completed` (string, optional) - clinical impression's status
    + effective_date_from: `2017-09-01` (string, optional) - date of clinical impression
    + effective_date_to: `2017-09-02` (string, optional) - date of clinical impression
    + page: 2 (number, optional) - Page number
    + page_size: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Clinical_Impression_Show`], fixed-type)


### Get Clinical Impression context[GET /api/patients/{patient_id}/clinical_impressions/{clinical_impression_id}/context]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `clinical_impression_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Clinical Impression identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medical_Event_Context_Episode_Response`)

## Diagnostic Report Data Package [/api/patients/{id}/diagnostic_report_package]

### Submit Diagnostic Report  Package [POST]

Using this web service you can submit:

Object| Required| Part of Signed content
-------|---------|------
Observation| 0-* |true
Diagnostic report|1-1| true

To find out more about the process of diagnostic report package creation read [Confluence Submit Encounter Data Package ](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/17061216257/Submit+Encounter+Package).

+ Request Package (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (object)
        + `signed_data` : 'ew0KICAicGVyaW9kIjogew0KIC...' (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)     
            

### Dummy Submit Diagnostic Report Package [POST]            
+ Request Package (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (object)
        + include `Submit_DR_Package`

### Cancel Diagnostic Report Package[PATCH]
+ Request Package (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (object)
        + `signed_data` : 'ew0KICAicGVyaW9kIjogew0KIC...' (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)
            

### Dummy Cancel Diagnostic Report Package [PATCH]          
+ Request Package (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (object)
        + include `Submit_DR_Package_Cancel`

## Diagnostic Report [/api/patients/{patient_id}/diagnostic_reports]
### Get Diagnostic Report by id [GET /api/patients/{patient_id}/diagnostic_reports/{diagnostic_report_id}]
+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + diagnostic_report_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique DR identifier
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (`Diagnostic_Report_Response`)

### Get Diagnostic Report by search params [GET /api/patients/{patient_id}/diagnostic_reports/{?issued_from,issued_to,page,page_size,code,encounter_id,context_episode_id, origin_episode_id}]
+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `12345` (string, optional) 
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `context_episode_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `origin_episode_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `issued_from`: `1990-01-01` (string, optional) 
    + `issued_to`: `2000-01-01` (string, optional) 
    + `based_on`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `managing_organization_id`: `19dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `specimen_id`: `90dc3ed7-2169-45d8-8fa3-d918c6839b21` (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Diagnostic_Report_Response`], fixed-type)

### Get Short Diagnostic Reports by Service Groups [GET /api/patients/{patient_id}/service_groups/diagnostic_reports{?issued_from,issued_to,page,page_size,managing_organization_id,code,status,category,service_group_id}]
+ Parameters
    + `patient_id`: `90dc3ed7-2169-45d8-8fa3-d918c6839b21` (string, reqired)
    + `service_group_id`: `90dc3ed7-2169-45d8-8fa3-d918c6839b21` (string, optional)
    + `code`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) - service_id from code.identifier.value
    + `managing_organization`: `19dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `status`: `final` (string, optional)
    + `category`: `diagnostic_procedure` (string, optional)
    + `issued_from`: `1990-01-01` (string, optional) 
    + `issued_to`: `2000-01-01` (string, optional)
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Diagnostic_Report_Short_Response`], fixed-type)
        
        

### Get Approved Diagnostic Reports  [GET /api/patients/{patient_id}/diagnostic_reports/approved{?page,page_size,code}]
This web service allows to get a list of diagnostic reports that were allowed to read by the doctor via patients approval.

+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) - id of a service
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Diagnostic_Report_Response`], fixed-type)

### Get Diagnostic Report contexts[GET /api/patients/{patient_id}/diagnostic_reports/{diagnostic_report_id}/context]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `diagnostic_report_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Diagnostic Report identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medical_Event_Context_Episode_with_Origin_Episode_Response`)

## Procedures [/api/patients/{patient_id}/procedures]

### Create procedure [POST]
This WS allows to register procedure by its own. Also prosedure can be registered as a part of [encounter package](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package).
**Scopes required:** `procedure:write`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier

+ Request (application/json)
    + Headers
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Dummy create procedure [POST]
This chapter describes the structure of a single procedure creation. This is not an actual web-service.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Procedure_Request`)
 
### Get Procedures by ID [GET /api/patients/{patient_id}/procedures/{id}]
**Scopes required:** `procedure:read`

+ Parameters
    + id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - Unique procedure identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Procedure_Response`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Get Procedures by search params [GET /api/patients/{patient_id}/procedures{?id,status,episode_id,encounter_id,code,based_on,recorded_by,managing_organization_id,device_id}]
**Scopes required:** `procedure:read`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + episode_id: `ef30f210-5328-4f48-bfe6-c7150d4737a6` (string, optional) - Unique episode identifier, look into episode in encounter
    + status: completed (enum, optional) - status of procedure
    + used_reference_id: `ef30f210-5328-4f48-bfe6-c7150d4737a6` (string, optional) - Items used during procedure
    + based_on: `ef30f210-5328-4f48-bfe6-c7150d4737a6` (string, optional) - Unique service request identifier
    + `code`: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) 
    + `managing_organization_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - Unique legal entity identifier
    + encounter_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - Unique encounter identifier
    + `origin_episode_id`: `ef30f210-5328-4f48-bfe6-c7150d4737a6` (string, optional) - Unique episode identifier, look into episode in procedures.origin_episode
    + `device_id`: `ef30f210-5328-4f48-bfe6-c7150d4737a6` (string, optional) - Device identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Procedure_Response`])


### Get Procedure contexts[GET /api/patients/{patient_id}/procedures/{procedure_id}/context]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `procedure_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Procedure identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medical_Event_Context_Episode_with_Origin_Episode_Response`)

### Get Short Procedures by Service Groups [GET /api/patients/{patient_id}/service_groups/procedures{?performed_date_time_from,performed_date_time_to,page,page_size,managing_organization_id,code,status,category,service_group_id}]
**Scopes required:** `procedure:read`

+ Parameters
    + `patient_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + `service_group_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - Unique service_group identifier
    + `managing_organization`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - Unique legal entity identifier
    + `status`: `completed` (enum, optional) - status of procedure
    + `category`: `diagnostic_procedure` (string, optional)
    + `code`: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) 
    + `performed_date_time_from`: `2000-01-01` (string, optional)
    + `performed_date_time_to`: `2000-01-01` (string, optional)
    + `performed_period_start_from`: `2000-01-01` (string, optional)
    + `performed_period_start_to`: `2000-01-01` (string, optional)
    + `performed_period_end_from`: `2000-01-01` (string, optional)
    + `performed_period_end_to`: `2000-01-01` (string, optional)
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Procedure_Short_Response`])


### Cancel Procedure [PATCH /api/patients/{person_id}/procedures/{id}/actions/cancel]

This WS allows to cancel existing procedure and change its status to `entered_in_error` in case of any mistake. The new correct procedure could be created instead.
Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority)

**Important**
1. Signed content of procedure must be equal to procedure stored in DB. See [Get Procedure by search params](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/procedures/get-procedure-by-search-params)
2. `status_reason` and `explanatory_letter` (optional) must be added to signed content

Please see [Cancel Procedure]() and [Dummy Cancel Procedure for more details


**Scopes required:** `procedure:write`

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Dummy Cancel Procedure [PATCH]
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (Procedure_Request)
        + `status_reason` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/procedure_cancel_reasons` (string)
                    + code: `default` (string)
        + `explanatory_letter`: `Процедура була відмінена у зв'язку з помилкою при виборі пацієнта ` (string, optional)
        + `status` : `ENTERED_IN_ERROR` (required) - Status for provided procedure
        + `focal_device` (object, optional) - Manipulated, implanted, or removed device
            + action (Codeable_Concept, optional) - Kind of change to Device
                + coding (array, fixed-type)
                    + (Coding)
                     + system: `procedure_focal_device_actions` (string) 
                     + code: `some_action` (string)
            + manipulated (Reference_request, required) - Implanted Device used for this procedure
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: `device` (string) 
        

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


## Specimen [/api/patients/{patient_id}/specimens]

### Create Specimen [POST]
This WS allows to register Specimen by its own. Also Specimen can be registered as a part of [encounter package](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package).
**Scopes required:** `specimen:write`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier

+ Request (application/json)
    + Headers
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Dummy create Specimen [POST]
This chapter describes the structure of a single Specimen creation. This is not an actual web-service.

+ Request (application/json)

    + Headers
            api-key: aFBLVTZ6Z2dON1V
            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (`Specimen_Request`)

### Get Specimen details [GET /api/patients/{patient_id}/specimens/{id}]
**Scopes required:** `specimen:read`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique specimen identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Specimen_Response`)


### Get Specimen by search params [GET /api/patients/{patient_id}/specimens{?type,status,registered_by,collected_from,collected_to,container_identifier,container_type,parent,request,encounter,page,page_size}]
**Scopes required:** `specimen:read`

+ Parameters
    + status: available (string, optional) - status of the Specimen
    + type: ABP (string, optional) - kind of material that forms the Specimen
    + `registered_by`: `ef30f210-5328-4f48-bfe6-c7150d4737a6` (string, optional) - identifier of employee who registered the specimen
    + `collected_from`: `2023-12-25` (string, optional) - the date from which the Specimen was collected
    + `collected_to`: `2023-12-28` (string, optional)  - the date to which the Specimen was collected
    + `container_identifier`: `1-ABC-4311` (string, optional) - identifier of the container in the Specimen
    + `container_type`: tube (string, optional) - type of the container in the Specimen
    + parent: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) - parent Specimen 
    + request: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - service request identifier linked to the Specimen
    + encounter: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - encounter/context identifier linked to the Specimen
    + page: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Specimen_Response`])

### Get Specimen by accession identifier  [GET /api/specimens/{accession_identifier}]
**Scopes required:** `specimen:read`

+ Parameters
    + accession_identifier: `1234-3224-2342-1233` (string, required) - human readable Specimen number
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Specimen_Response`)
            + identity (object, required)
                + gender: MALE (enum, required) - gender of the patient, value from the dictionary GENDER
                    - MALE
                    - FEMALE
                + age: 35 (number, required) - full years between inserted_at and birth date
    

### Process Specimen [PATCH /api/patients/{patient_id}/specimens/{id}/actions/process]

This method is used to set a received_time for a Specimen.

It can be processed in async way only, so Server might answer with:
http code| processing method | Client recommendations
--|--|--
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details


**Scopes required:** `specimen:process`

+ Parameters
    + patient_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique patient identifier
    + id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique Specimen identifier

+ Request (application/json)
    + Headers
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)
        + `received_time`: `2023-04-20T19:14:13Z` (string, required) - The time when Specimen was received for processing

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Invalidate Specimen [PATCH /api/patients/{patient_id}/specimens/{id}/actions/invalidate]

This method is used to mark Specimen as unavailable.

It can be processed in async way only, so Server might answer with:
http code| processing method | Client recommendations
--|--|--
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details


**Scopes required:** `specimen:invalidate`

+ Parameters
    + patient_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique patient identifier
    + id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique Specimen identifier
    
+ Request (application/json)
    + Headers
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)    
        + `status_reason` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `specimen_invalidate_reasons` (string)
                    + code: `default` (string)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Reject Specimen [PATCH /api/patients/{patient_id}/specimens/{id}/actions/reject]

This method is used to mark Specimen as unsatisfactory.

It can be processed in async way only, so Server might answer with:
http code| processing method | Client recommendations
--|--|--
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details


**Scopes required:** `specimen:reject`

+ Parameters
    + patient_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique patient identifier
    + id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique Specimen identifier

+ Request (application/json)
    + Headers
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)    
        + `status_reason` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `specimen_reject_reasons` (string)
                    + code: `default` (string)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Cancel Specimen [PATCH /api/patients/{patient_id}/specimens/{id}/actions/cancel]

This method must be used to cancel existing Specimen. Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority)

**Important**
1. Signed content of a Specimen must be equal to the Specimen stored in DB. See Get Specimen details
2. status_reason must be added to signed content
3. status must be changed to `entered_in_error` for the purpose of displaying in the signed content

Please see [Specimen status model](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/17629118869/RC.+Specimen+status+model+EN) and Dummy Cancel Specimen for more details


**Scopes required:** `specimen:cancel`

It can be processed in async way only, so Server might answer with:
http code| processing method | Client recommendations
--|--|--
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

+ Parameters
    + patient_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique patient identifier
    + id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique Specimen identifier
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Dummy Cancel Specimen [PATCH /api/patients/{patient_id}/specimens/{id}/actions/cancel/dummy]
+ Parameters
    + patient_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique patient identifier
    + id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique Specimen identifier
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (Specimen_Response)
        + `status_reason` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `specimen_cancel_reasons` (string)
                    + code: `default` (string)
        + `status`: `entered_in_error` (string, required)
        

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


## Patient Summary [/api/patients/{patient_id}/summary]

----
**Patient Summary** - is a set of services that provides access to the patient's basic Medical Data.
Patients summary shows only entities that are not in status `entered-in-error`. 

Basic Medical Data includes the following entities:

Entity                      | Access level 
----------------------------|-------------
Episode                     | Short list of episodes
Allergy Intolerance         | All *Allergy Intolerances* are available for Patient Summary
Immunizations               | All *Immunizations* are available for Patient Summary
Conditions                  | Only specific *Conditions* are available for Patient Summary. Restrictions is based on *condition.code*
Observations                | Only specific *Observations* are available for Patient Summary. Restrictions is based on *observation.code*
Diagnoses                   | Only current diagnoses related to active *Episodes* that refer to specific *Conditions* are available for Patient Summary. Restrictions is based on *condition.code*
Risk Assessment             | All patient's risk assessments
Device                      | All patient`s devices
Medication Statment         | All patient`s medication statments
Diagnostic Report           | Only specific *Diagnostic Reports* are available for Patient Summary
Procedure                   | Only specific *Procedures* are available for Patient Summary
Encounter                   | All patient's encounters with reduced info
Clinical Impression         | Only specific *Clinical Impressions* are available for Patient Summary


### Get Short Episodes by search params [GET /api/patients/{patient_id}/summary/episodes{?period_from,period_to,page,page_size}]

This web service returns brief information in order not to disclose confidential and sensitive data. Access to full episode data is restricted by patient's approval.
If you have an approval - you can obtain episode details and nested entities through `/episode/:id/*` web services.

**Scopes required:** `TBD`

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `page`: 2 (number, optional) - Page number
    + `page_size`: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `period_start_from`: `2017-01-01` (string, optional)
    + `period_start_to`: `2018-01-01` (string, optional)
    + `period_end_from`: `2017-01-01` (string, optional)
    + `period_end_to`: `2018-01-01` (string, optional)
+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data(array[`Episode_Of_Care_Short`])

### Get Short Encounters by search params [GET /api/patients/{patient_id}/summary/encounters{?status,episode_id,type,class,performer_speciality,date_from,date_to}]
The endpoint returns a list of short Encounter info filtered by search params.
**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + `period_start_from`: `2000-01-01`(string, optional) - Start date of the period of encounter initiation period. Format DATE '2017-08-16'. Example: 2017-08-16
    + `period_start_to`: `2000-01-10`(string, optional) - End date of the period of encounter initiation period. Format DATE '2017-09-16'. Example: 2017-09-16.
    + `period_end_from`: `2000-01-05`(string, optional) - Start date of the period of encounter ending period. Format DATE '2017-08-20'. Example: 2017-08-20.
    + `period_end_to`: `2000-01-15`(string, optional) - End date of the period of treatment ending period. Format DATE '2017-09-20'. Example: 2017-09-20.
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional)
    + status: finished (string, optional)
    + type: discharge (string, optional)
    + class: INPATIENT (string, optional)
    + `performer_speciality`: VIROLOGY (string, optional)
    + `page`: `2` (number, optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Encounter_Short`])

### Get Short Encounter by id [GET /api/patients/{patient_id}/summary/encounters/{encounter_id}]
The endpoint returns single short Encounter info.
**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + encounter_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique encounter identifier
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Encounter_Short`)

### Get Immunizations [GET /api/patients/{patient_id}/summary/immunizations{?page,page_size,code,date_from,date_to}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + `patient_id`: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `vaccine_code`: `wex-10` (string, optional)
    + `date_from`: `1990-01-01` (string, optional) 
    + `date_to`: `2000-01-01` (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Immunization_Response`], fixed-type)

### Get Immunization by id [GET /api/patients/{patient_id}/summary/immunizations/{id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique immunization identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Immunization_Response`, fixed-type)

### Get Allergy Intolerances [GET /api/patients/{patient_id}/summary/allergy_intolerances{?page,page_size,code,onset_date_time_from,onset_date_time_to}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + `patient_id`: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + `page`: `2` (number, optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `227493005` (string, optional) 
    + `onset_date_time_from`: `1990-01-01` (string, optional) 
    + `onset_date_time_to`: `2000-01-01` (string, optional) 

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Allergy_Intolerance_Response`], fixed-type)

### Get Allergy Intolerance by id [GET /api/patients/{patient_id}/summary/allergy_intolerances/{id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique allergy intolerance identifier
 
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Allergy_Intolerance_Response`, fixed-type)

### Get Observations [GET /api/patients/{patient_id}/summary/observations{?page,page_size,code,issued_from,issued_to}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + `patient_id`: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + `page`: `1` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `10569-2` (string, optional)
    + `issued_from`: `1990-01-01` (string, optional)
    + `issued_to`: `2000-01-01` (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Observation_Response`], fixed-type)

### Get Observation by id [GET /api/patients/{patient_id}/summary/observations/{id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique observation identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Observation_Response`, fixed-type)

### Get Conditions [GET /api/patients/{patient_id}/summary/conditions{?page,page_size,code,onset_date_from,onset_date_to}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + `patient_id`: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + `page`: `1` (number,optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `A20` (string, optional)
    + `onset_date_from`: `1990-01-01` (string, optional)
    + `onset_date_to`: `2000-01-01` (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Condition_Response`], fixed-type)

### Get Condition by id [GET /api/patients/{patient_id}/summary/conditions/{id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique condition identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Condition_Response`, fixed-type)

### Get active Diagnoses [GET /api/patients/{patient_id}/summary/diagnoses]

This endpoint returns current diagnoses related only to active episodes. In order to get specific condition details, use [Get Condition by ID](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/patient-summary/get-condition-by-id)

**Scopes required:** `patient_summary:read`

+ Parameters
    + `patient_id`: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + `page`: `1` (number,optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `A20` (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array, required, fixed-type)
            + (Diagnosis_Referrence_Condition)
            + (Diagnosis_Referrence_Condition_2)




### Get Risk Assessment by id [GET /api/patients/{patient_id}/summary/risk_assessments/{risk_assessment_id}]

+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + risk_assessment_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique immunization identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Risk_Assessment_Response`)

### Get Risk Assessments by search params [GET /api/patients/{patient_id}/summary/risk_assessments{?code,asserted_date_from,asserted_date_to,page,page_size,encounter_id,episode_id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `R80` (string, optional) 
    + `asserted_date_from`: `1990-01-01` (string, optional) 
    + `asserted_date_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Risk_Assessment_Response`], fixed-type)

### Get Device by id [GET /api/patients/{patient_id}/summary/devices/{device_id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + device_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique device identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Device_Response`)

### Get Devices by search params [GET /api/patients/{patient_id}/summary/devices{?asserted_date_from,asserted_date_to,page,page_size,type,encounter_id,episode_id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `type`: `spine_board` (string, optional) 
    + `asserted_date_from`: `1990-01-01` (string, optional) 
    + `asserted_date_to`: `2000-01-01` (string, optional) 
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Device_Response`], fixed-type)    
    

### Get Medication Statement by id  [GET /api/patients/{patient_id}/summary/medication_statements/{medication_statement_id}]
**Scopes required:** `patient_summary:read`
+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + medication_statement_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique device identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medication_Statement_Response`)

### Get Medication Statement by search params [GET /api/patients/{patient_id}/summary/medication_statements/{?asserted_date_from,asserted_date_to,page,page_size,medication_code,encounter_id,episode_id}]
**Scopes required:** `patient_summary:read`
+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `medication_code`: `spine_board` (string, optional) 
    + `asserted_date_from`: `1990-01-01` (string, optional) 
    + `asserted_date_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Medication_Statement_Response`], fixed-type)

### Get Diagnostic Report by id [GET /api/patients/{patient_id}/summary/diagnostic_reports/{diagnostic_report_id}]
+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + diagnostic_report_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique DR identifier
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Diagnostic_Report_Response`)

### Get Diagnostic Report by search params [GET /api/patients/{patient_id}/summary/diagnostic_reports/{?issued_from,issued_to,page,page_size,code,encounter_id,context_episode_id, initial_episode_id}]


+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `12345` (string, optional) 
    + `issued_from`: `1990-01-01` (string, optional) 
    + `issued_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Diagnostic_Report_Response`], fixed-type)

### Get Procedure by id [GET /api/patients/{patient_id}/summary/procedures/{procedure_id}]
+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + procedure_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique procedure identifier
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Procedure_Response`)

### Get Procedures by search params [GET /api/patients/{patient_id}/summary/procedures{?status,episode_id,code,service_request_id,recorded_by,managing_organization_id}]
**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + status: completed (enum, optional) - status of procedure
    + `code`: `12345` (string, optional) 
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50


+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Procedure_Response`])

### Get Clinical Impression by id  [GET /api/patients/{patient_id}/summary/clinical_impressions/{clinical_impression_id}]
**Scopes required:** `patient_summary:read`
+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + clinical_impression_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique Clinical impression identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Clinical_Impression_Show`)

### Get Clinical Impressions [GET /api/patients/{patient_id}/summary/clinical_impressions{?encounter_id,episode_id,code,status,page,page_size}]
**Scopes required:** `patient_summary:read`
+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + encounter_id: `7c3da506-804d-4550-8993-bf17f9ee0400` (string, optional) - identifier of the encounter in Clinical impression
    + episode_id: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional)    
    + code: `insulin_1` (string, optional) - Clinical impression's code
    + status: `completed` (string, optional) - Clinical impression's status
    + page: 2 (number, optional) - Page number
    + page_size: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Clinical_Impression_Show`], fixed-type)
        


# Group Service Requests

## Manage Service Requests in patient context [/api/patients/{patient_id}/service_requests]

Use [GET Service Catalog](https://uaehealthapi.docs.apiary.io/#reference/public.-medical-programs/medical-program/get-services-dictionary) to receive current catalog of services. 

### PreQualify Service request [POST /api/patients/{patient_id}/service_requests/prequalify]

This method is used to pre-qualify service request in order to define whether the medical program could be applied in this particular case or not.
**Scopes required:** `service_request:write`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)
        + `service_request` (object, required)
            + include `Service_Request_PreQualify`
                + `context` (Reference_request, optional)
                    + identifier (Identifier)
                        + type (Codeable_Concept)
                            + coding (array, fixed-type)
                                + (Coding)
                                    + code: `encounter` (string)
        + `programs` (array, required) - Medical programs list for qualify
            + (Reference_request)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: medical_program (string)
                
        
+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - THIRD_PERSON
                + number: `+38093*****85` (string, optional)
        + meta (Response__Meta)
        +  data (array[`Qualify_Service_Request_Responce`]))

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Patient is not active` (string, required)


### Create Service request [POST]

This method must be used to register new Service Request in the eHealth. 
Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority).
Service will store signed copy of Service Request in Media Content Storage if all checks is passed. 

Signed content consists of JSON object with Service Request data.

It can be processed in both sync and async methods depends on Server decision.
Depends on processing method Server might answer with:
http code| processing method | Client recommendations
--|--|--
201 | sync | use payload from response
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

**Scopes required:** `service_request:write`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)
        
+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Dummy Service request [POST /dummy/patients/{id}/service_requests]

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (Service_Request_Create)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Get Service requests by search params in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/service_requests{?status}]

This method returns all service requests related to specified episode of care.

**Scopes required:** `service_request:read`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + episode_id: `ef30f210-5328-4f48-bfe6-c7150d4737a6` (string, required) - Unique episode identifier
    + status: active (string, optional) - The status of the service request. Default: active

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Service_Request_Show`])
        

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Episode or patient not found` (string)
            
            
            

### Get Service requests by search params [GET /api/patients/{patient_id}/service_requests{?status,requester_legal_entity,used_by_legal_entity,episode_id,code,care_plan_id}]

This method returns all service requests related to the person filtered by submitted parameters.

**Scopes required:** `service_request:read`

+ Parameters
    + `patient_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + `episode_id`: `ef30f210-5328-4f48-bfe6-c7150d4737a6` (string, optional) - Unique episode identifier
    + `status`: active (string, optional) 
    + `requester_legal_entity`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional)
    + `used_by_legal_entity`: `8075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional)
    + `code`: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional)
    + `care_plan_id`: `8075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) - Unique care plan identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Service_Request_Base`])

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Get Service request details in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/service_requests/{service_request_id}]

**Scopes required:** `service_request:read`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + episode_id: `ef30f210-5328-4f48-bfe6-c7150d4737a6` (string, required) - Unique episode identifier
    + service_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique service request identifier
  

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`Service_Request_Show`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Service request not found` (string)
            

### Get Service request details [GET /api/patients/{patient_id}/service_requests/{service_request_id}]

**Scopes required:** `service_request:read`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + service_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique service request identifier
  

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`Service_Request_Show`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Service request not found` (string)


### Cancel Service request [PATCH /api/patients/{id}/service_requests/{id}/actions/cancel]

This method must be used to cancel existing Service Request. Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority)

**Important**
1. Signed content of service request must be equal to service request stored in DB. See Get Service Request details
2. status_reason and explanatory_letter (optional) must be added to signed content

Please see [Service request (Referral) state model](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583403541/Service+Requests+Status+State+Model) and Dummy Cancel Service Request for more details


**Scopes required:** `service_request:cancel`

It can be processed in both sync and async methods depends on Server decision.
Depends on processing method Server might answer with:
http code| processing method | Client recommendations
--|--|--
201 | sync | use payload from response
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Service_Request_Show`)
        
+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Dummy Cancel Service request [PATCH /api/patients/{id}/service_requests/{id}/actions/cancel/dummy]
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (Service_Request_Base)
        + `status_reason` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/service_request_cancel_reasons` (string)
                    + code: `default` (string)
        + `explanatory_letter`: `Направлення було відмінене у зв'язку з помилкою при виборі пацієнта ` (string, optional)
        

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Recall Service request [PATCH /api/patients/{id}/service_requests/{id}/actions/recall]

This method must be used to recall existing Service Request. Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority)

**Important**
1. Signed content of service request must be equal to service request stored in DB. See Get Service Request details
2. status_reason and explanatory_letter (optional) must be added to signed content

Please see [Service request (Referral) state model](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583403541/Service+Requests+Status+State+Model) and Dummy Recall Service Request for more details

**Scopes required:** `service_request:recall`

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Dummy Recall Service request [PATCH /api/patients/{id}/service_requests/{id}/actions/recall/dummy]
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (Service_Request_Base)
        + `status_reason` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/service_request_recall_reasons` (string)
                    + code: `default` (string)
        + `explanatory_letter`: `Направлення було відкликане у зв'язку з помилкою при виборі пацієнта ` (string, optional)
        

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Resend SMS on Service request [PATCH /api/patients/{patient_id}/service_requests/{service_request_id}/actions/resend]
Method to resend sms on service request.
It can be processed in both sync and async methods depends on Server decision.
Depends on processing method Server might answer with:
http code| processing method | Client recommendations
--|--|--
201 | sync | use payload from response
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

**Scopes required:** `service_request:use`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + service_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique service request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer d368a4b0-4a0e-457a-b267-32359fa6288f
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Service_Request_Show`)
+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

## Manage Service Requests [/api/service_requests]

### Search for a Service requests [GET /api/service_requests{?requisition,status,page,page_size}]

This service must be used to discover service requests by requisition number. If nothing found by requisition number - it will return empty list

**Scopes required:** `service_request:read`

+ Parameters
    + requisition: `AX654-654T` (string, required) - A shared identifier common to all service requests that were authorized more or less simultaneously by a single author, representing the composite or group identifier
    + status: active (string, optional) - The status of the service request. Default: active
    + page: 2 (number, optional) - Page number
    + page_size: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Service_Request_List`])

### Get Service requests in Specimen context [GET /api/specimens/{specimen_id}/service_requests{?status,page,page_size}]

This service must be used to discover service requests relaated to specified Specimen. If nothing found - it will return empty list

**Scopes required:** `service_request:impersonal_read`

+ Parameters
    + `specimen_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique Specimen identifier
    + status: active (string, optional) - The status of the service request.
    + page: 2 (number, optional) - Page number
    + page_size: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array)
            + (`Service_Request_List`)
                + identity (object, required)
                    + gender: MALE (enum, required) - gender of the patient, value from the dictionary GENDER
                        - MALE
                        - FEMALE
                    + age: 35 (number, required) - full years between current date and birth date

### Qualify Service request by ID [POST /api/service_requests/{service_request_id}/actions/qualify]

**Scopes required:** `service_request:use`

+ Parameters
    + service_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique service request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes
        + `programs` (array, required) - Medical programs list for qualify
            + (Reference_request)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: medical_program (string)

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        +  data (array[`Qualify_Service_Request_Responce`]))

### Use Service request [PATCH /api/service_requests/{service_request_id}/actions/use]

**Scopes required:** `service_request:use`

+ Parameters
    + service_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique service request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (Use_Service_Request_Request)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Change Service request status to In progress [PATCH /api/service_requests/{service_request_id}/actions/process]

Will be deprecated!

**Scopes required:** `service_request:makeinprogress`

+ Parameters
    + service_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique service request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Release Service request [PATCH /api/service_requests/{service_request_id}/actions/release]

Will be deprecated!

**Scopes required:** `service_request:use`

+ Parameters
    + service_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique service request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Complete Service request [PATCH /api/service_requests/{service_request_id}/actions/complete]
This method is designed to use Service request after providing services.
Depends on processing method Server might answer with:
http code| processing method | Client recommendations
--|--|--
201 | sync | use payload from response
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

**Scopes required:** `service_request:complete`

+ Parameters
    + service_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique service request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (Complete_Service_Request)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Service_Request_Show`)
            
+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

## Group Device requests

### PreQualify Device request [POST /api/patients/{patient_id}/device_requests/prequalify]

This method is used to pre-qualify Device Request in order to define whether the medical program could be applied in this particular case or not.
**Scopes required:** `device_request:write`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)
        + `device_request` (object, required)
            + include `Device_Request_Base`
            + quantity (object, required)
                + value: 10 (number, required)
                + system: `device_unit` (string, required)
                + code: piece (string, required)
            + `authorize_with`: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional) - identifier of patient's auth method
        + `programs` (array, required) - Medical programs list for qualify
            + (Reference_request)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: medical_program (string)
                
        
+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        +  data (array[`Qualify_Device_Request_Base`]))

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Patient is not active` (string, required)


### Create Device request [POST /api/patients/{patient_id}/device_requests]
This method allows to create Device Request for a person (or preperson) in eHealth.
Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority).
Service will store signed copy of Device Request in Media Content Storage if all checks is passed. 

It can be processed in async way only, so Server might answer with:
http code| processing method | Client recommendations
--|--|--
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

**Scopes required:** `device_request:write`

Look at [Dummy Device request](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/device-requests/create-device-request/dummy-device-request) for more details

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - MPI identifier of the person.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)
        
+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Dummy Device request [POST /api/patients/{patient_id}/device_requests]
+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - MPI identifier of the person.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    

    + Attributes (object)
        + id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
        + include `Device_Request_Base`
        + note: `Some notes` (string, optionnal)
        + `program` (Reference_request, optional)
            + identifier (Identifier, required)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `medical_program` (string)
                + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
        + `status`: `active` (string, required)
        + `authorize_with`: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional) - identifier of patient's auth method


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Qualify Device Request by ID [POST /api/device_requests/{device_request_id}/actions/qualify]

This method is used to qualify (possibility to use device definition for the program) Device request by ID. Fields descriptions are listed in request Example view.

+ Parameters
    + device_request_id: `2848a935-5fd7-48ba-b235-a9b5d475c647` (string, required) - `Device request identifier`

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)
        + location (Reference_request, required) - `Division where device will be dispensed`
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: division (string) 
        + `programs` (array, required) - Medical programs list for qualify
            + (Reference_request)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: medical_program (string)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
        +  data (array[`Qualify_Device_Request_Responce`]))

+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Division is not active` (string, required)



### Get Device requests by search params [GET /api/patients/{patient_id}/device_requests{?status,code,code_reference,requester_legal_entity,requester,encounter,program,context_episode_id,context_care_plan_id,based_on,priority,performer,authored_on_from,authored_on_to}]

This method returns all device requests related to specified patient.

**Scopes required:** `device_request:read`

+ Parameters
    + `patient_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + `status`: active (string, optional) - Status of the Device request
    + `code`: `30222` (string, optional) - Code from device_definition_classification_type dictionary
    + `code_reference`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - Device definition identifier
    + `requester_legal_entity`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - Legal entity identifier
    + `requester`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - Identifier of the Employee who requested the Device request
    + `encounter`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - Encounter identifier
    + `program`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - Medical program identifier
    + `context_episode_id`: `ef30f210-5328-4f48-bfe6-c7150d4737a6` (string, optional) - Episode identifier related to the Encounter which is referenced by the Device request   
    + `based_on`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - Activity or Care plan identifier on which Device request is based on
    + `priority`: `low` (string, optional) - Priority code
    + `performer`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - Identifier of the Employee who performed the Device request
    + `authored_on_from`: `2020-01-01T00:00:00.000Z` (string, optional) - The start date of the period for search by authored_on
    + `authored_on_to`: `2021-01-01T00:00:00.000Z` (string, optional) - The end date of the period for search by authored_on
    + `occurrence_period_start_from`: `2021-01-01T00:00:00.000Z` (string, optional) - The start date of the period for search by occurrence_period_start
    + `occurrence_period_start_to`:  `2021-01-01T00:00:00.000Z` (string, optional) - The end date of the period for search by occurrence_period_start
    + `occurrence_period_end_from`: `2021-01-01T00:00:00.000Z` (string, optional)- The start date of the period for search by occurrence_period_end
    + `occurrence_period_end_to`: `2021-01-01T00:00:00.000Z` (string, optional) - The end date of the period for search by authored_on occurrence_period_end
    
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Device_Request_Response_Base`])

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)            

### Get Device request details [GET /api/patients/{patient_id}/device_requests/{device_request_id}]

**Scopes required:** `device_request:read`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + device_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique device request identifier
  

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`Device_Request_Response_Details`)
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - THIRD_PERSON
                + number: `+38093*****85` (string, optional) - returns if type is OTP 
            + `verification_code`: `1234` (string, optional) - returns for requests with medical program if type is OFFLINE, or if type is OTP and `request_notification_disabled` medical program setting is true

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Device request not found` (string)

### Search for a Device request [GET /api/device_requests{?requisition}]

This service must be used to discover device request by requisition number. If nothing found by requisition number - it will return empty list

**Scopes required:** `device_request:read`

+ Parameters
    + requisition: `AX64-654T-X654-AX65` (string, required) - Device request requisition number

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array)
            + (object)
                + include `Device_Request_Response_Base`
                + identity (`Person_identity`, required)

### Get Device request context [GET /api/patients/{patient_id}/device_requests/{device_request_id}/context]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `device_request_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) -  Device request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medical_Event_Context_Care_Plan_with_Episode_Response`)



### Resend SMS on Device request [PATCH /api/patients/{patient_id}/device_requests/{device_request_id}/actions/resend]
Method to resend sms on Device request
It can be processed in async way only, so Server might answer with:
http code| processing method | Client recommendations
--|--|--
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

**Scopes required:** `device_request:resend`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + device_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique device request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer d368a4b0-4a0e-457a-b267-32359fa6288f
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Revoke Device request [PATCH /api/patients/{patient_id}/device_requests/{device_request_id}/actions/revoke]

This method must be used to revoke existing Device Request. Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority)

**Important**
1. Signed content of Device request must be equal to Device request stored in DB. See [Get Device request details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/device-requests/get-device-request-details/get-device-request-details)
2. status_reason must be added to signed content
3. status must be changed to revoked for the purpose of displaying in the signed content

Please see [Device request status model](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/17573085356/Device+request+status+model) and Dummy Revoke Device request for more details


**Scopes required:** `device_request:revoke`

It can be processed in async way only, so Server might answer with:
http code| processing method | Client recommendations
--|--|--
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Dummy Revoke Device request [PATCH /api/patients/{patient_id}/device_requests/{id}/actions/revoke/dummy]
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (Device_Request_Response_Base)
        + `status_reason` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `device_request_revoke_reasons` (string)
                    + code: `default` (string)
        + `status`: `revoked` (string, required)
        

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Complete Device request [PATCH /api/patients/{patient_id}/device_requests/{device_request_id}/actions/complete]

Method to complete device request

+ Parameters
    + patient_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique patient identifier
    + device_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique device request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)



### Mark in error Device request [PATCH /api/patients/{patient_id}/device_requests/{device_request_id}/actions/mark_in_error]

This method must be used to cancel existing Device Request. Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority)

**Important**
1. Signed content of Device request must be equal to Device request stored in DB. See [Get Device request details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/device-requests/get-device-request-details/get-device-request-details)
2. `status_reason`  must be added to signed content
2. status must be changed to entered_in_error for the purpose of displaying in the signed content

Please see [Device request status model](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/17573085356/Device+request+status+model) and Dummy Mark in error Device request for more details


**Scopes required:** `device_request:mark_in_error`

It can be processed in async way only, so Server might answer with:
http code| processing method | Client recommendations
--|--|--
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Dummy Mark in error Device request [PATCH /api/patients/{patient_id}/device_requests/{id}/actions/mark_in_error/dummy]
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (Device_Request_Response_Base)
        + `status_reason` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `device_request_mark_in_error_reasons` (string)
                    + code: `incorrect_patient` (string)
        + `status` : `entered_in_error` (required) 
        

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

## Group Device dispenses

### Create Device dispense [POST /api/patients/{patient_id}/device_dispenses]

Method to create device dispense
It can be processed in async way only, so Server might answer with:
http code| processing method | Client recommendations
--|--|--
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

**Scopes required:** `device_dispense:write`

+ Parameters
    + patient_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique patient identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (Device_Dispense_Create_Request)
        + verification_code: `2364` (string, optional) - Verification code obtained from patient, optional if Device request without a program
        + `status`: `in_progress` (string, required)


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Complete Device dispense [PATCH /api/patients/{patient_id}/device_dispenses/{device_dispense_id}/actions/complete]

Method to complete device dispense

Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority).
Service will store signed copy of Device Dispense in Media Content Storage if all checks are passed. 

**Important**
1. Signed content of Device dispense must be equal to Device dispense stored in DB. See Get Device dispense details
2. `what_handed_over` and `payment_amount`   must be added to signed content
3. status must be changed to completed for the purpose of displaying in the signed content

It can be processed in async way only, so Server might answer with:
http code| processing method | Client recommendations
--|--|--
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

**Scopes required:** `device_dispense:complete`

Look at [Dummy Complete Device dispense](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/device-dispenses/complete-device-dispense/dummy-complete-device-dispense) for more details

+ Parameters
    + patient_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique patient identifier
    + device_dispense_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique device dispense identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Dummy Complete Device Dispense [PATCH /api/patients/{patient_id}/device_dispenses/{device_dispense_id}/actions/complete]

+ Parameters
    + patient_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique patient identifier
    + device_dispense_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique device dispense identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (Device_Dispense_Complete_Request)


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Get Device dispenses by search params [GET /api/device_dispenses{?based_on,performer_legal_entity,location,performer,status,when_handed_over_from,when_handed_over_to,part_of, encounter, context_episode_id, origin_episode_id, device_code,device, program, performer_legal_entity,inserted_at_from,inserted_at_to,page,page_size}]

This method returns all device dispenses related to legal entity.

**Scopes required:** `device_dispense:read`

+ Parameters
    + `based_on`: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional)
    + `location`: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional)
    + `performer`: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional)    
    + `status`: completed (string, optional)
    + `when_handed_over_from`: `2023-08-02T10:45:16.000Z` (string, optional) - date of dispense
    + `when_handed_over_to`: `2023-08-02T10:45:16.000Z` (string, optional) - date of dispense
    + part_of: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) - The Procedure that this dispense is a part of
    + encounter: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional)  - Encounter associated with the dispense
    + context_episode_id: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) - Reference to the episode in which related device request was created 
    + origin_episode_id: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) - Reference to the episode in which device dispense was created 
    + `device_code`: `30201` (string, optional) - A code of the device type from `device_definition_classification_type` dictionary
    + `device`:9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) - reference to the device or device definition
    + program: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) 
    + performer_legal_entity: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) 
    + inserted_at_from: `2023-08-02T10:45:16.000Z` (string, optional)
    + inserted_at_to: `2023-08-02T10:45:16.000Z` (string, optional)
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Device_Dispense_Response`])

### Get Device dispenses by search params in patient context [GET /api/patients/{patient_id}/device_dispenses{?based_on,performer_legal_entity,location,performer,status,when_handed_over_from,when_handed_over_to,part_of, encounter, context_episode_id, origin_episode_id, device_code,device, program, performer_legal_entity,inserted_at_from,inserted_at_to,page,page_size}]

This method returns all device dispenses related to the patient.

**Scopes required:** `device_dispense:read`

+ Parameters
    + patient_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique patient identifier
    + `based_on`: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional)
    + `location`: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional)
    + `performer`: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional)    
    + `status`: completed (string, optional)
    + `when_handed_over_from`: `2023-08-02T10:45:16.000Z` (string, optional) - date of dispense
    + `when_handed_over_to`: `2023-08-02T10:45:16.000Z` (string, optional) - date of dispense
    + part_of: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) - The Procedure that this dispense is a part of
    + encounter: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional)  - Encounter associated with the dispense
    + context_episode_id: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) - Reference to the episode in which related device request was created 
    + origin_episode_id: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) - Reference to the episode in which device dispense was created 
    + `device_code`: `30201` (string, optional) - A code of the device type from `device_definition_classification_type` dictionary
    + `device`:9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) - reference to the device resource or device definition
    + program: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) 
    + performer_legal_entity: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) 
    + inserted_at_from: `2023-08-02T10:45:16.000Z` (string, optional)
    + inserted_at_to: `2023-08-02T10:45:16.000Z` (string, optional)
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Device_Dispense_Response`])
        

### Get Device dispense details [GET /api/patients/{patient_id}/device_dispenses/{device_dispense_id}]

**Scopes required:** `device_dispense:read`

+ Parameters
    + patient_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique patient identifier
    + device_dispense_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique device dispense identifier
  

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`Device_Dispense_Response`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Device dispense not found` (string)

### Get Device dispense contexts [GET /api/patients/{patient_id}/device_dispenses/{device_dispense_id}/context]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `device_dispense_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Device dispense identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medical_Event_Context_Episode_with_Origin_Episode_Response`)

### Stop Device Dispense [PATCH /api/patients/{patient_id}/device_dispenses/{device_dispense_id}/actions/stop]

This method is used to stop Device dispense.

It can be processed in async way only, so Server might answer with:
http code| processing method | Client recommendations
--|--|--
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details


**Scopes required:** `device_dispense:stop`

+ Parameters
    + patient_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique patient identifier
    + device_dispense_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique device dispense identifier
    
+ Request

    + Headers
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
        
+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Mark in error Device dispense [PATCH /api/patients/{patient_id}/device_dispenses/{device_dispense_id}/actions/mark_in_error]

This method must be used to cancel existing Device dispense. Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority)

**Important**
1. Signed content of Device dispense must be equal to Device dispense stored in DB. See [Get Device dispense details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/device-dispenses/get-device-dispense-details/get-device-dispense-details)
2. `status_reason`  must be added to signed content
3. status must be changed to entered_in_error for the purpose of displaying in the signed content

Please see [Device dispense status model](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/17575543212/Device+dispense+status+model) and Dummy Mark in error Device dispense for more details


**Scopes required:** `device_dispense:mark_in_error`

It can be processed in async way only, so Server might answer with:
http code| processing method | Client recommendations
--|--|--
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Dummy Mark in error Device dispense [PATCH /api/patients/{patient_id}/device_dispenses/{id}/actions/mark_in_error/dummy]
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (Device_Dispense_Response)
        

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

## Group Approvals
### Create approval [POST /api/patients/{patient_id}/approvals]
Method to create approval: time-limited access to user's resources.
It can be processed in both sync and async methods depends on Server decision.
Depends on processing method Server might answer with:
http code| processing method | Client recommendations
--|--|--
201 | sync | use payload from response
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

Block resources may consist next entities:
Object| Access level
-------|---------
episode_of_care| read
diagnostic_report|read, write
care_plan|read, write
encounter|write
procedure|write
specimen|write


Block child_resource may consist next entities:
Object| Access level
-------|---------
diagnostic_report|read
encounter|read
procedure|read
observation|read
condition|read
activity|read
clinical_impression|read
allergy_intolerance|read
immunization|read
device|read
risk_assessment|read

Block resource_types may consist next entities:
Object| Access level
-------|---------
device| read
device_association|read
detected_issue|read

**Scopes required:** `approval:create`

+ Parameters
    + `patient_id`: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - mpi_id

+ Request (application/json)

    + Headers

            Authorization: Bearer d368a4b0-4a0e-457a-b267-32359fa6288f
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
            
    + Attributes (object)
        + include `Approval_Request`

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data(`Approval_Response`)


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Verify approval [PATCH /api/patients/{patiend_id}/approvals/{id}]

**Scopes required:** `approval:create`

+ Parameters
    + `patiend_id`: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - mpi_id
    + `id`: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - approval_id
    
+ Request (application/json)

    + Headers

            Authorization: Bearer d368a4b0-4a0e-457a-b267-32359fa6288f
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)
        + `code`: 3782 (number)

+ Response 200 (application/json)

### Resend SMS on approval [PATCH /api/patients/{patiend_id}/approvals/{id}/actions/resend]

It can be processed in both sync and async methods depends on Server decision.
Depends on processing method Server might answer with:
http code| processing method | Client recommendations
--|--|--
201 | sync | use payload from response
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

**Scopes required:** `approval:create`

+ Parameters
    + `patiend_id`: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - mpi_id
    + `id`: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - approval_id
    
+ Request (application/json)

    + Headers

            Authorization: Bearer d368a4b0-4a0e-457a-b267-32359fa6288f
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data(`Approval_Response`)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Get approvals [GET /api/patients/{patient_id}/approvals{?granted_to,granted_resources,granted_resource_type,is_verified,reason,is_expired,access_level,page,page_size}]
Method for receiving a list of patient's approvals.
It is allowed only for the doctor who has an active declaration with a patient from url (can get all approvals) or approval is granted to user (can get own approval).

**Scopes required:** `approval:read`

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - identifier of the patient
    + granted_to: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, optional) - identifier of the employee or legal entity to whom access has been granted
    + granted_resources: `7c3da506-804d-4550-8993-bf17f9ee0400` (string, optional) - identifier of the entity for which the approval was created
    + granted_resource_type: `diagnostic_report` (string, optional) - entity type for which the approval was created
    + is_verified: `true` (boolean, optional) - state of verification of approval
    + is_expired: `true` (boolean, optional) - true if expiration date-time less than now, false if expiration date-time greater now
    + reason: `7c3da506-804d-4550-8993-bf17f9ee0401` (string, optional) - type and identifier of entity based on which approval has been created
    + access_level: `read` (string, optional) - access level to data
    + page: 2 (number, optional) - Page number
    + page_size: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Get_Approvals_List`)

### Get approval details [GET /api/patients/{patient_id}/approvals/{id}]
Returns approval details by it's identifier in patient context.
It is allowed only for the doctor who has an active declaration with a patient from url (can get all approvals) or approval is granted to user (can get own approval).

**Scopes required:** `approval:read`

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - identifier of the patient.
    + id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, optional) - identifier of the approval.

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Get_Approval_Details`)

### Cancel approval [PATCH /api/patients/{patiend_id}/approvals/{id}/actions/cancel]
Allows to cancel approval by it's identifier in patient context.
It is allowed only for the doctor who has an active declaration with a patient from url (can cancel all approvals) or approval is granted to user (can cancel own approval).

It can be processed in both sync and async methods depends on Server decision.
Depends on processing method Server might answer with:
http code| processing method | Client recommendations
--|--|--
201 | sync | use payload from response
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

**Scopes required:** `approval:cancel`

+ Parameters
    + `patiend_id`: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - identifier of the patient.
    + `id`: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - identifier of the approval.
    
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data(`Get_Approval_Details`)

## Group Care plan
### Create Care Plan [POST /api/patients/{patient_id}/care_plans]
This method allows to create Care Plan for a person in eHealth.
Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority).
Service will store signed copy of Care Plan in Media Content Storage if all checks is passed. 

It can be processed in both sync and async methods depends on Server decision.
Depends on processing method Server might answer with:
http code| processing method | Client recommendations
--|--|--
201 | sync | use payload from response
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

**Scopes required:** `care_plan:write`

Look at [Dummy Care Plan](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/care-plan/dummy-care-plan/dummy-care-plan) for more details

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - MPI identifier of the person.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Care_Plan_Show`)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Dummy Care Plan [POST /api/patients/{patient_id}/care_plans]

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the person. 

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    
    + Attributes (Care_Plan_Create)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data(`Care_Plan_Show`)


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)
        

### PreQualify Care Plan Activity [POST /api/patients/{patient_id}/care_plans/{care_plan_id}/activities/prequalify]

This method is used to pre-qualify care plan activity in order to define whether the medical program could be applied in this particular case or not.
**Scopes required:** `care_plan:write`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + care_plan_id: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - Unique Care Plan identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)
        + `activity` (object, required)
            + include `Prequalify_Care_Plan_Activity_base`
                + `context` (Reference_request, optional)
                    + identifier (Identifier)
                        + type (Codeable_Concept)
                            + coding (array, fixed-type)
                                + (Coding)
                                    + code: `encounter` (string)
        + `programs` (array, required) - Medical programs list for qualify
            + (Reference_request)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: medical_program (string)
                
        
+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - THIRD_PERSON
                + number: `+38093*****85` (string, optional)
        + meta (Response__Meta)
        +  data (array[`Prequalify_Care_Plan_Activity_Responce`]))

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Patient is not active` (string, required)

### Create Care Plan Activity [POST /api/patients/{patient_id}/care_plans/{care_plan_id}/activities]
This method adds activity to an existing patient's Care Plan.
Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority).
Service will store signed copy of Care Plan activity in Media Content Storage if all checks is passed.

It can be processed in both sync and async methods depends on Server decision.
Depends on processing method Server might answer with:
http code| processing method | Client recommendations
--|--|--
201 | sync | use payload from response
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

**Scopes required:** `care_plan:write`

Look at [Dummy Create Care Plan activity](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/care-plan/create-care-plan-activity/dummy-care-plan-activity) for more details

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the person.
    + `care_plan_id`: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - Unique Care Plan identifier

+ Request (application/json)
    + Headers
        Authorization: Bearer F3GF124Df565FDS234SDF34
        api-key: aDGFDFGT46S5gFGD
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
        
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data(`Care_plan_activity_show`)


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

        
### Dummy Create Care Plan Activity [POST /api/patients/{patient_id}/care_plans/{care_plan_id}/activities]

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the person.
    + `care_plan_id`: `9183a36b-4d45-4244-9339-63d81cd08d9c` (string, required) - Unique Care Plan identifier

+ Request (application/json)
    + Headers
        Authorization: Bearer F3GF124Df565FDS234SDF34
        api-key: aDGFDFGT46S5gFGD
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
        
    + Attributes (`Care_Plan_activity_base`)
        + `detail` (object, required)
            + include `Care_Plan_activity_detail_base`
            + `quantity` (object)
                + value: 13 (number, required)
                + `system`: `MEDICATION_UNIT` (enum, optional) - Can be absent in old version of CPA, is required if kind `medication_request`. `MEDICATION_UNIT` used in activities with kind `medication_request`, `SERVICE_UNIT` - with kind `service_request`
                    - `MEDICATION_UNIT`
                    - `SERVICE_UNIT`
                    - `device_unit`
                + `code`: `MG` (string, optional) - Can be absent in old version of CPA, is required if kind `medication_request`.
            + `daily_amount` (object)
                + value: 13.5 (number, required)
                + `system`: `MEDICATION_UNIT` (enum, optional) - Can be absent in old version of CPA. 
                    - `MEDICATION_UNIT`
                    - `SERVICE_UNIT`
                    - `device_unit`
                + `code`: `MG` (string, optional) - Can be absent in old version of CPA.


+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data(`Care_plan_activity_show`)


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)
        

### Get Care Plan by ID [GET /api/patients/{patient_id}/care_plans/{id}]
Returns care plan details by it's identifier in patient context

**Scopes required:** `care_plan:read`

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + id: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - Care Plan identifier. 

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Care_Plan_Show`)
        + urgent (object, required)
            + `informing_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - THIRD_PERSON
                + phone_number: `+38093*****85` (string, optional)


### Get Care Plans by search params [GET /api/patients/{patient_id}/care_plans{?legal_entity_id,period_date,encounter_id,requisition,based_on,part_of,managing_organization_id,status,page,page_size}]
Returns care plan list filtered by submitted parameters withtin specified patient.

**Scopes required:** `care_plan:read`

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + period_date: `2018-08-02` (date, optional) - date within Care plan's period incleuding start and end dates
    + encounter_id: `7c3da506-804d-4550-8993-bf17f9ee0400` (string, optional) - identifier of the encounter in Care plan
    + based_on: `7c3da506-804d-4550-8993-bf17f9ee0401` (string, optional) - Care Plan identifier on which returned Care plans are based on.
    + part_of: `7c3da506-804d-4550-8993-bf17f9ee0401` (string, optional) - parent Care Plan identifier which includes returned Care plans.
    + managing_organization_id: `80a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, optional)   
    + status: `active` (string, optional) - Care plan's status
    + page: 2 (number, optional) - Page number
    + page_size: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Care_plan_summary`])


### Get Care Plans by requisition [GET /api/care_plans{?requisition,status,page,page_size}]
This service must be used to discover Care plans by requisition number. If nothing found by requisition number - it will return empty list

**Scopes required:** `care_plan:read`

+ Parameters
    + requisition: `0123-4567-89AB-CEIK` (string, required) - requisition number
    + status: `active` (string, optional) - Care plan's status
    + page: 2 (number, optional) - Page number
    + page_size: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array, fixed-type)
            + (`Care_plan_summary`)
                + identity (`Person_identity`, required)


### Get Care Plan Activity by ID [GET /api/patients/{patient_id}/care_plans/{care_plan_id}/activities/{id}]
Returns care plan's activity details by it's identifier within care plan and patient context

**Scopes required:** `care_plan:read`

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + care_plan_id: `9183a36b-4d45-4244-9339-63d81cd08d9c` (string, required) - Care Plan identifier. 
    + id: `75a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Care_plan_activity_show`)
            + `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
            + `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
            + `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
            + `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)


### Get Care Plan activities [GET /api/patients/{patient_id}/care_plans/{care_plan_id}/activities{?author,kind,status,page,page_size}]
Returns all the activities related to the care plan in patient context

**Scopes required:** `care_plan:read`

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + care_plan_id: `9183a36b-4d45-4244-9339-63d81cd08d9c` (string, required) - Care Plan identifier.
    + author: `9183a36b-4d45-4244-9339-63d81cd08d9c` (string, optional) - author of the activity.
    + kind: `service_request` (enum, optional) - kind of the activity.
        - service_request
        - medication_request
        - device_request
    + managing_organization_id: `80a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, optional) - legal entity id
    + status: `scheduled` (string, optional) - Care plan activity status
    + page: 2 (number, optional) - Page number
    + page_size: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array)
            + (object)
                + include `Care_plan_activity_show`
                + `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
                + `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
                + `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
                + `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)



### Cancel Care Plan [PATCH /api/patients/{patient_id}/care_plans/{id}/actions/cancel]

This method must be used to cancel of existing patient's Care plan. Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority)

**Important**
1. Signed content of care plan must be equal to care plan stored in DB. See *Get Care plan by ID*
2. Activities should not be presented in signed content. 
3. $.status_reason must be added to signed content

Please see [Care plan status model](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/2125038784/Care+plan+status+model+EN) and *Dummy Cancel Care plan* for more details

It can be processed in both sync and async methods depends on Server decision.
Depends on processing method Server might answer with:
http code| processing method | Client recommendations
--|--|--
201 | sync | use payload from response
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details


**Scopes required:** `care_plan:write`

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + id: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - Care Plan identifier.
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data(`Care_Plan_Show`)


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Dummy Cancel Care Plan [PATCH /api/patients/{patient_id}/care_plans/{id}/actions/cancel]

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + id: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - Care Plan identifier.
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (`Care_Plan_Show`)
        + `status_reason` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/care_plan_cancel_reasons` (string)
                    + code: `some code` (string)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data(`Care_Plan_Show`)


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Complete Care Plan [PATCH /api/patients/{patient_id}/care_plans/{id}/actions/complete]

This method must be used to complete of existing patient's Care plan.

Please see [Care plan status model](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/2125038784/Care+plan+status+model+EN)

It can be processed in both sync and async methods depends on Server decision.
Depends on processing method Server might answer with:
http code| processing method | Client recommendations
--|--|--
201 | sync | use payload from response
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details


**Scopes required:** `care_plan:write`

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + id: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - Care Plan identifier.
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (object)
        + `status_reason` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/care_plan_complete_reasons` (string)
                    + code: `some code` (string)
    

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data(`Care_Plan_Show`)


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)
        

### Cancel Care Plan Activity [PATCH /api/patients/{patient_id}/care_plans/{care_plan_id}/activities/{id}/actions/cancel]

This method must be used to cancel of existing activity from patient's Care plan. Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority)

**Important**
1. Signed content of activity must be equal to activity stored in DB. See *Get Care plan activity by ID*
2. $.detail.status_reason must be changed in signed content

Please see [Care plan status model](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/2125038784/Care+plan+status+model+EN) and *Dummy Cancel Care plan activity* for more details

It can be processed in both sync and async methods depends on Server decision.
Depends on processing method Server might answer with:
http code| processing method | Client recommendations
--|--|--
201 | sync | use payload from response
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

**Scopes required:** `care_plan:write`

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + care_plan_id: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - Care Plan identifier.
    + id: `7c3da506-804d-4550-8993-bf17f9ee0404` (string, required) - activity identifier.
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data(`Care_plan_activity_show`)
            + `detail` (object, fixed-type)
                + include `Care_Plan_activity_detail_base`
                + status: cancelled (string, required)
                + `status_reason` (Codeable_Concept, required, fixed-type)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `some code` (string)
                            + system: `eHealth/care_plan_activity_cancel_reasons` (string, required)
                + `remaining_quantity` (object)
                    + value: 12 (number, required)
                    + `system`: `MEDICATION_UNIT` (enum, required) - Can be absent in old version of CPA. Same value as in quantity attribute
                        - `MEDICATION_UNIT`
                        - `SERVICE_UNIT`
                        - `device_unit`
                    + `code`: `MG` (string, optional) - Can be absent in old version of CPA. Same value as in quantity attribute
                    + `unit`: `мг` (string, optional) - Can be absennt in old version of CPA. Sets automatically for corresponding code.
                + `remaining_quantity_type`: `for_request` (string, required) - Type of remaining_quantity

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Dummy Cancel Care Plan Activity [PATCH /api/patients/{patient_id}/care_plans/{care_plan_id}/activities/{id}/actions/cancel]

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + care_plan_id: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - Care Plan identifier.
    + id: `7c3da506-804d-4550-8993-bf17f9ee0404` (string, required) - activity identifier.
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (`Care_plan_activity_show`)
        + `detail` (object, fixed-type)
            + include `Care_Plan_activity_detail_base`
            + status: scheduled (enum, required)
                - `in_progress`
                - scheduled
            + `status_reason` (Codeable_Concept, required, fixed-type)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `some code` (string)
                        + system: `eHealth/care_plan_activity_cancel_reasons` (string, required)
            + `remaining_quantity` (object)
                + value: 12 (number, required)
                + `system`: `MEDICATION_UNIT` (enum, required) - Can be absent in old version of CPA. Same value as in quantity attribute
                    - `MEDICATION_UNIT`
                    - `SERVICE_UNIT`
                    - `device_unit`
                + `code`: `MG` (string, optional) - Can be absent in old version of CPA. Same value as in quantity attribute
                + `unit`: `мг` (string, optional) - Can be absennt in old version of CPA. Sets automatically for corresponding code.
            + `remaining_quantity_type`: `for_request` (string, required) - Type of remaining_quantity
        + `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
        + `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
        + `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
        + `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data(`Care_plan_activity_show`)
            + `detail` (object, fixed-type)
                + include `Care_Plan_activity_detail_base`
                + status: cancelled (string, required)
                + `status_reason` (Codeable_Concept, required, fixed-type)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `some code` (string)
                            + system: `eHealth/care_plan_activity_cancel_reasons` (string, required)
                + `remaining_quantity` (object)
                    + value: 12 (number, required)
                    + `system`: `MEDICATION_UNIT` (enum, required) - Can be absent in old version of CPA. Same value as in quantity attribute
                        - `MEDICATION_UNIT`
                        - `SERVICE_UNIT`
                        - `device_unit`
                    + `code`: `MG` (string, optional) - Can be absent in old version of CPA. Same value as in quantity attribute
                    + `unit`: `мг` (string, optional) - Can be absennt in old version of CPA. Sets automatically for corresponding code.
                + `remaining_quantity_type`: `for_request` (string, required) - Type of remaining_quantity


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)
        

### Complete Care Plan Activity [PATCH /api/patients/{patient_id}/care_plans/{care_plan_id}/activities/{id}/actions/complete]

This method must be used to complete of existing activity from patient's Care plan.

It can be processed in both sync and async methods depends on Server decision.
Depends on processing method Server might answer with:
http code| processing method | Client recommendations
--|--|--
201 | sync | use payload from response
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details


+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + care_plan_id: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - Care Plan identifier.
    + id: `7c3da506-804d-4550-8993-bf17f9ee0404` (string, required) - activity identifier.
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    
    + Attributes (object)
        + `outcome_codeable_concept` (array, required, fixed-type)
            + (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `some code` (string)
                        + system: `eHealth/care_plan_activity_outcomes` (string, required)
        + `detail` (object, required, fixed-type)
            + `status_reason` (Codeable_Concept, required, fixed-type)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `some code` (string)
                        + system: `eHealth/care_plan_activity_complete_reasons` (string, required)

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data(`Care_plan_activity_show`)
            + `detail` (object, fixed-type)
                + include `Care_Plan_activity_detail_base`
                + status: completed (string, required)
                + `status_reason` (Codeable_Concept, required, fixed-type)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `some code` (string)
                            + system: `eHealth/care_plan_activity_complete_reasons` (string, required)
                + `remaining_quantity` (object)
                    + value: 12 (number, required)
                    + `system`: `MEDICATION_UNIT` (enum, required) - Can be absent in old version of CPA. Same value as in quantity attribute
                        - `MEDICATION_UNIT`
                        - `SERVICE_UNIT`
                        - `device_unit`
                    + `code`: `MG` (string, optional) - Can be absent in old version of CPA. Same value as in quantity attribute
                    + `unit`: `мг` (string, optional) - Can be absennt in old version of CPA. Sets automatically for corresponding code.
                + `remaining_quantity_type`: `for_request` (string, required) - Type of remaining_quantity


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)
        

## Group Rule engine rules
There are public methods presented to work with a rule engine rules data. 

### Get Rule engine rule list [GET /api/rule_engine_rules{?name,is_active,system,code,page,page_size}]
This web service returns a catalog of all active rule engine rules in eHealth.

+ Parameters
    + `name`: `Some name` (string, optional) - Rule engine rule name
    + `system`: `eHealth/clinical_impression_patient_categories` (string, optional) - Code of rule engine rule system from dictionary `eHealth/rule_engine_dictionaries`
    + `code`: `insulin_1` (string, optional) - Code of rule engine rule from dictionary specified in the system
    + `page`: 2 (number, optional) - Page number
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
        
+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (array)
            + (object)
                + id: `1f8444a0-e48b-440b-a082-c4703233efa2` (string, required) - Rule engine rule identifier
                + name: `Some name` (string, required) - Rule engine rule name
                + code
                    + system: `eHealth/clinical_impression_patient_categories` (string, required) - Code of rule engine rule system from dictionary `eHealth/rule_engine_dictionaries`
                    + code: `insulin_1` (string, required) - Code of rule engine rule from dictionary specified in the system

### Get Rule engine rule details [GET /api/rule_engine_rules/{id}]
This web service returns rule engine rule details filtered by ID with active rules in eHealth.

+ Parameters
    + id: `1f8444a0-e48b-440b-a082-c4703233efa2` (string, required)

+ Request (application/json)

+ Headers
    X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + id: `1f8444a0-e48b-440b-a082-c4703233efa2` (string, required) - Rule engine rule identifier
            + name: `Some name` (string, required) - Rule engine rule name
            + code
                + system: `eHealth/clinical_impression_patient_categories` (string, required) - Code of rule engine rule system from dictionary `eHealth/rule_engine_dictionaries`
                + code: `insulin_1` (string, required) - Code of rule engine rule from dictionary specified in the system
            + description: `Some text` (string, optional) - Rule engine rule description
            + is_active: true (boolean, required) - Rule engine rule status
            + items (array)
                + (object)
                    + value: `Rule engine rule value in Json Logic format` (string, required) - Rule value in Json Logic format
                    + description: `Description of Rule engine rule` (string, required) - Rule  description
                    + number: 1
                + (object)
                    + ...

# Data Structures

## Responses
### `Response_Collection`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)
+ paging (`Response__Pagination`, fixed-type)

### `Response_Collection_OK`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)

### `Response_OK`
+ data (object, fixed-type)
+ meta (Response__Meta, fixed-type)

### `Response__Process_OK`
+ meta (Response__Meta, fixed-type)
+ data (object, fixed-type)
    + affordances (array[Affordance], required) - List of available affordances and their URLs

### `Response_verification_by_phone`
+ `phone_number`: `+380508887700` (string, required)

### `Response_Error`
+ meta (Response__Meta, fixed-type)
    + code: 400 (number)
+ error (Response__Error, fixed-type)

### `Response__Meta`
+ code: 200 (number) - HTTP response code.
+ url: http://example.com/resource (string) - URL to requested resource.
+ type (enum) - Type of data that is located in `data` attribute.
    - object (string) - `data` attribute is a JSON object.
    - list (string) - `data` attribute is a list.
+ `request_id`: `req-adasdoijasdojsda` (string) - [Request ID](http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/request-id). Send it with `X-Request-ID` header.

### `Response__Error`
+ type: error_type (string) - Atom that represents error type.
+ message: Error description (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_DuplicateEntity`
+ type: `object_already_exists` (string) - Atom that represents error type.
+ message: This API already exists (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_ValidationFailed`
+ type: validation_failed (string) - type of an error.
+ message: Validation failed. You can find validators description at our API Manifest: http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors. (string)
+ invalid (array, optional)
    + (object)
        + `entry_type`: `json_data_proprty` (string) - Type of error.
        + `entry`: $.cvv (string) - JSON Path to an invalid property.
        + `rules` (array)
            + (object)
                + `rule`: `required` (string) - String constant that represents validation rule type. List of all types can be found in [API Manifest](http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors).
                + `params` (array) - Validation Parameters.
                + `description`: must be present (string, optional)

### `Response__Pagination`
+ page: 2 (number) - Page number.
+ page_size: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
+ total_entries: 1000 (number) - Total number of objects in collection.
+ total_pages: 20 (number) - Total number of pages.

### `Affordance`
+ action (string, required) - Affordance action.
+ url (string, required)

### `Ext_Reference`
+ reference (Reference_request, optional)
+ text (string, optional)

### `Reference_request`
+ identifier (Identifier)

### `Reference_response`
+ identifier (Identifier)
+ display_value: `null` (string, required) - This field is required in the Reference, so it may be returned empty.


### `Identifier`
+ `type`(Codeable_Concept, required) - Description of identifier
+ `value` : `9183a36b-4d45-4244-9339-63d81cd08d9c` (string, required)- The value that is unique

### `Codeable_Concept`
+ `coding` (array, required, fixed-type)
    + (object)
        + include `Coding`
+ text (string, optional)

### `Coding`
+ system : `eHealth/resources` (string, required)
+ code : `patient` (string, required) - Symbol in syntax defined by the system


### `Period`
+ start : `2018-08-02T10:45:16.000Z`(string, required) - Starting time with inclusive boundary
+ end : `2018-08-02T11:00:00.000Z`(string, optional) - End time with inclusive boundary, if not ongoing

### `Quantity`
+ value : `13,5` (number, required)
+ comparator : `>` (string, optional)
+ unit : `kg` (string, optional) - for future use
+ system : `eHealth/ucum/units` (string, required)
+ code: `kg` (string, required)

### `Range`
+ low (Quantity, required)
+ high (Quantity, required)

### `Timing`
+ event: `2018-08-02T10:45:16.000Z`
+ repeat (object)
    + include `Repeat`
+ code: `TIMING_ABBREVIATION` (string, optional)

### `Repeat`
+ count: 10 (string, optional) - Number of times to repeat
- One Of
    + `bounds_duration` (Quantity, optional)
    + bounds_range (Range, optional)
    + bounds_period (Period, optional)
+ `count_max`: 20 (string, optional) - Maximum number of times to repeat
+ duration: 15 (string, optional) - How long when it happens
+ `duration_max`: 25 (string, optional) - How long when it happens
+ `duration_unit`: `UNITS_OF_TIME` (string, optional) - unit of time dictionary
+ frequency: 1 (string, optional) - Event occurs frequency times per period
+ `requency_max`: 4 (string, optinal) - Event occurs up to requency max times per period
+ `period`: 1 (string, optinal) - Event occurs frequency times per period
+ `period_max`: 3 (string, optional) - Upper limit of period, 3-4 hours
+ `period_unit`: `UNITS_OF_TIME` (string, optional) - unit of time dictionary
+ `day_of_week`: `DAYS_OF_WEEK` (string, optinal) - DAYS OF WEEK dictionary
+ `time_of_day`: `15:30` (string, optinal) - Time of day for action
+ when: `EVENT_TIMING` (optional) - Code for time period of occurrence
+ offset: 20 (string, optinal) - Minutes from event, before or after

## Episode Of Care

### `Episode_Of_Care_Base`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ type  (Coding, required)
    + system : `eHealth/episode_types` (string)
    + code: `primary_care` (string)
+ `status`: `active` (string, required)- `dictionary - eHealth/episode_statuses`
+ name: `Діабет 2018` (string, required)
                    
+ `patient` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    
+ diagnoses_history (array, optional, fixed-type)
    + (object)
        + date: `2018-08-02T10:45:16.000Z` (string, required)
        + evidence (Reference_request, required, fixed-type)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `encounter` (string)
                            
            
        + diagnoses (array, required, fixed-type)
            + (Diagnosis_Referrence_Condition)
            + (Diagnosis_Referrence_Condition_2)
+ managing_organization (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
                    
            
+ period (Period, required)
+ care_manager (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)


### `Episode_Of_Care_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ type  (Coding, required)
    + system : `eHealth/episode_types` (string)
    + code: `primary_care` (string)
+ `status`: `active`  (string, required) - `dictionary - eHealth/episode_statuses`
+ `name`: `Діабет 2018` (string, required)
+ `managing_organization` (Reference_request, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
+ period (object , required)
    + start: `2018-08-02T10:45:16.000Z` (string, required)
+ `care_manager` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)


### `Episode_Of_Care_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ type  (Coding, required)
    + system : `eHealth/episode_types` (string)
    + code: `primary_care` (string) 
+ `status`: `active`  (string, required) - `dictionary - eHealth/episode_statuses`
+ name: `Діабет 2018` (string, required)
+  `status_history`  (array, optional, fixed-type)
    +(object)
        + status: `closed` (string, required)
        + `status_reason` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/episode_closing_reasons` (string)
                    + code: `cured` (string)
        + `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `current_diagnoses` (array, optional, fixed-type)
    + (Diagnosis_Referrence_Condition_2)
+ `diagnoses_history` (array, optional, fixed-type)
    + (object)
        + date: `2018-08-02T10:45:16.000Z` (string, required)
        + evidence (Reference_response, required, fixed-type)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `encounter` (string)
                            
            
        + diagnoses (array, required, fixed-type)
            + (Diagnosis_Referrence_Condition)
            + (Diagnosis_Referrence_Condition_2)
+ `status_history` (array, required, fixed_type)
    + (object)
        + status: `active` (string, required)
        + status reason (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/episode_closing_reasons` (string)
                    + code: `cured` (string) \\ wrong_patient, misspelling
        + `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)            
+ `managing_organization` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
    + display_value: `Медікал Солюшнc` (string, required) - This field is filled on creating and never updated after
            
+ `period` (Period, required)
    + end: `2018-08-03T11:00:00.000Z` (string, optional)
    + start: `2018-08-02T10:45:16.000Z` (string, required)
+ `care_manager` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `closing_summary`: `Носові шляхи вільні, горло рожеве, температура в нормі` (string, optional)    
+ `status_reason` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/episode_closing_reasons` (string)
            + code: `cured` (string) \\ wrong_patient, misspelling
            
+ `explanatory_letter`: `Епізод був відмінений у зв'язку з помилкою при виборі пацієнта ` (string, optional)    


### `Update_Episode`
+ name: `Інсулінонезалежний діабет` (string, optional)
+ `care_manager` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)

                    

### `Cancel_Episode`

+ `explanatory_letter`: `Епізод був відмінений у зв'язку з помилкою при виборі пацієнта ` (string, optional)    
+ `status_reason` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/cancellation_reasons` (string)
            + code: `misspelling` (string) \\ wrong_patient, misspelling
    - text (string)

### `Close_Episode`
+ `period` (object, required)
    + `end`: `2018-08-02T10:45:16.000Z` (string, required)
+ `closing_summary`: `Носові шляхи вільні, горло рожеве, температура в нормі` (string, optional)    
+ `status_reason` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/episode_closing_reasons` (string)
            + code: `cured` (string) \\ wrong_patient, misspelling
    - text (string)

### `Episode_Of_Care_Short`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ name: `Діабет 2018` (string, required)
+ `status`: `active` (string, required)
+ period (Period, required)
    + end: `2018-08-03T11:00:00.000Z` (string, optional)
    + start: `2018-08-02T10:45:16.000Z` (string, required)
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)

### `Episode_Of_Care_Short_With_Diagnoses`
+ include `Episode_Of_Care_Short`
+ `managing_organization` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
    + display_value: `Медікал Солюшнc` (string, required) - This field is filled on creating and never updated after
+ diagnoses (array, required, fixed-type)
    + (Diagnosis_Referrence_Condition_2)  

##Visit

### `Visit_Body`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ period (Period, required)
    + end  : `2018-08-02T10:45:16.000Z` (string, required)

### `Submit_Encounter_Package`

+ `visit` (object, optional, fixed-type)
    + include `Visit_Body`
+ `signed_data` : 'ew0KICAicGVyaW9kIjogew0KIC...' (string, required, fixed-type)




## Diagnosis

### `Diagnosis_Request`
+ `condition` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `condition` (string)
+ `role` (Codeable_Concept, required) - Role that this diagnosis has within the episode of care
    + coding (array, fixed-type)
        + (Coding)
            + `system`: `eHealth/diagnosis_roles`
            + `code`: `CC`
            
    
+ rank: `1` (number, optional) - Ranking of the diagnosis. Max value = 10 (for each role type)

### `Diagnosis_Referrence_Condition_2`

+ `condition` (Reference_response, required) 
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `condition` (string)

+ `code` (Codeable_Concept, required) 
     + coding (array, fixed-type)
        + (Coding)
            + `system`: `eHealth/ICPC2/conditions`,
            + `code`: `A20` - `dictionary eHealth/ICPC2/condition_codes or eHealth/ICD10/condition_codes`                    

            
+ `role` (Codeable_Concept, required) - Role that this diagnosis has within the episode of care
    + coding (array, fixed-type)
        + (Coding)
            + `system`: `eHealth/diagnosis_roles`
            + `code`: `CC`
           
+ rank: `1` (number, optional) - Ranking of the diagnosis (for each role type)

### `Diagnosis_Referrence_Condition`

+ `condition` (Reference_response, required) 
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `condition` (string)
                    
+ `code` (Codeable_Concept, required) 
     + coding (array, fixed-type)
        + (Coding)
            + `system`: `eHealth/ICPC2/conditions`,
            + `code`: `A20` - `dictionary eHealth/ICPC2/condition_codes or eHealth/ICD10/condition_codes`
            
+ `role` (Codeable_Concept, required) - Role that this diagnosis has within the episode of care
    + coding (array, fixed-type)
        + (Coding)
            + `system`: `eHealth/diagnosis_roles`
            + `code`: `CC`
            
+ rank: `1` (number, optional) - Ranking of the diagnosis (for each role type)

## Encouner
### `Encounter_Base` (object)
+ id: `465fb6fe-2dea-4b8a-9ef7-58379d1eaab0` (string, required)
+ `status`: `finised`  (string, required) - `dictionary eHealth/encounter_statuses`
+ period (object , required)
    + start: `2018-08-02T10:45:16.000Z` (string, required)
    + end: `2018-08-02T11:00:00.000Z` (string, required)                       
+ `incoming_referral`(Reference_request, optional, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type)
+ `visit` (Reference_request, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `visit` (string)
                        
+ `episode` (Reference_request, required, fixed-type)   
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `episode` (string)

+ class  (Coding, required)
    + system : `eHealth/encounter_classes` (string)
    + code: `inpatient` (string) - `dictionary eHealth/encounter_classes`
    
    
+ type (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/encounter_types` (string) 
            + code: `11429006` (string)- `dictionary eHealth/encounter_types`
            
+ priority (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/encounter_priority` (string) 
            + code: `routine` (string)- `dictionary eHealth/encounter_types`
                    
+ performer (Reference_request, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: employee (string)
                    
+ reasons (array, optional)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/reasons` (string) 
             + code: `A02` (string) - `dictionary eHealth/ICPC2/reasons`
             
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/ICPC2/reasons` (string)
                + code: `D09` (string)-  `dictionary eHealth/ICPC2/reasons`

+ diagnoses (array, required, fixed-type)
    + (`Diagnosis_Request`)
        
        
+ actions (array, optional, fixed-type) - actions are required for class PHC and forbidden for other classes
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/actions` (string)
             + code: `T47` (string)- `dictionary eHealth/ICPC2/actions`
             
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/actions` (string)
             + code: `T50` (string)- `dictionary eHealth/ICPC2/actions`
+ `action_references` (array, Reference_request, optional) - action references are forbidden for class PHC
    + (object)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `service` (string)
                    
+ division (Reference_request, optional, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
                    
+ prescriptions: 'Дієта №1, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня' (string, optional)
+ supporting_info (array,optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `observation` (string)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `diagnostic_report` (string)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
+ hospitalization (object,optional)
    + admit_source - From where patient was admitted (physician referral, transfer). Field is required if parameter `encounter.type.coding.code = discharge`.
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_admit_source` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_admit_source`
    + re_admission - The type of hospital re-admission that has occurred
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_re_admission` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_re_admission`

    + destination (Reference_request, optional)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: division/legal_entity (string)

    + discharge_disposition - Category or kind of location after discharge. Field is required if parameter `encounter.type.coding.code = discharge`.
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_discharge_disposition` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_discharge_disposition`
    + discharge_department - Department from which patient has been discharged. It is not division. Field is required if parameter `encounter.type.coding.code = discharge`.
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_discharge_department` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_discharge_department`
    + `pre_admission_identifier`: `12345` (string) - Pre-admission identifier

### `Encounter_Request` 
+ encounter (`Encounter_Base`, required, fixed-type)
+ conditions (array, optional, fixed-type)
    + (`Condition_Request`)
+ observations (array, optional, fixed-type)
    + (`Observation_Request_1`)
        + `context` (Reference_request, required)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `encounter` (string)
+ `allergy_intolerances` (array[`Allergy_Intolerance_Request`], optional, fixed-type)
+ immunizations (array[`Immunization_Request`], optional, fixed-type)
+ devices (array[`Device_Request`], optional, fixed-type)
+ `risk_assessments`(array[`Risk_Assessment_Request`], optional, fixed-type)
+ `medication_statements` (array[`Medication_Statement_Request`], optional, fixed-type)
+ `medication_administrations` (array[`Medication_Administration_EncounterPCG_Request`], optional, fixed-type)
+ `diagnostic_reports` (array[`Diagnostic_Report_EncounterPCG_Request`], optional, fixed-type)
+ procedures (array[`Procedure_EncounterPCG_Request`], optional, fixed-type)
+ `clinical_impressions` (array[`Clinical_Impression_EncounterPCG_Request`], optional, fixed-type)
+ specimens (array[`Specimen_EDP_Request`], optional, fixed-type)
+ `device_dispenses`(array[`Device_Dispense_EncounterPCG_Request`], optional, fixed-type)
+ `device_associations` (array[`Device_assosiation_request`], optional, fixed-type)
+ `detected_issues` (array[`Detected_issue_Request`], optional, fixed-type)

### `Encounter_Response`
+ id: `465fb6fe-2dea-4b8a-9ef7-58379d1eaab0` (string, required)
+ `origin_episode` (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `episode` (string)
+ `status`: `finised`  (string, required) - `dictionary eHealth/encounter_statuses`                   
+ period (object , required)
    + start: `2018-08-02T10:45:16.000Z` (string, required)
    + end: `2018-08-02T11:00:00.000Z` (string, required)                       
+ `incoming_referral`(Reference_response, optional, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type)
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ `visit` (Reference_response, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `visit` (string)
                        
+ `episode` (Reference_response, required, fixed-type)   
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `episode` (string)

+ class  (Coding, required)
    + system : `eHealth/encounter_classes` (string)
    + code: `inpatient` (string) - `dictionary eHealth/encounter_classes`

    
+ type (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/encounter_types` (string)
            + code: `PC` (string) - `dictionary eHealth/encounter_types`


+ performer (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: employee (string)
    + display_value: `Шевченко Олесь Вікторович` (string, required) - This field is filled on creating and never updated after

+ reasons (array,required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/reasons` (string) 
             + code: `A02` (string) - `dictionary eHealth/ICPC2/reasons`
             
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/ICPC2/reasons` (string)
                + code: `D09` (string)-  `dictionary eHealth/ICPC2/reasons`
        
+ diagnoses (array, optional, fixed-type)
    + (`Diagnosis_Referrence_Condition`)
        
        
+ actions (array, required, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/actions` (string)
             + code: `T47` (string)- `dictionary eHealth/ICPC2/actions`

    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/actions` (string)
             + code: `T47` (string)- `dictionary eHealth/ICPC2/actions`

+ `action_references`  (array, Reference_response, optional)
    + (object)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `service` (string)

+ division (Reference_response, optional, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
                    
+ prescriptions: 'Дієта №1, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня' (string, optional)
+ supporting_info (array,optional, fixed-type)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `observation` (string)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `diagnostic_report` (string)
+ `cancellation_reason` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/episode_closing_reasons` (string)
            + code: `cured` (string) - wrong_patient, misspelling
            
+ `explanatory_letter`: `Діагноз був відмінений у зв'язку з помилкою при виборі пацієнта ` (string, optional)    
+ hospitalization (object,optional)
    + admit_source - From where patient was admitted (physician referral, transfer)
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_admit_source` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_admit_source`
    + re_admission - The type of hospital re-admission that has occurred
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_re_admission` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_re_admission`

    + destination (Reference_response, optional)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: division/legal_entity (string)

    + discharge_disposition - Category or kind of location after discharge
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_discharge_disposition` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_discharge_disposition`
    + discharge_department - `Department from which patient has been discharged. It is not division`
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_discharge_department` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_discharge_department`
    + `pre_admission_identifier`: `12345` (string) - Pre-admission identifier

### `Cancel_Encounter`
+ encounter (`Encounter_Base` , required, fixed-type)
    + `status`: `entered_in_error` (string) - `dictionary eHealth/encounter_statuses`
    + `explanatory_letter`: `Я, Шевченко Наталія Олександрівна, 20.07.2018 здійснила механічну помилку при внесенні обстеження до системи.` (string, required)    
    + `cancellation_reason` (Codeable_Concept, required)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/cancellation_reasons` (string)
                + code: `misspelling` (string) - `dictionary eHealth/cancellation_reasons`
                    
+ conditions (array, optional, fixed-type)
    + (`Condition_Request`)
        + `verification_status`: `entered_in_error` (string) - `dictionary eHealth/condition_verification_statuses`
+ observations (array, optional, fixed-type)
    + (`Observation_Request_1`)
        + `status`: `entered_in_error` (string)- `dictionary eHealth/observation_statuses`
        + `context` (Reference_request, required)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `encounter` (string)
+ `allergy_intolerances` (array, optional, fixed-type)
    + (`Allergy_Intolerance_Request`)
        + `verification_status`: `entered_in_error` (string)- `dictionary eHealth/allergy_intolerance_verification_statuses`
+ immunizations (array, optional, fixed-type)
    + (`Immunization_Request`)
        + `status`: `entered_in_error` (string)- `dictionary eHealth/immunization_statuses`

+ devices (array, optional, fixed-type)
    + (`Device_Request`)
        + `status`: `entered_in_error` (string)- `dictionary eHealth/device_statuses`
        + `status_reason` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `device_status_reasons` (string)
+ `risk_assessments` (array, optional, fixed-type)
    + (`Risk_Assessment_Request`)
        + `status`: `entered_in_error` (string)- `dictionary eHealth/risk_assessment_statuses`
+ `medication_statements` (array, optional, fixed-type)
    + (`Medication_Statement_Request`)
        + `status`: `entered_in_error` (string)- `dictionary eHealth/medication_statement_statuses`
+ `medication_administrations` (array, optional, fixed-type)
    + (`Medication_Administration_EncounterPCG_Request`)
        + `status`: `entered_in_error` (string)- `dictionary eHealth/medication_administration_statuses`
        + `status_reason`: `default` (string) - `dictionary eHealth/medication_administration_status_reasons`
+ `diagnostic_reports` (array, optional, fixed-type)
    + (`Diagnostic_Report_EncounterPCG_Request`)
        + `status`: `entered_in_error` (string)- `dictionary eHealth/diagnostic_reports_statuses`
+ `procedures` (array, optional, fixed-type)
    + (`Procedure_EncounterPCG_Request`)
        + `status`: `entered_in_error` (string)- `dictionary eHealth/diagnostic_reports_statuses`
        + `explanatory_letter`: `Процедура була відмінена у зв'язку з помилкою при виборі пацієнта ` (string, optional)
+ `clinical_impressions` (array, optional, fixed-type)
    + (`Clinical_Impression_EncounterPCG_Request`)
        + `status`: `entered_in_error` (string)- `dictionary eHealth/clinical_impression_statuses`
+ specimens (array, optional, fixed-type)
    + (`Specimen_EDP_Request`)
        + status: `entered_in_error` (enum, required) - status of the Specimen according to `specimen_statuses`
        + `status_reason` (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `specimen_cancel_reasons` (enum, string)
                        - `specimen_reject_reasons`
                        - `specimen_invalidate_reasons`
                        - `specimen_cancel_reasons`
                    + code: `typo` (string)

+ `device_dispenses`(array, optional, fixed-type)
    + (Device_Dispense_EncounterPCG_Request)
        + `status_reason` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `device_dispense_mark_in_error_reasons` (string)
                    + code: `incorrect_patient` (string)
        + `status` : `entered_in_error` (required)
+ `device_associations` (array, optional, fixed-type)
    + (`Device_assosiation_request`)
        + `status`: `entered_in_error` (string)- `dictionary device_association_statuses`
        + `status_reason` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `device_association_status_reasons` (string)
                    + code: `default` (string)
+ `detected_issues` (array, optional, fixed-type)
    + (`Detected_issue_Request`)
        + `status`: `entered_in_error` (string)- `dictionary detected_issue_statuses`
        + `status_reason` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `detected_issue_status_reasons` (string)
                    + code: `default` (string)
      
### `Paper_referral`
+ requisition: `1111-2222-3333-4444` (string, optional) - `Service request number`
+ requester_legal_entity_name: `Some clinic` (string, optional) - Requester legal entity name
+ requester_legal_entity_edrpou: `12345678` (string, required) - Requester legal entity edrpou
+ requester_employee_name: `John` (string, required) - Requester employee name
+ `service_request_date`: `2018-10-08` (string, required) - Service request date
+ note: `Some notes` (string, optional) - Some notes

### `Encounter_Short`
+ id: `465fb6fe-2dea-4b8a-9ef7-58379d1eaab0` (string, required)
+ `status`: `finised`  (string, required) - `dictionary eHealth/encounter_statuses`                
+ period (object , required)
    + start: `2018-08-02T10:45:16.000Z` (string, required)
    + end: `2018-08-02T11:00:00.000Z` (string, required)                       
+ `episode` (Reference_request, required, fixed-type)   
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `episode` (string)
+ class  (Coding, required)
    + system : `eHealth/encounter_classes` (string)
    + code: `inpatient` (string) - `dictionary eHealth/encounter_classes`
+ type (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/encounter_types` (string)
            + code: `discharge` (string) - `dictionary eHealth/encounter_types`
+ `performer_speciality` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `SPECIALITY_TYPE` (string) - dictionary
            + code: `VIROLOGY` (string) - `code from dictionary SPECIALITY_TYPE`


## Condition
### `Condition_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ primary_source: `false` (boolean, required)
- One Of
    - `asserter` (object, optional)
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)                        
    - `report_origin` (object, optional)
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `patient` (string)
        + text: `зі слів пацієнта` (string)
+ `context` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/ICD10/condition_codes` (string)
            + code: `A89` (string)
+ `clinical_status`: `active` (string, required) - `dictionary - eHealth/condition_clinical_statuses`
+ `verification_status`: `provisional` (string, required) - `dictionary - eHealth/condition_verification_statuses`
+ severity(Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/condition_severities` (string)  
            + code: `55604002` (string)
+ `body_sites` (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/body_sites` (string)
                + code: `head` (string)
+ onset_date: `2018-10-08T09:46:37.694Z` (string, required)//Estimated or actual date,  date-time when condition starts
+ asserted_date: `2018-10-08T09:46:37.694Z` (string, requierd)//Date record was believed accurate last time
+ stage (object, optional)
    + summary (Codeable_Concept, required)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/condition_stages` (string)
                + code: `14803004` (string)
+ evidences (array, optional, fixed-type)
    + (object)
        + codes (array, optional, fixed-type)
            + (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/ICPC2/reasons` (string)
                        + code: `169068008` (string)
                        
        + details (array, optional, fixed-type)
            + (Reference_request)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: `observation` (string)

### `Condition_Response`
+ id: `6fe6d880-f100-4e39-a278-1d14eb8472ef` (string, required)
+ primary_source: `true` (boolean, required)
- One Of
    - `asserter` (object, optional)
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)                        
    - `report_origin` (object, optional)
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `patient` (string)
        + text: `зі слів пацієнта` (string)
+ `context` (Reference_response, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/ICD10/condition_codes` (string)
            + code: `K87` (string)
+ `clinical_status`: `active` (string, required) - `dictionary - eHealth/condition_clinical_statuses`
+ `verification_status`: `provisional` (string, required) - `dictionary - eHealth/condition_verification_statuses`
+ severity(Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/condition_severities` (string)  
            + code: `55604002` (string)
            
    
+ `body_sites` (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/body_sites` (string)
                + code: `head` (string)
                
    
+ onset_date: `2018-10-08T09:46:37.694Z` (string, required)
+ asserted_date: `2018-10-08T09:46:37.694Z` (string, requierd)//Date record was believed accurate last time
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ stage (object, optional)
    + summary (Codeable_Concept, required)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/condition_stages` (string)
                + code: `14803004` (string)
                
+ evidences (array, optional, fixed-type)
    + (object)
        + codes (array, optional, fixed-type)
            + (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/ICPC2/reasons` (string)
                        + code: `169068008` (string)
                        
        + details (array, optional, fixed-type)
            + (Reference_response)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: `observation` (string)
                                
        




## Observation

### `Observation_Request_Base`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status: `valid` (string, required) - `dictionary - eHealth/observation_statuses`
+ `diagnostic_report` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `diagnostic_report` (string)
+ categories (array, required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/observation_categories` (string)
                + code: `vital_signs` (string)
+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/LOINC/observation_codes` (string)
            + code: `10569-2` (string)
- One Of
    - effective_date_time: `2018-08-02T10:45:16.000Z` (string, optional)
    - effective_period (object, optional, fixed-type)
        + start : `2018-08-02T10:45:16.000Z`(string, required) - Starting time with inclusive boundary
        + end : `2018-08-02T11:00:00.000Z`(string, optional) - End time with inclusive boundary, if not ongoing
+ issued: `2018-08-02T10:45:16.000Z` (string, required)
+ primary_source: `true` (boolean, required) - could NOT be false on DRP
- One Of
    - performer (object, optional) - if primary_source=true
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text: `Галина Олександрівна` (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
    - `report_origin` (object, optional) - if primary_source=false
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `mother` (string)
        + text: `зі слів пацієнта` (string)
+ interpretation (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observation_interpretations` (string)
            + code: `L` (string)
+ comment: `Some comment` (string, optional)
+ `body_site` (Codeable_Concept, optional)
     + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/body_sites` (string) 
            + code: `head` (string)
            

+ method (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observation_methods` (string)
            + code: `anamnesis` (string)
            

- One Of
    + value_quantity (Quantity, required)
    + value_codeable_concept (Codeable_Concept, required)
    + value_sampled_data (object, required)
        + origin (number, optional) //SimpleQuantity Zero value and units
        + period (number, optional) // decimal Number of milliseconds between samples
        + factor (number, optional) // decimal Multiply data by this before adding to origin
        + lower_limit (number, optional)// decimal Lower limit of detection
        + upper_limit (number, optional) // Σ 0..1 decimal Upper limit of detection
        + dimensions (number, optional) // positiveInt Number of sample points at each time point
        + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
    + value_string (string, required)
    + value_boolean (boolean, required)
    + value_range (Range, required, fixed-type)
    + value_ratio (object, required)//Need an example 
        + numerator (Quantity, required)
        + denominator (Quantity, required)
    + value_time (string, required)
    + value_date_time (string, required)
    + value_period (Period, required)
+ reference_ranges (array, optional, fixed-type)
    + (object)
        + low (Quantity, optional)
        + high (Quantity, optional)
            + value: `27,5` (number, required)
            + comparator: `<` (string, required)
        + type (Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_types` (string)
                    + code: `normal` (string) - `dictionary - eHealth/reference_range_types`
                        
        + `applies_to`(Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_applications` (string)
                    + code: `male` (string) - `dictionary - eHealth/reference_range_applications`
                     
        + age (Range, optional)
            + low (Quantity, optional)
                + value : `18` (number, required)
                + comparator : `>` (string, optional)
                + unit : `years` (string, optinal)
                - system  (string, optional)
                - code (string, optional)
            + high (Quantity, optional)
                + value : `35` (number, required)
                + comparator : `<` (string, optional)
                + unit : `years` (string, optinal)
                - system (string, optional)
                - code (string, optional)
        + text: `Some text` (string, optional)
+ `reaction_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `immunization` (string)
    
+ components (array, optional, fixed-type)
    + (object)
        + code (Codeable_Concept, required)
        - One Of
            + value_string: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.` (string, required)
            + value_quantity (Quantity, required)
            + value_codeable_concept (Codeable_Concept, required)
            + value_sampled_data (object, required)
                + origin (number, optional) //SimpleQuantity Zero value and units
                + period (number, optional) // decimal Number of milliseconds between samples
                + factor (number, optional) // decimal Multiply data by this before adding to origin
                + lowerLimit (number, optional)// decimal Lower limit of detection
                + upperLimit (number, optional) // Σ 0..1 decimal Upper limit of detection
                + dimensions (number, optional) // positiveInt Number of sample points at each time point
                + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
            
            + value_boolean (boolean, required)
            + value_range (object, required, fixed-type)
                + low (Quantity, required)
                + high (Quantity, required)
            + value_ratio (object, required)//Need an example 
                + numerator (Quantity, required)
                + denominator (Quantity, required)
            + value_time (string, required)
            + value_date_time (string, required)
            + value_period (Period, required)
        + interpretation (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/observation_interpretations` (string)
                    + code: `L` (string)
                    
        + reference_ranges (array, optional, fixed-type)
            + (object)
                + low (Quantity, optional)
                + high (Quantity, optional)
                    + value: `27,5` (number, required)
                    + comparator: `<` (string, required)
                + type (Codeable_Concept, optional)
                    +  coding (array, fixed-type)
                        + (Coding)
                            + system: `eHealth/reference_range_types` (string)
                            + code: `normal` (string) - `dictionary - eHealth/reference_range_types`
                                
                + `applies_to` (Codeable_Concept, optional)
                    +  coding (array, fixed-type)
                        + (Coding)
                            + system: `eHealth/reference_range_applications` (string)
                            + code: `male` (string) - `dictionary - eHealth/reference_range_applications`
                             
                + age (Range, optional)
                    + low (Quantity, optional)
                        + value : `18` (number, required)
                        + comparator : `>` (string, optional)
                        + unit : `years` (string, optinal)
                        - system  (string, optional)
                        - code (string, optional)
                    + high (Quantity, optional)
                        + value : `35` (number, required)
                        + comparator : `<` (string, optional)
                        + unit : `years` (string, optinal)
                        - system (string, optional)
                        - code (string, optional)
                
                + text: `Some text` (string, optional)
+ specimen (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `specimen` (string)

+ device (Reference_response, optional) - Item used during observation.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `equipment` (string)                     

###  `Observation_Request_Base_DRP`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status: `valid` (string, required) - `dictionary - eHealth/observation_statuses`
+ `diagnostic_report` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `diagnostic_report` (string)
+ categories (array, required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/observation_categories` (string)
                + code: `vital_signs` (string)
                

+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/LOINC/observation_codes` (string)
            + code: `10569-2` (string)
            

- One Of
    + effective_date_time: `2018-08-02T10:45:16.000Z` (string, optional)
    + effective_period (Period, optional, fixed-type)
+ issued: `2018-08-02T10:45:16.000Z` (string, required)

+ primary_source: `true` (boolean, required) - could NOT be false on DRP
+ `performer` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)

+ interpretation (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observation_interpretations` (string)
            + code: `L` (string)
            
    
+ comment: `Some comment` (string, optional)
+ `body_site` (Codeable_Concept, optional)
     + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/body_sites` (string) 
            + code: `head` (string)
            

+ method (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observation_methods` (string)
            + code: `anamnesis` (string)
            

- One Of
    + value_quantity (Quantity, required)
    + value_codeable_concept (Codeable_Concept, required)
    + value_sampled_data (object, required)
        + origin (number, optional) //SimpleQuantity Zero value and units
        + period (number, optional) // decimal Number of milliseconds between samples
        + factor (number, optional) // decimal Multiply data by this before adding to origin
        + lower_limit (number, optional)// decimal Lower limit of detection
        + upper_limit (number, optional) // Σ 0..1 decimal Upper limit of detection
        + dimensions (number, optional) // positiveInt Number of sample points at each time point
        + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
    + value_string (string, required)
    + value_boolean (boolean, required)
    + value_range (Range, required, fixed-type)
    + value_ratio (object, required)//Need an example 
        + numerator (Quantity, required)
        + denominator (Quantity, required)
    + value_time (string, required)
    + value_date_time (string, required)
    + value_period (Period, required)
+ reference_ranges (array, optional, fixed-type)
    + (object)
        + low (Quantity, optional)
        + high (Quantity, optional)
            + value: `27,5` (number, required)
            + comparator: `<` (string, required)
        + type (Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_types` (string)
                    + code: `normal` (string) - `dictionary - eHealth/reference_range_types`
                        
        + `applies_to`(Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_applications` (string)
                    + code: `male` (string) - `dictionary - eHealth/reference_range_applications`
                     
        + age (Range, optional)
            + low (Quantity, optional)
                + value : `18` (number, required)
                + comparator : `>` (string, optional)
                + unit : `years` (string, optinal)
                - system  (string, optional)
                - code (string, optional)
            + high (Quantity, optional)
                + value : `35` (number, required)
                + comparator : `<` (string, optional)
                + unit : `years` (string, optinal)
                - system (string, optional)
                - code (string, optional)
        + text: `Some text` (string, optional)
+ `reaction_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `immunization` (string)
    
+ components (array, optional, fixed-type)
    + (object)
        + code (Codeable_Concept, required)
        - One Of
            + value_string: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.` (string, required)
            + value_quantity (Quantity, required)
            + value_codeable_concept (Codeable_Concept, required)
            + value_sampled_data (object, required)
                + origin (number, optional) //SimpleQuantity Zero value and units
                + period (number, optional) // decimal Number of milliseconds between samples
                + factor (number, optional) // decimal Multiply data by this before adding to origin
                + lowerLimit (number, optional)// decimal Lower limit of detection
                + upperLimit (number, optional) // Σ 0..1 decimal Upper limit of detection
                + dimensions (number, optional) // positiveInt Number of sample points at each time point
                + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
            
            + value_boolean (boolean, required)
            + value_range (object, required, fixed-type)
                + low (Quantity, required)
                + high (Quantity, required)
            + value_ratio (object, required)//Need an example 
                + numerator (Quantity, required)
                + denominator (Quantity, required)
            + value_time (string, required)
            + value_date_time (string, required)
            + value_period (Period, required)
        + interpretation (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/observation_interpretations` (string)
                    + code: `L` (string)
                    
        + reference_ranges (array, optional, fixed-type)
            + (object)
                + low (Quantity, optional)
                + high (Quantity, optional)
                    + value: `27,5` (number, required)
                    + comparator: `<` (string, required)
                + type (Codeable_Concept, optional)
                    +  coding (array, fixed-type)
                        + (Coding)
                            + system: `eHealth/reference_range_types` (string)
                            + code: `normal` (string) - `dictionary - eHealth/reference_range_types`
                                
                + `applies_to` (Codeable_Concept, optional)
                    +  coding (array, fixed-type)
                        + (Coding)
                            + system: `eHealth/reference_range_applications` (string)
                            + code: `male` (string) - `dictionary - eHealth/reference_range_applications`
                             
                + age (Range, optional)
                    + low (Quantity, optional)
                        + value : `18` (number, required)
                        + comparator : `>` (string, optional)
                        + unit : `years` (string, optinal)
                        - system  (string, optional)
                        - code (string, optional)
                    + high (Quantity, optional)
                        + value : `35` (number, required)
                        + comparator : `<` (string, optional)
                        + unit : `years` (string, optinal)
                        - system (string, optional)
                        - code (string, optional)
                
                + text: `Some text` (string, optional)
+ specimen (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `specimen` (string)
                    
+ device (Reference_response, optional) - Item used during observation.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `equipment` (string)

### `Observation_Request_1` (`Observation_Request_Base`)
+ `context` (Reference_request, optional)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)

### `Observation_Request_2` (`Observation_Request_Base`)
+ `context` (Reference_request, optional)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)

### `Observation_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status: `valid` (string, required)
+ diagnostic_report (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `diagnostic_report` (string)
+ `context` (Reference_response, optional)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ categories (array, required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/observation_categories` (string)
                + code: `vital_signs` (string)

+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/LOINC/observation_codes` (string)
            + code: `10569-2` (string)
            

- One Of
    + effective_date_time: `2018-10-08T09:46:37.694Z` (string, optional)
    + effective_period (Period, optional)
+ issued: `2018-08-02T10:45:16.000Z` (string, required)
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ primary_source: `false` (boolean, required)
- One Of
    + `performer` (Reference_response, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
        + display_value: `Шевченко Олесь Вікторович` (string, required) - This field is filled on creating and never updated after
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
        + text: `зі слів пацієнта` (string)

+ interpretation (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observation_interpretations` (string)
            + code: `L` (string)
            
    
+ comment: `Some comment` (string, optional)
+ `body_site` (Codeable_Concept, optional)
     + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/body_sites` (string) 
            + code: `head` (string)
            

+ method (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observation_methods` (string)
            + code: `anamnesis` (string)
            

- One Of
    + value_quantity (Quantity, required)
    + value_codeable_concept (Codeable_Concept, required)
    + value_sampled_data (object, required)
        + origin (number, optional) //SimpleQuantity Zero value and units
        + period (number, optional) // decimal Number of milliseconds between samples
        + factor (number, optional) // decimal Multiply data by this before adding to origin
        + lowerLimit (number, optional)// decimal Lower limit of detection
        + upperLimit (number, optional) // Σ 0..1 decimal Upper limit of detection
        + dimensions (number, optional) // positiveInt Number of sample points at each time point
        + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
    + value_string (string, required)
    + value_boolean (boolean, required)
    + value_range (Range, required, fixed-type)
    + value_ratio (object, required)//Need an example 
        + numerator (Quantity, required)
        + denominator (Quantity, required)
    + value_time (string, required)
    + value_date_time (string, required)
    + value_period (Period, required)
+ reference_ranges (array, optional, fixed-type)
    + (object)
        + low (Quantity, optional)
        + high (Quantity, optional)
            + value: `27,5` (number, required)
            + comparator: `<` (string, required)
        + type (Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_types` (string)
                    + code: `normal` (string) - `dictionary - eHealth/reference_range_types`
                        
        + `applies_to`(Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_applications` (string)
                    + code: `male` (string) - `dictionary - eHealth/reference_range_applications`
                     
        + age (Range, optional)
            + low (Quantity, optional)
                + value : `18` (number, required)
                + comparator : `>` (string, optional)
                + unit : `years` (string, optinal)
                - system  (string, optional)
                - code (string, optional)
            + high (Quantity, optional)
                + value : `35` (number, required)
                + comparator : `<` (string, optional)
                + unit : `years` (string, optinal)
                - system (string, optional)
                - code (string, optional)
        + text: `Some text` (string, optional)
+ specimen (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `specimen` (string)
                    
+ device (Reference_response, optional) - Item used during observation.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `equipment` (string) 

## `Immunization`

### `Immunization_Request`
 
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ status : `completed` (string, required), //  completed | entered-in-error
+ not_given : `false` (boolean, required), //   Flag for whether immunization was given
+ `vaccine_code` : (Codeable_Concept, required), //   Vaccine product administered
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/vaccine_codes` (string)
            + code: `HepAHepB` (string) - `dictionary - eHealth/vaccine_codes`
            

+ context : (Reference_request, required), // Encounter administered as part of
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ date :  `2018-10-08T09:46:37.694Z` (string, required), // Vaccination administration date

+ primary_source: `true` (boolean, required)
- One Of
    - performer (object, optional) - if primary_source=true
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text: `Галина Олександрівна` (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
    - `report_origin` (object, optional) - if primary_source=false
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/immunization_report_origins` (string, required)
                + code: `mother` (string)
        + text: `зі слів пацієнта` (string)
                    
+ manufacturer : `VacinePro Manufacturer` (string, optional), // Vaccine manufacturer
+ lot_number : `AAJN11K` (string, optional), // Vaccine lot number
+ expiration_date : `2018-10-08T09:46:37.694Z` (string, optional), // Vaccine expiration date
+ site : ( Codeable_Concept, optional), // Body site vaccine  was administered
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/immunization_body_sites` (string)
            + code: `oral` (string) - `dictionary - eHealth/immunization_body_sites`
            
+ route : ( Codeable_Concept , optional), // How vaccine entered body
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/vaccination_routes` (string)
            + code: `IM` (string)- `dictionary - eHealth/vaccination_routes`
            
+ dose_quantity: ( Quantity, optional), // Amount of vaccine administered
    + value : `18` (number, required)
    - comparator  (string, optional)
    + unit : `mg` (string, optinal)
    + system: `eHealth/immunization_dosage_units` (string, optional)
    - code (string, optional)

+ `explanation`  (object , optional)// Administration/non-administration reasons
    - One Of
        - `reasons` (array, optional)
            + (object)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/reason_explanations` (string, required)
                        + code: `immunization_by_calendar` (string)
                + text: `Планове за календарем щеплень` (string)
        - `reasons_not_given` (object, optional) - Why immunization did not occurr
            + coding (array, optional, fixed-type)
                + object
                    + system: `eHealth/reason_not_given_explanations` (string, required)
                    + code: `lack_of_injection_supply` (string)
            + text: `відсутність ін'єкційних матеріалів` (string)

+ `vaccination_protocols` : (array, optional, fixed_type)// What protocols was followed
    + (object)
        + dose_sequence : 1 (number, optional), // Dose number within series
        + description : Vaccination Protocol Sequence 1 (string, optional), // Details of vaccine protocol
        + `authority`  (Codeable_Concept , optional) // Who is responsible for protocol
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/vaccination_authorities` (string)
                    + code: `WVO` (string)
                        
        + series : Vaccination Series 1 (string, optional), // Name of vaccine series
        + series_doses : 2 (number, optional), // Recommended number of doses for immunity
        + target_diseases : (array, required)
            + (Codeable_Concept ), //   Disease immunized against
                +  coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/vaccination_target_diseases` (string)
                        + code: `1857005` (string) -  `dictionary - eHealth/vaccination_target_diseases` 
                        
    
                    


### `Immunization_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ status : `completed` (string, required), //  completed | entered-in-error
+ not_given : `false` (boolean, required), //   Flag for whether immunization was given
+ `vaccine_code` : (Codeable_Concept, required), //   Vaccine product administered
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/vaccine_codes` (string)
            + code: `HepAHepB` (string) - `dictionary - eHealth/vaccine_codes`
            

+ context : (Reference_response, required), // Encounter administered as part of
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ date :  `2018-10-08T09:46:37.694Z` (string, required), // Vaccination administration date
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ primary_source: `false` (boolean, required)
- One Of
    - performer (object, optional) - if primary_source=true
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text: `Галина Олександрівна` (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
    - `report_origin` (object, optional) - if primary_source=false
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/immunization_report_origins` (string, required)
                + code: `mother` (string)
        + text: `зі слів пацієнта` (string)
                    
+ manufacturer : `VacinePro Manufacturer` (string, optional), // Vaccine manufacturer
+ lot_number : `AAJN11K` (string, optional), // Vaccine lot number
+ expiration_date : `2018-10-08T09:46:37.694Z` (string, optional), // Vaccine expiration date
+ site  ( Codeable_Concept, optional), // Body site vaccine  was administered
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/immunization_body_sites` (string)
            + code: `oral` (string) - `dictionary - eHealth/immunization_body_sites`
            
+ route : ( Codeable_Concept , optional), // How vaccine entered body
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/vaccination_routes` (string)
            + code: `IM` (string) `dictionary- eHealth/vaccination_routes`
            
+ dose_quantity: ( Quantity, optional), // Amount of vaccine administered
    + value : `18` (number, required)
    - comparator  (string, optional)
    + unit : `mg` (string, required)
    + system: `eHealth/immunization_dosage_units` (string, optional)
    - code (string, optional)

+ `explanation`  (object , optional)// Administration/non-administration reasons
    - One Of
        - `reasons` (object, optional)
            + coding (array, optional, fixed-type)
                + object
                    + system: `eHealth/reason_explanations` (string, required)
                    + code: `immunization_by_calendar` (string)
            + text: `Планове за календарем щеплень` (string)
        - `reasons_not_given` (object, optional) - Why immunization did not occurr
            + coding (array, optional, fixed-type)
                + object
                    + system: `eHealth/reason_not_given_explanations` (string, required)
                    + code: `lack_of_injection_supply` (string)
            + text: `відсутність ін'єкційних матеріалів` (string)
            
+ reactions : (array, optional) // Details of a reaction that follows immunization
    + (object)
        + detail : (Reference_response, optional) , // Additional information on reaction Observation
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `observation` (string)

+ `vaccination_protocols` : (array, optional, fixed_type)// What protocols was followed
    + (object)
        + dose_sequence : 1 (number, optional), // Dose number within series
        + description : Vaccination Protocol Sequence 1 (string, optional), // Details of vaccine protocol
        + `authority`  (Codeable_Concept , optional) // Who is responsible for protocol
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/vaccination_authorities` (string)
                    + code: `WVO` (string)
                        
        + series : Vaccination Series 1 (string, optional), // Name of vaccine series
        + series_doses : 2 (number, optional), // Recommended number of doses for immunity
        + target_diseases : (array, required)
            + (Codeable_Concept ), //   Disease immunized against
                +  coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/vaccination_target_diseases` (string)
                        + code: `1857005` (string) `dictionary - eHealth/vaccination_target_diseases`
                        
                    


## `Allergy_Intolerance`
### `Allergy_Intolerance_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ `clinical_status` : `active` (string, required) - `dictionary - eHealth/allergy_intolerance_clinical_statuses`
+ `verification_status` : `confirmed` (string, required) - `dictionary - eHealth/allergy_intolerance_verification_statuses`
+ type : `allergy` (string, required)- `dictionary - eHealth/allergy_intolerance_types`
+ category : `food`(string, required)- `dictionary - eHealth/allergy_intolerance_categories`
+ criticality : `low`(string, required)- `dictionary - eHealth/allergy_intolerance_criticalities`
+ context (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ code  ( Codeable_Concept, required ), // Code that identifies the allergy or intolerance
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/allergy_intolerance_codes` (string)
            + code: `227493005` (string)- `dictionary - eHealth/allergy_intolerance_codes`

+ `onset_date_time` : `2018-10-08T09:46:37.694Z` (string, required)
+ asserted_date: `2018-10-08T09:46:37.694Z` (string, required)

+ primary_source: `true` (boolean, required)
- One Of
    - `asserter` (object, optional)
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)                        
    - `report_origin` (object, optional)
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `patient` (string)
        + text: `зі слів пацієнта` (string)
+ last_occurrence : `2017-10-08T00:00:00.000Z` (string, optional) , // Date(/time) of last known occurrence of a reaction


### `Allergy_Intolerance_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ `clinical_status` : `active` (string, required) - `dictionary - eHealth/allergy_intolerance_clinical_statuses`
+ `verification_status` : `confirmed` (string, required) - `dictionary - eHealth/allergy_intolerance_verification_statuses`
+ type : `allergy` (string, required)- `dictionary - eHealth/allergy_intolerance_types`
+ category : `food`(string, required)- `dictionary - eHealth/allergy_intolerance_categories`
+ criticality : `low`(string, required)- `dictionary - eHealth/allergy_intolerance_criticalities`
+ context: (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ code ( Codeable_Concept, required ), // Code that identifies the allergy or intolerance
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/allergy_intolerance_codes` (string)
            + code: `227493005` (string)- `dictionary - eHealth/allergy_intolerance_codes`
                

+ onset_date_time : `2016-01-01T00:00:00.000Z` (string, required)
+ asserted_date: `2018-08-02T10:45:00.000Z` (string, required)
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ primary_source: `true` (boolean, required)
- One Of
    - `asserter` (object, optional)
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)                        
    - `report_origin` (object, optional)
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `patient` (string)
        + text: `зі слів пацієнта` (string)
+ last_occurrence : `2018-07-02T00:00:00.000Z` (string, optional) , // Date(/time) of last known occurrence of a reaction


## `Risk_Assesment`
### `Risk_Assessment_Request`
+ id: `70a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ status: `preliminary` (string, required)
+ method (Codeable_Concept, optional) 
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/risk_assesment_methods` (string)
            + code: `deafult_code` (string)- `dictionary - eHealth/risk_assesment_methods`
+ code ( Codeable_Concept, required)
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/risk_assesment_codes` (string)
            + code: `R80` (string)- `dictionary - eHealth/risk_assesment_codes`
+ context: (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ asserted_date: `2018-08-02T10:45:00.000Z` (string, required)
+ primary_source: `true` (boolean, required)
- One Of
    - performer (object, optional) - if primary_source=true
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text: `Галина Олександрівна` (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
    - `report_origin` (object, optional) - if primary_source=false
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `mother` (string)
        + text: `зі слів пацієнта` (string)
+ mitigation: `some text` (string, optional)
+ basis (Ext_Reference, optional)
    + references (array, fixed-type)
        + (object)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `observation` (string)
- One Of
    - reason_references (array, optional)
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `condition` (string)
                + text (string, optional)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
    - `reason_codes` (object, optional)
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/risk_assessment_reasons` (string, required)
                + code: `default_risk_assessment_reason` (string)
        + text: `причина хвороби` (string)        
+ predictions (array, optional, fixed-type)
    + (object)
        + outcome (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/risk_assessment_outcomes` (string)
                    + code: `default_outcome` (string)
        - One Of
            + probability_range (Range, optional)
            + probability_decimal (number, optional)

        + `qualitative_risk` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/risk_assessment_qualitative_risks` (string)
                    + code: `default_qualitative_risk` (string)
        + relative_risk(number, optional)
        - One Of
            + when_range (Range, optional)
            + when_period (Period, optional)
            
        + rationale: `some text` (string, optional)
            
+ mitigation: `some text` (string, optional)
+ comment: `some text` (string, optional)


### `Risk_Assessment_Response`
+ include `Risk_Assessment_Request`
+ inserted_at: `2018-08-02T10:55:00.000Z` (string, optional)
+ updated_at: `2018-08-02T10:55:00.000Z` (string, optional)

## `Device`
### `Device_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ identifier: (array, optional)
   + (Identifier)
        + type (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `external_system` (string) 
                    + code: `prozoro` (string)
+ definition (Reference_request, optional)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `device_definition` (string)
+ name: (array, required) 
    + object
        + `type`: `user_friendly` (enum, required) - Device name type. Dictionary `device_name_type`
            - user_friendly
            - registered
            - patient_reported    
        + value: `Тест-смужки Accu-Chek Active для глюкометра` (string, required) - Device name
+ status:  `inactive` (string, required) - `dictionary - eHealth/device_statuses`
+ serial_number: `NSPX30` (string, optional)
+ parent: (Reference_request, optional)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `device` (string)
+ recorder: (Reference_request, required)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ context: (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ property: (array, optional)
    + object
        + `code` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `device_properties` (string) 
                    + code: `default` (string) - `dictionary -  device_properties`
        - One Of
            - value_quantity (object)
                + value : `13,5` (number, required)
                + comparator : `>` (string, optional)
                + unit : `kg` (string, optional)
                + system : `eHealth/ucum/units` (string, required)
                + code: `kg` (string, required)
            - value_codeable_concept (object)
                + `coding` (array, required, fixed-type)
                    + (object)
                        + system : `some_dictionary` (string, required)
                        + code : `dictionary_value` (string, required) - Symbol in syntax defined by the system
            - value_string: `some description` (string)
            - value_boolean: true (boolean)
            - value_range (object, fixed-type)
                + low (object, required)
                    + value : `13,5` (number, required)
                    + comparator : `>` (string, optional)
                    + unit : `kg` (string, optional)
                    + system : `eHealth/ucum/units` (string, required)
                    + code: `kg` (string, required)
                + high (object, required)
                    + value : `20,5` (number, required)
                    + comparator : `<` (string, optional)
                    + unit : `kg` (string, optional)
                    + system : `eHealth/ucum/units` (string, required)
                    + code: `kg` (string, required)
            - value_integer: 10 (number)
+ type (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `device_definition_classification_type` (string) 
            + code: `2345678` (string)- `dictionary -  device_definition_classification_type`
+ lot_number: `RZ12345678` (string, optional)
+ manufacturer: `GlobalMed, Inc` (string, optional)
+ manufacture_date: `1999-01-01T00:00:00.000Z` (string, optional)
+ expiration_date: `2020-01-01T00:00:00.000Z` (string, optional)
+ model_number: `NSPX30` (string, optional)
+ note: `Імплант був вилучений по причині заміни на новий` (string, optional)

### `Device_assosiation_request`
+ id: `80a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ device (Reference_request, required) - Item used during observation.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `device` (string) 
+ status:  `inactive` (string, required) - `dictionary - device_association_statuses`
+ `body_site` (Codeable_Concept, optional) - Anatomical collection site
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/body_structures` (string)
            + code: `head` (string)
+ association_date: `2024-08-02` (string, optional) - The date of implantation\attachment or explantation\detachment of the device to the patient
+ recorded: `2024-08-05T09:00:00.000Z` (string, required) - The date of setting the direction of the relationship of the device to the patient
+ `context` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ recorder: (Reference_request, required)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
                    

### `Detected_issue_Request`                   
+ id: `80a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status:  `inactive` (string, required) - `dictionary - detected_issue_statuses`
+ code (Codeable_Concept, optional) - Specific type of detected issue
    + coding (array, fixed-type)
        + (Coding)
            + system: `detected_issue_categories` (string) 
            + code: `default` (string)- `dictionary -  detected_issue_categories`
+ encounter (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ identified_date_time : `2018-08-02T10:45:16.000Z`,
+ recorder: (Reference_request, required) - The employee who registered the issue
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ author: (Reference_request, required) - The employee or person who identified the issue
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (enum, required)
                        - employee
                        - patient
+ implicated: (Reference_request, optional) - device which caused an issue in the subject
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `device` (string)   
+ detail: `some description` (string, optional)
+ subject (Reference_request, required) - device that has an issue
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `device` (string)
+ `based_on`: (Reference_request, optional) - another Detected Issue on which this is based on
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `detected_issue` (string)
                

## `Medication Statement`
### `Medication_Statement_Request`
+ id: `80a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ `based_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medication_request` (string)
+ asserted_date: `2018-08-02T10:45:00.000Z` (string, required)
+ status:  `active` (string, required) - `dictionary - eHealth/medication_satement_statuses`
+ context: (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ primary_source: `true` (boolean, required)
- One Of
    - `asserter` (object, optional)
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)                        
    - `report_origin` (object, optional)
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `patient` (string)
        + text: `зі слів пацієнта` (string)
+ effective_period: `Вживає з 2017-го року регулярно` (string, optional) 

+ `medication_code` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/medical_statement_medications` (string) 
            + code: `Spine_board` (string)
+ note: `Some text` (string, optional)
+ dosage: `5 ml/day` (string, optional)

## `Diagnostic Report`
### `Diagnostic_Report_Base_request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ `based_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type)
+ status: `final` (string, required)
+ code (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
+ category (array, required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
             + (Coding)
                + system: `eHealth/diagnostic_report_categories` (string)
                + code: `diagnostic_procedure` (string)
+ effective_period(Period, optional)
+ issued: `2018-10-08T09:46:37.694Z` (string, required)
+ conclusion: `At risk of osteoporotic fracture` (string, optional)
+ `conclusion_code` (Codeable_Concept)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/ICD10_AM/condition_codes` (string)
            + code: `H04.2` (string)
+ `recorded_by` (Reference_request, required)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ specimens (array, optional)
    + (Reference_request)
        + identifier (Identifier, optional, fixed-type)
            + type (Codeable_Concept, required)
                + coding (array, required,fixed-type)
                    + (Coding)
                        + code: `specimen` (string)
+ `used_references` (array, optional) - Items used in the report.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `equipment` (string) 

### `Diagnostic_Report_Base_response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ `based_on` (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type)
+ status: `final` (string, required)
+ code (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
+ category (array, required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
             + (Coding)
                + system: `eHealth/diagnostic_report_categories` (string)
                + code: `diagnostic_procedure` (string)
+ effective_period(Period, optional)
+ issued: `2018-10-08T09:46:37.694Z` (string, required)
+ conclusion: `At risk of osteoporotic fracture` (string, optional)
+ `conclusion_code` (Codeable_Concept)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/ICD10_AM/condition_codes` (string)
            + code: `H04.2` (string)
+ `recorded_by` (Reference_response, required)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
    + display_value: `Опанасенко Олексій Володимирович` (string, required) - This field is filled on creating and never updated after
+ specimens (array, optional)
    + (Reference_response)
        + identifier (Identifier, optional, fixed-type)
            + type (Codeable_Concept, required)
                + coding (array, required,fixed-type)
                    + (Coding)
                        + code: `specimen` (string)
+ `used_references` (array, optional) - Items used in the report.
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `equipment` (string) 


### `Diagnostic_Report_Short_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status: `final` (string, required)
+ code (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
+ category (array, required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
             + (Coding)
                + system: `eHealth/diagnostic_report_categories` (string)
                + code: `diagnostic_procedure` (string)
- One Of
    - effective_period (object, optional, fixed-type)
        + start : `2018-08-02T10:45:16.000Z`(string, required) - Starting time with inclusive boundary
        + end : `2018-08-02T11:00:00.000Z`(string, required) - End time with inclusive boundary
    - effective_date_time: `2018-08-02T10:45:16.000Z` (string, optional)
+ issued: `2018-10-08T09:46:37.694Z` (string, required)
+ `managing_organization` (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_enity` (string)
+ `explanatory_letter`: `Звіт був відмінений у зв'язку з помилкою при виборі пацієнта ` (string, optional)
+ `used_references` (array, optional) - Items used in the report.
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `equipment` (string) 


### `Diagnostic_Report_EncounterPCG_Request`
+ include `Diagnostic_Report_Base_request`
+ encounter (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ primary_source: `true` (boolean, required) - could be false
+ `managing_organization` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_enity` (string)
+ `division` (Reference_request, optional, fixed-type) - Division of legal_entity where DR have been performed.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
- One Of
    - performer (optional) - required if primary_source=true
        - One Of
            - reference (object, optional)
                + identifier (object, optional)
                    + type (object, optional)
                        + coding (array, optional, fixed-type)
                            + object
                                + system: `eHealth/resources` (string, required)
                                + code: `employee` (string)
                        + text: `Галина Олександрівна` (string)
                    + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
            - text: `Галина Олександрівна` (string)
    - `report_origin` (object, optional) - if primary_source=false
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `mother` (string)
        + text: `зі слів пацієнта` (string)
+ `results_interpreter` (optional)
    - One Of
        - reference (object, optional)
            + identifier (object, optional)
                + type (object, optional)
                    + coding (array, optional, fixed-type)
                        + object
                            + system: `eHealth/resources` (string, required)
                            + code: `employee` (string)
                + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
        - text: `Опанасенко Олексій Володимирович` (string, optional)

### `Diagnostic_Report_Package_Request`
+ include `Diagnostic_Report_Base_request`
+ primary_source: `true` (boolean, required) - could NOT be false
+ performer (required)
    - One Of
        - reference (object, optional)
            + identifier (object, optional)
                + type (object, optional)
                    + coding (array, optional, fixed-type)
                        + object
                            + system: `eHealth/resources` (string, required)
                            + code: `employee` (string)
                + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
        - text: `Галина Олександрівна` (string)          
+ `managing_organization` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_enity` (string)
+ `division` (Reference_request, optional, fixed-type) - Division of legal_entity where DR have been performed.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
+ `results_interpreter` (optional)
    - One Of
        - reference (object, optional)
            + identifier (object, optional)
                + type (object, optional)
                    + coding (array, optional, fixed-type)
                        + object
                            + system: `eHealth/resources` (string, required)
                            + code: `employee` (string)
                + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
        - text: `Опсенко Олексій Володимирович` (string, optional)

### `Diagnostic_Report_Package_Request_Cancel`
+ include `Diagnostic_Report_Base_request`
+ `primary_source`: `true` (boolean, required) - could NOT be false
+ performer (required) - required if primary_source=true
    - One Of
        - reference (object, optional)
            + identifier (object, optional)
                + type (object, optional)
                    + coding (array, optional, fixed-type)
                        + object
                            + system: `eHealth/resources` (string, required)
                            + code: `employee` (string)
                    + text: `Галина Олександрівна` (string)
                + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
        - text: `Галина Олександрівна` (string)        
+ `managing_organization` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_enity` (string)
+ `division` (Reference_request, optional, fixed-type) - Division of legal_entity where DR have been performed.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
+ `results_interpreter` (optional)
    - One Of
        - reference (object, optional)
            + identifier (object, optional)
                + type (object, optional)
                    + coding (array, optional, fixed-type)
                        + object
                            + system: `eHealth/resources` (string, required)
                            + code: `employee` (string)
                + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
        - text: `Опсенко Олексій Володимирович` (string, optional)
+ `explanatory_letter`: `Звіт був відмінений у зв'язку з помилкою при виборі пацієнта ` (string, optional)    
+ `cancellation_reason` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/cancellation_reasons` (string)
            + code: `misspelling` (string) \\ wrong_patient, misspelling
    + text (string)


### `Diagnostic_Report_Response`
+ include `Diagnostic_Report_Base_response`
+ inserted_at: `2018-08-02T10:55:00.000Z` (string, optional)
+ updated_at: `2018-08-02T10:55:00.000Z` (string, optional)
+ encounter (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `origin_episode` (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `episode` (string)
+ `division` (Reference_response, optional) - Division of legal_entity where DR have been performed.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
    + display_value: `Перше відділення обласної лікарня №1` (string, optional) - This field is filled on creating and never updated after
+ `managing_organization` (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_enity` (string)
    + `display_value`: `Київська обласна лікарня №1` (string, required) - This field is filled on creating and never updated after          
+ `primary_source`: `true` (boolean, required)
- One Of
    - performer (optional) - required if primary_source=true
        - One Of
            - reference (object, optional)
                + identifier (object, optional)
                    + type (object, optional)
                        + coding (array, optional, fixed-type)
                            + object
                                + system: `eHealth/resources` (string, required)
                                + code: `employee` (string)
                    + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
                + `display_value`: `Галина Олександрівна` (string, required)
            - text: `Галина Олександрівна` (string)
    - `report_origin` (object, optional) - if primary_source=false
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `mother` (string)
        + text: `зі слів пацієнта` (string)
+ `results_interpreter` (optional)
    - One Of
        - reference (object, optional)
            + identifier (object, optional)
                + type (object, optional)
                    + coding (array, optional, fixed-type)
                        + object
                            + system: `eHealth/resources` (string, required)
                            + code: `employee` (string)
                + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
            + `display_value`: `Опанасенко Олексій Володимирович` (string, required)
        - text: `Опанасенко Олексій Володимирович` (string, optional)
+ `recorded_by` (Reference_response, required)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
    + `display_value`: `Опанасенко Олексій Володимирович` (string, required) - This field is filled on creating and never updated after                
+ `explanatory_letter`: `Звіт був відмінений у зв'язку з помилкою при виборі пацієнта ` (string, optional)    
+ `cancellation_reason` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/cancellation_reasons` (string)
            + code: `misspelling` (string) \\ wrong_patient, misspelling
    + text (string)

## `Clinical Impression`
### `Clinical_Impression_EncounterPCG_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status: completed (string, required)
+ description: `Some description of the clinical impression` (string, optional)
+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/clinical_impression_patient_categories` (string)
            + code: `insulin_1` (string)
+ encounter (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
- One Of
    - effective_date_time: `2018-08-02T10:45:16.000Z` (string, optional)
    - effective_period (object, optional, fixed-type)
        + start : `2018-08-02T10:45:16.000Z`(string, required) - Starting time with inclusive boundary
        + end : `2018-08-02T11:00:00.000Z`(string, required) - End time with inclusive boundary
+ assessor (Reference_request, required) - `author of the clinical impression`
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
    + display_value: Петров Іван Іванович
+ previous (Reference_request, optional) - `reference to one of previous clinical impression`
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `clinical_impression` (string)
+ problems (array, optional, fixed-type) - `relevant impressions of patient state`
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (enum)
+ summary: `Some summary` (string, optional)
+ findings (array, optional, fixed-type)
    + (object)
        + `item_reference` (Reference_request, required)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `condition` (enum)
                                - observaton
        + basis: `Some basis` (string, optional)                    
+ supporting_info (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (enum)
                            - procedure
                            - diagnostic_report
                            - encounter
+ note: `Some note` (string, optional)

## `Diagnostic Report Package`
### `Submit_DR_Package`
+ `diagnostic_report` (Diagnostic_Report_Package_Request, required)
+ `observations` (array, optional, fixed-type)
    + (Observation_Request_Base_DRP)
        + `diagnostic_report` (Reference_request, required)
            + identifier (Identifier, optional, fixed-type)
                + type (Codeable_Concept, required)
                    + coding (array, required,fixed-type)
                        + (Coding)
                            + code: `diagnostic_report` (string)

### `Submit_DR_Package_Cancel`
+ `diagnostic_report` (Diagnostic_Report_Package_Request_Cancel, required)
+ `observations` (array, optional, fixed-type)
    + (Observation_Request_Base_DRP)
        + `diagnostic_report` (Reference_request, required)
            + identifier (Identifier, optional, fixed-type)
                + type (Codeable_Concept, required)
                    + coding (array, required,fixed-type)
                        + (Coding)
                            + code: `diagnostic_report` (string)


### `Medication_Statement_Response`
+ include `Medication_Statement_Request`
+ inserted_at: `2018-08-02T10:55:00.000Z` (string, optional)
+ updated_at: `2018-08-02T10:55:00.000Z` (string, optional)

### `Device_Response`
+ include `Device_Request`
+ definition (Reference_response, optional)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `device_definition` (string)
+ parent: (Reference_response, optional)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `device` (string)
+ recorder: (Reference_response, required)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ context: (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `status_reason` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `device_status_reasons` (string)
            + code: `default` (string)
+ inserted_at: `2018-08-02T10:55:00.000Z` (string, optional)
+ updated_at: `2018-08-02T10:55:00.000Z` (string, optional)

### `Device_association_Response`
+ include `Device_assosiation_request`
+ `status_reason` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `device_association_status_reasons` (string)
            + code: `default` (string)
+ device (Reference_response, required) - Item used during observation.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `device` (string)
+ `context` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ recorder: (Reference_response, required)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ inserted_at: `2018-08-02T10:55:00.000Z` (string, optional)
+ updated_at: `2018-08-02T10:55:00.000Z` (string, optional)
+ inserted_by: `2018-08-02T10:55:00.000Z` (string, optional)
+ updated_by: `2018-08-02T10:55:00.000Z` (string, optional)

### `Detected_issue_Response`
+ include `Detected_issue_Request`
+ encounter (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ recorder: (Reference_response, required) - The employee who registered the issue
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ author: (Reference_response, required) - The employee or person who identified the issue
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (enum, required)
                        - employee
                        - patient
+ implicated: (Reference_response, optional) - device which caused an issue in the subject
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `device` (string)   
+ subject (Reference_response, required) - device that has an issue
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `device` (string)
+ `status_reason` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `detected_issue_status_reasons` (string)
            + code: `default` (string)
+ inserted_at: `2018-08-02T10:55:00.000Z` (string, optional)
+ updated_at: `2018-08-02T10:55:00.000Z` (string, optional)
+ inserted_by: `2018-08-02T10:55:00.000Z` (string, optional)
+ updated_by: `2018-08-02T10:55:00.000Z` (string, optional)

### `Clinical_Impression_Show`
+ include `Clinical_Impression_EncounterPCG_Request`
+ inserted_at: `2018-08-02T10:55:00.000Z` (string, optional)
+ updated_at: `2018-08-02T10:55:00.000Z` (string, optional)

### Job
+ status: `pending` (string, required) - status of request processing.
+ eta: `2018-08-02T10:45:16.000Z` (string, optional) - estimated time of arrivals
+ links (array[Link], optional) - links to resources that has been impactedas a job processing result

### Job_Error_403
+ error: Error description (string) - Human-readable error message.
+ eta: `2018-08-02T10:45:16.000Z` (string, optional) - estimated time of arrivals
+ status: `failed` (string, required) - status of request processing
+ status_code: `403` (string, required) - processing result

### Job_Error_404
+ error: Error description (object, fixed-type)
    + type: Error_type (string) - Atom that represents error type.

### Job_Error_409
+ error: Error description (object, fixed-type)
    + message: Error description (string) - Human-readable error message.
    + type: Error_type (string) - Atom that represents error type.
+ eta: `2018-08-02T10:45:16.000Z` (string, optional) - estimated time of arrivals
+ status: `failed` (string, required) - status of request processing
+ status_code: `409` (string, required) - processing result

### Job_Error_422
+ status: `failed` (string, required) - status of request processing
+ status_code: `422` (string, required) - processing result
+ error (`Response__Error_ValidationFailed`, required)
+ eta: `2019-04-26T09:16:15.936` (string, required) 

### Error
+ type: type_atom (string, required) - Atom that represents error type.
+ message: Error description (string, required) - Human-readable error message. This is for developers, not end-users.


### Link
+ entity: `job` (string, required) - name of the entity that link follows to
+ href: `/Jobs/NBXk9EyErUZv1RhXgyvgg` (string, required) - link to entity

### Search_params
+ `page`: 2 (number) - Page number.    
+ `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ `encounter_id`: 09dc3ed7-2169-45d8-8fa3-d918c6839bf9
+ `episode_id`: f48d1b6c-a021-4d6a-a5a4-aee93e152ecc
+ `inserted_at_from`:`1990-01-01`
+ `inserted_at_to`: `2000-01-01`

## Procedures
### Procedure_Request
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) - Unique procedure identifier 
+ `based_on` (Reference_request, optional) - reference to [Service Request](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/service-requests); One of (based_on OR paper_referral) is required
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type) - One of (based_on OR paper_referral) is required
+ `status` : `completed` (enum, required) - Status for provided procedure
    - `completed`
    - `entered_in_error`
+ `status_reason` (Codeable_Concept, optional) - Reason why current status was set to procedure. Is mandatory for `entered_in_error`
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_status_reasons` (string)
            + code: `default` (string)
+ code (Reference_request, required) - code of procedure
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
- One Of
    - `performed_date_time`: `2018-08-02T10:45:16.000Z` (string, optional) - date and time when the procedure have been performed
    - `performed_period` (object , optional) - is required if procedure based on service request with quantity that has code=MINUTE (system=SERVICE_UNIT)
        + start: `2018-08-02T10:45:16.000Z` (string, required)
        + end: `2018-08-12T10:45:16.000Z` (string, required) 
+ `recorded_by` (Reference_request, required) - employee who submit procedure to e-Health
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ primary_source: `true` (boolean, required) - source of procedure information. True - the procedure is done by current doctor, false - according to someone description.
- One Of
    - performer (object, optional) - if primary_source=true
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text: `Галина Олександрівна` (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
    - `report_origin` (object, optional) - if primary_source=false
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `mother` (string)
        + text: `зі слів пацієнта` (string)
+ `division` (Reference_request, optional, fixed-type) - Division of legal_entity where procedure have been performed.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
+ `managing_organization` (Reference_request, required) - Organization where procedure have been performed. Reference to legal_entity
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)

+ `reason_references` (array, optional) - The justification of why the procedure was performed.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
                        
+ `outcome` (Codeable_Concept, optional) - The outcome of the procedure
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_outcomes` (string)
            + code: `default_outcome` (string)
            
+ note: `Додаткова інформація по процедурі` (string, optional) - Any other notes and comments about the procedure.
+ `category` (Codeable_Concept, required) - Classification of the procedure
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_categories` (string)
            + code: `default` (string)

+ used_codes (array,optional)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/assistive_products` (string) 
             + code: `03_05_38` (string)
             
+ used_references (array, optional) - Items used during procedure.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `equipment` (string)                


### Procedure_Response
+ id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique procedure identifier 
+ `based_on` (Reference_response, optional) - reference to [Service Request](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/service-requests)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type)
+ `status` : `completed` (enum, required) - Status for provided procedure
    - `completed`
    - `entered_in_error`
+ `status_reason` (Codeable_Concept, optional) - Reason why current status was set to procedure. Is mandatory for `entered_in_error`
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_status_reasons` (string)
            + code: `default` (string)
+ code (Reference_response, required) - code of procedure
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
- One Of
    - `performed_date_time`: `2018-08-02T10:45:16.000Z` (string, optional) - date and time when the procedure have been performed
    - `performed_period` (object , optional) - is required if procedure based on service request with quantity that has code=MINUTE (system=SERVICE_UNIT)
        + start: `2018-08-02T10:45:16.000Z` (string, required)
        + end: `2018-08-12T10:45:16.000Z` (string, required) 
+ `recorded_by` (Reference_response, required) - employee who submit procedure to e-Health
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
    + display_value: `Шевченко Олесь Вікторович` (string, required) - This field is filled on creating and never updated after
+ primary_source: `true` (boolean, required) - source of procedure information. True - the procedure is done by current doctor, false - according to someone description.
- One Of
    - performer (object, optional) - if primary_source=true
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text: `Галина Олександрівна` (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
    - `report_origin` (object, optional) - if primary_source=false
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `mother` (string)
        + text: `зі слів пацієнта` (string)
+ `division` (Reference_response, optional, fixed-type) - Division of legal_entity where procedure have been performed.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
+ `managing_organization` (Reference_response, required) - Organization where procedure have been performed. Reference to legal_entity
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
    + display_value: `Перше відділення обласної лікарня №1` (string, optional) - This field is filled on creating and never updated after

+ `reason_references` (array, optional) - The justification of why the procedure was performed.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
                        
+ `used_references` (array, optional) - Items used during procedure.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `equipment` (string)                        
                        
+ `outcome` (Codeable_Concept, optional) - The outcome of the procedure
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_outcomes` (string)
            + code: `default_outcome` (string)
            
+ note: `Додаткова інформація по процедурі` (string, optional) - Any other notes and comments about the procedure.
+ `category` (Codeable_Concept, required) - Classification of the procedure
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_categories` (string)
            + code: `default` (string)
+ encounter (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `explanatory_letter`: `Процедура була відмінена у зв'язку з помилкою при виборі пацієнта ` (string, optional)
+ origin_episode (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `episode` (string)
+ complication_details (array, reference, optional) - Any complications that occurred during the procedure, or in the immediate post-performance period. Could be filled only for procedure in encounter package and only with reference to condition from same encounter
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
                        
+ used_codes (array,optional)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/assistive_products` (string) 
             + code: `03_05_38` (string)
+ `focal_device` (object, optional) - Manipulated, implanted, or removed device
    + action (Codeable_Concept, optional) - Kind of change to Device
        + coding (array, fixed-type)
            + (Coding)
             + system: `procedure_focal_device_actions` (string) 
             + code: `some_action` (string)
    + manipulated (Reference_request, required) - Implanted Device used for this procedure
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `device` (string)


### Procedure_Short_Response
+ id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique procedure identifier
+ `status` : `completed` (enum, required) - Status for provided procedure
    - `completed`
    - `entered_in_error`
+ `status_reason` (Codeable_Concept, optional) - Reason why current status was set to procedure. Is mandatory for `entered_in_error`
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_status_reasons` (string)
            + code: `default` (string)
+ code (Reference_response, required) - code of procedure
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
- One Of
    - `performed_date_time`: `2018-08-02T10:45:16.000Z` (string, optional) - date and time when the procedure have been performed
    - `performed_period` (object , optional) - is required if procedure based on service request with quantity that has code=MINUTE (system=SERVICE_UNIT)
        + start: `2018-08-02T10:45:16.000Z` (string, required)
        + end: `2018-08-12T10:45:16.000Z` (string, required) 
+ primary_source: `true` (boolean, required) - source of procedure information. True - the procedure is done by current doctor, false - according to someone description.
+ `managing_organization` (Reference_response, required) - Organization where procedure have been performed. Reference to legal_entity
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
    + display_value: `Перше відділення обласної лікарня №1` (string, optional) - This field is filled on creating and never updated after
+ `category` (Codeable_Concept, required) - Classification of the procedure
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_categories` (string)
            + code: `default` (string)

### Procedure_EncounterPCG_Request
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) - Unique procedure identifier 
+ `status` : `completed` (enum, required) - Status for provided procedure
    - `completed`
    - `entered_in_error`
+ `status_reason` (Codeable_Concept, optional) - Reason why current status was set to procedure. Is mandatory for `entered_in_error`
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_status_reasons` (string)
            + code: `default` (string)
+ `based_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)            
+ code (Reference_request, required) - code of procedure
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
+ encounter (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
- One Of
    - `performed_date_time`: `2018-08-02T10:45:16.000Z` (string, optional) - date and time when the procedure have been performed
    - `performed_period` (object , optional) - is required if procedure based on service request with quantity that has code=MINUTE (system=SERVICE_UNIT)
        + start: `2018-08-02T10:45:16.000Z` (string, required)
        + end: `2018-08-12T10:45:16.000Z` (string, required) 
+ `recorded_by` (Reference_request, required) - employee who submit procedure to e-Health
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ primary_source: `true` (boolean, required) - source of procedure information. True - the procedure is done by current doctor, false - according to someone description.
- One Of
    - performer (object, optional) - if primary_source=true
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text: `Галина Олександрівна` (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
    - `report_origin` (object, optional) - if primary_source=false
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `mother` (string)
        + text: `зі слів пацієнта` (string)
+ `division` (Reference_request, optional, fixed-type) - Division of legal_entity where procedure have been performed.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
+ `managing_organization` (Reference_request, required) - Organization where procedure have been performed. Reference to legal_entity
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
+ `reason_references` (array, optional) - The justification of why the procedure was performed.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)

+ `outcome` (Codeable_Concept, optional) - The outcome of the procedure
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_outcomes` (string)
            + code: `default_outcome` (string)

+ complication_details (array, reference, optional) - Any complications that occurred during the procedure, or in the immediate post-performance period. Could be filled only for procedure in encounter package and only with reference to condition from same encounter
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
+ note: `Додаткова інформація по процедурі` (string, optional) - Any other notes and comments about the procedure.
+ `category` (Codeable_Concept, required) - Classification of the procedure
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_categories` (string)
            + code: `default` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type)
+ used_codes (array,optional)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/assistive_products` (string) 
             + code: `03_05_38` (string)
             
+ used_references (array, optional) - Items used during procedure.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `equipment` (string) 
+ `focal_device` (object, optional) - Manipulated, implanted, or removed device
    + action (Codeable_Concept, optional) - Kind of change to Device
        + coding (array, fixed-type)
            + (Coding)
             + system: `procedure_focal_device_actions` (string) 
             + code: `some_action` (string)
    + manipulated (Reference_request, required) - Implanted Device used for this procedure
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `device` (string) 

### `Medication_Administration_EncounterPCG_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) - Unique medication admnistration identifier
+ `part_of` (array, optional) - A larger event of which this particular event is a component or step.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `Procedure|Medication administration` (string)
+ status : `completed` (enum, required) - Status for provided medication administration
    - `completed`
    - `entered_in_error`
+ category (Codeable_Concept, required) - Type of medication usage
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/medication_administration_categories` (string)
            + code: `409063005` (string)
+ medication (Reference_request, required) - What was administered, medication with type BRAND
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medication` (string)
+ `context` (Reference_request, required) - Encounter or Episode of Care administered as part of
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `performed_date_time`: `2018-08-02T10:55:00.000Z` (string, required) - date and time when the procedure have been performed
+ performer (Reference_request, required) - Who performed the medication administration
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: employee (string)
+ `reason_references` (array, optional) - Condition or observation that supports why the medication was administered
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition|Observation|Diagnostic_report` (string)
+ request (Reference_request, optional) - Request administration performed against
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medication_request` (string)
+ note: `Some notes` (string, optional)
+ dosage (array, required, fixed-type) - Details of how medication was taken. SHALL have at least one of dosage.dose or dosage.rate
    + (Dosage)

### `Dosage`
+ text: `Rapid daily-dose escalation, until tolerated, from 3 mg/d, and then 10 mg/d, to the recommended maintenance dose of 30 mg IV over 120 min, 3 times per wk on alternate days for up to 12 wk` (string, optional) - Free text dosage instructions e.g. SIG
+ site (Codeable_Concept) - Body site administered to
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/anatomical_structure_administration_site_codes` (string)
            + code: `344001` (string)
+ route (Codeable_Concept) - How drug should enter body
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/route_codes` (string)
            + code: `46713006` (string)
+ method (Codeable_Concept) - Technique for administering medication
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/administration_methods` (string)
            + code: `419747000` (string)
+ dose (Simple_Quantity) - Amount of medication per dose
- One Of
    + rate_ratio (Ratio)
    + `rate_quantity` (Simple_Quantity)

### `Simple_Quantity`
+ value: `13,5` (number, required)
+ unit: `mg` (string, optional)
+ system: `eHealth/ucum/units` (string, optional)
+ code: `mg` (string, optional)

### `Ratio`
+ numerator (Simple_Quantity, required)
+ denominator (Simple_Quantity, required)

### `Medication_Administration_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) - Unique medication admnistration identifier
+ `part_of` (array, optional) - A larger event of which this particular event is a component or step.
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `Procedure|Medication administration` (string)
+ status : `completed` (enum, required) - Status for provided medication administration
    - `completed`
    - `entered_in_error`
+ `status_reason` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/procedure_cancel_reasons` (string)
                    + code: `default` (string)
+ category (Codeable_Concept, required) - Type of medication usage
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/medication_administration_categories` (string)
            + code: `409063005` (string)
+ medication (Reference_response, required) - What was administered, medication with type BRAND
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medication` (string)
+ `context` (Reference_response, required) - Encounter or Episode of Care administered as part of
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `performed_date_time`: `2018-08-02T10:55:00.000Z` (string, required) - date and time when the procedure have been performed
+ performer (Reference_response, required) - Who performed the medication administration
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: employee (string)
    + display_value: `Опанасенко Олексій Володимирович` (string, required) - This field is filled on creating and never updated after   
    
+ `managing_organization` (Reference_response, required) - legal entity where medication administration was provided
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
    + display_value: `Київська обласна лікарня №1` (string, required) - This field is filled on creating and never updated after

+ `reason_references` (array, optional) - Condition or observation that supports why the medication was administered
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition|Observation|Diagnostic_report` (string)
+ request (Reference_response, optional) - Request administration performed against
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medication_request` (string)
+ note: `Some notes` (string, optional)
+ dosage (array, required, fixed-type) - Details of how medication was taken. SHALL have at least one of dosage.dose or dosage.rate
    + (Dosage)


## Service Request

### `Service_Request_Base`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ requisition: `AX654654T` (string, required)
+ `status`: `active` (string, required)
+ `program` (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medical_program` (string)
+ `program_processing_status`: new (string, optional)
+ `status_history`  (array, required, fixed-type)
    + (object)
        + status: `closed` (string, required)
        + `status_reason` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/service_request_recall_reasons` (string)
                    + code: `cured` (string)
        + `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
        
+ `program_processing_status_history`  (array, optional, fixed-type)
    + (object)
        + program_processing_status: `new` (string, required)
        + `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
        + `inserted_by`: `f7bdce4c-9d6e-4b08-913c-97c4b972f9be` (string, required)
        
+ `program_service` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `program_service` (string) 
+ intent: `order` (string, required)
+ priority: `routine` (string, optional)
+ based_on (array,optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string, required)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string, required)
+ category (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/service_request_categories` (string)
            + code: `409063005` (string)
+ code (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
+ `subject` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
+ `context` (Reference_response, optional) - encounter on which the service request is based on, optional if focus is set
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
- One of
    - `occurrence_period` (object)
        + start : `2018-08-02T10:45:16.000Z`(string, required) - Starting time with inclusive boundary
        + end : `2018-08-02T11:00:00.000Z`(string, optional) - End time with inclusive boundary, if not ongoing
    - `occurrence_date_time`: `2018-08-02T10:45:16.000Z` (string, optional)
+ `requester_employee` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `requester_legal_entity` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `75a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `reason_reference` (array, required)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
+ `supporting_info` (array, optional, fixed-type)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (string)
+ note: `Some notes` (string, required)
+ patient_instruction: `Some patient instructions` (string, required)
+ expiration_date: `2018-08-02T10:45:16.000Z` (string, required)
+ `permitted_resources` (array, optional)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (string)
+ `used_by_employee` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `inserted_at`: `2018-08-02T10:45:16.000Z` (string, optional)
+ `updated_at`: `2018-08-02T10:45:16.000Z` (string, optional)
+ `completed_with` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `diagnostic_report` (string) - or encounter
+ `used_by_legal_entity` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `performer` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
    + display_value: `Опанасенко Олексій Володимирович` (string, required) - This field is filled on creating and never updated after
+ `location_reference` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `performer_type` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `SPECIALITY_TYPE` (string)
            + code: `DIETETICS` (string)
+ quantity (object)
    + value: 10 (number, required)
    + system: `SERVICE_UNIT` (string, required)
    + code: PIECE (string, required)
    + unit: шт (string)
+ `remaining_quantity` (object)
    + value: 10 (number, required)
    + system: `SERVICE_UNIT` (string, required)
    + code: PIECE (string, required)
    + unit: шт (string)
+ `used_by_legal_entity_history`  (array, optional, fixed-type)
    + (object)
        + `used_by_legal_entity`: (Reference_response, required)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `legal_entity` (string)
                + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
        + `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
        + `inserted_by`: `f7bdce4c-9d6e-4b08-913c-97c4b972f9be` (string, required)
+ `used_by_employee_history`  (array, optional, fixed-type)
    + (object)
        + `used_by_employee`: (Reference_response, required)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `employee` (string)
                + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
        + `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
        + `inserted_by`: `f7bdce4c-9d6e-4b08-913c-97c4b972f9be` (string, required)
+ `status_reason` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/service_request_recall_reasons` (string)
            + code: `cured` (string)
+ specimens (array, optional)
    + (Reference_response)
        + identifier (Identifier, optional, fixed-type)
            + type (Codeable_Concept, required)
                + coding (array, required,fixed-type)
                    + (Coding)
                        + code: `specimen` (string)
+ focus (array, optional) - what the service request is about, when it is not about the subject of record
    + (Reference_response)
        + identifier (Identifier, optional, fixed-type)
            + type (Codeable_Concept, required)
                + coding (array, required,fixed-type)
                    + (Coding)
                        + code: `specimen` (string)

### `Service_Request_Show`
+ include `Service_Request_Base`

### `Service_Request_List`
+ include `Service_Request_Base`
+ identity (`Person_identity`, required) - parametres - last name, first name, second name - can have value NULL

### `Qualify_Service_Request_Responce`
+ `program_id`: `59781de0-2e64-4359-b716-bcc05a32c10f` (string, required) - `Medical program Identifier`
+ `program_name` : `Fee-For-Service`(string, required)
+ `status` : `INVALID` (enum, required) - Status for ability use program for this Service Request
    - VALID
    - INVALID
+ `rejection_reason` : `Service is not included in the program` (string) - Reason to fetch invalid status

### `Service_Request_PreQualify`

+ status: `active` (string, required)
+ intent: `order` (string, required)
+ priority: `routine` (string, required)
+ based_on (array,optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string, required)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string, required)
+ category (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/service_request_categories` (string)
            + code: `409063005` (string)
+ code (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
+ `context` (Reference_request, optional) - encounter on which the service request is based on, optional if focus is set
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
- One of
    - `occurrence_period` (object)
        + start : `2018-08-02T10:45:16.000Z`(string, required) - Starting time with inclusive boundary
        + end : `2018-08-02T11:00:00.000Z`(string, optional) - End time with inclusive boundary, if not ongoing
    - `occurrence_date_time`: `2018-08-02T10:45:16.000Z` (string, optional)
+ `requester_employee` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `requester_legal_entity` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `75a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `reason_reference` (array, optional)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
+ `supporting_info` (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (enum)
                            - episode_of_care
                            - condition
                            - observation
                            - diagnostic report
                            - device request
+ note: `Some notes` (string, optional)
+ patient_instruction: `Some patient instructions` (string, optional)
+ `permitted_resources` (array, optional)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (string)
+ `performer` (Reference_request, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `location_reference` (Reference_request, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `performer_type` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `SPECIALITY_TYPE` (string)
            + code: `DIETETICS` (string)
+ quantity (object)
    + value: 10 (number, required)
    + `system`: `SERVICE_UNIT` (string, required)
    + `code`: `PIECE` (string, required)
+ specimens (array, optional)
    + (Reference_request)
        + identifier (Identifier, optional, fixed-type)
            + type (Codeable_Concept, required)
                + coding (array, required,fixed-type)
                    + (Coding)
                        + code: `specimen` (string)
+ focus (array, optional) - what the service request is about, when it is not about the subject of record
    + (Reference_request)
        + identifier (Identifier, optional, fixed-type)
            + type (Codeable_Concept, required)
                + coding (array, required,fixed-type)
                    + (Coding)
                        + code: `specimen` (string)
+ inform_with (object, optional)
    + `auth_method_id`: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional) - identifier of patient's auth method

### `Service_Request_Create`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status: `active` (string, required)
+ intent: `order` (string, required)
+ priority: `routine` (string, required)
+ based_on (array,optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string, required)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string, required)
+ category (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/service_request_categories` (string)
            + code: `409063005` (string)
+ code (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
+ `program` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medical_program` (string)
+ `context` (Reference_request, optional) - encounter on which service request is based on, optional if focus is set 
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
- One of
    - `occurrence_period` (object)
        + start : `2018-08-02T10:45:16.000Z`(string, required) - Starting time with inclusive boundary
        + end : `2018-08-02T11:00:00.000Z`(string, optional) - End time with inclusive boundary, if not ongoing
    - `occurrence_date_time`: `2018-08-02T10:45:16.000Z` (string, optional)
+ `requester_employee` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `requester_legal_entity` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `75a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `reason_reference` (array, optional)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
+ `supporting_info` (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (enum)
                            - episode_of_care
                            - condition
                            - observation
                            - diagnostic report
                            - device request
+ note: `Some notes` (string, optional)
+ patient_instruction: `Some patient instructions` (string, optional)
+ `permitted_resources` (array, optional)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (string)
+ `performer` (Reference_request, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `location_reference` (Reference_request, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `performer_type` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `SPECIALITY_TYPE` (string)
            + code: `DIETETICS` (string)
+ quantity (object)
    + value: 10 (number, required)
    + system: `SERVICE_UNIT` (string, required)
    + code: PIECE (string, required)
+ specimens (array, optional)
    + (Reference_request)
        + identifier (Identifier, optional, fixed-type)
            + type (Codeable_Concept, required)
                + coding (array, required,fixed-type)
                    + (Coding)
                        + code: `specimen` (string)
+ focus (array, optional) - what the service request is about, when it is not about the subject of record
    + (Reference_request)
        + identifier (Identifier, optional, fixed-type)
            + type (Codeable_Concept, required)
                + coding (array, required,fixed-type)
                    + (Coding)
                        + code: `specimen` (string)
+ inform_with (object, optional)
    + `auth_method_id`: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional) - identifier of patient's auth method 

### `Use_Service_Request_Request`
+ `used_by_employee` (Reference_request, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
        + value: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
+ `used_by_division` (Reference_request, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
        + value: `d3a1d990-0bf7-556f-b3cf-bec88f123b8e` (string, required)
+ `used_by_legal_entity` (Reference_request, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `program` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medical_program` (string)

        

### `Complete_Service_Request`
+ `completed_with` (Reference_request, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `diagnostic_report` (string) 
                    
+ `program_service` (Reference_request, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `program_service` (string) 

+ `status_reason` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/service_request_complete_reasons` (string)
            + code: `default` (string)
                


## Approvals

### `Approval_Request`
- One Of
    - `resources` (array, optional) - list of resources that are requested access to be granted
        + resources (object, optional) 
            + identifier (object, optional)
                + type (object, optional)
                    + coding (array, optional, fixed-type)
                        + object
                            + system: `eHealth/resources` (string, required)
                            + code: `episode_of_care` (string)
                    + text (string)
                + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
    - `service_request` (object, optional) - access to permitted_resources in service request
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `service_request` (string)
                + text (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
    - `forbidden_group` (object, optional) - access to medical events that fall under the restrictions specified in the forbidden group
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `forbidden_group` (string)
                + text (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea3` (string, required)
    - `diagnoses_group` (object, optional) - access to list of short episodes of care that contain in diagnoses history at least one diagnosis code specified in the Group of Diagnoses
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `diagnoses_group` (string)
                + text (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea3` (string, required)
    - `service_group` (object, optional) - access to diagnostic reports and procedures that contains service id specified in the Service Group
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `service_group` (string)
                + text (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea3` (string, required)
    - `patient` (object, optional) - access to medical events that fall under the restrictions specified for the person
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `patient` (string)
                + text (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea3` (string, required)
    - `resource_types` (array, optional, fixed-type) - list of resources that are requested access to be granted
        + resource_types (object, optional) 
            + coding (array, optional, fixed-type)
                + object
                    + system: `eHealth/resources` (string, required)
                    + code: `device` (string)
            + text (string)
+ `child_resource` (object, optional) - should be submitted with resources field only. Describes medical event included in the resource
    + identifier (object, optional)
        + type (object, optional)
            + coding (array, optional, fixed-type)
                + object
                    + system: `eHealth/resources` (string, required)
                    + code: `procedure` (string)
            + text (string)
        + value: `21e227f9-3afc-4938-80d6-8594814fbe1a` (string, required)
+ `granted_to` (Reference_request, required) - type and identifier of entity to whom access has been granted (employee or legal_entity)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `created_by` (Reference_request, optional) - author of the request for approval
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ access_level: `read` (enum, required) - access rights type
    - read
    - write
+ authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of patient's auth method

### `Approval_Response`
+ `id`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of approval
+ `granted_resources` (array, required)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (string)
            + value: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
+ `granted_resource_types` (array, required)
    + granted_resource_types (object, optional) 
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/resources` (string, required)
                + code: `device` (string)
        + text (string)
+ `granted_to` (Reference_response, required) - type and identifier of entity to whom access has been granted (employee or legal_entity)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ expires_at: `2018-08-02T10:45:16.000Z` (string, required) - expiration date-time timestamp
+ reason (Reference_response, optional) - type and identifier of entity based on which approval has been created
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `is_verified`: false (boolean, required) - state of verification of approval
    - false
    - true
+ access_level: `read` (string, required)
+ `authentication_method_current` (object, required)
    + type: `OTP` (enum, required)
        - OTP
        - OFFLINE
        - THIRD_PERSON
    + number: `+38093*****85` (string, optional)


### `Get_Approvals_List`
+ `id`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of approval
+ `granted_resources` (array, required)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (string)
            + value: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
+ `granted_resource_types` (array, required)
    + granted_resource_types (object, optional) 
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/resources` (string, required)
                + code: `device` (string)
        + text (string)
+ `granted_to` (Reference_response, required) - type and identifier of entity to whom access has been granted (employee or legal_entity)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ reason (Reference_response, optional) - type and identifier of entity based on which approval has been created
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `created_by` (Reference_request, required) - author of the request for approval
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `is_verified`: true (boolean, required) - state of verification of approval
    - true
    - false
+ expires_at: `2018-08-02T10:45:16.000Z` (string, required) - expiration date-time timestamp
+ access_level: `read` (string, required)

### `Get_Approval_Details`
+ `id`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of approval
+ `granted_resources` (array, required)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (string)
            + value: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
+ `granted_resource_types` (array, required)
    + granted_resource_types (object, optional) 
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/resources` (string, required)
                + code: `device` (string)
        + text (string)
+ `granted_to` (Reference_response, required) - type and identifier of entity to whom access has been granted (employee or legal_entity)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ expires_at: `2018-08-02T10:45:16.000Z` (string, required) - expiration date-time timestamp
+ reason (Reference_response, optional) - type and identifier of entity based on which approval has been created
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `created_by` (Reference_request, required) - author of the request for approval
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `is_verified`: true (boolean, required) - state of verification of approval
    - true
    - false
+ access_level: `read` (string, required)
+ `authentication_method_current` (object, required)
    + type: `OTP` (enum, required)
        - OTP
        - OFFLINE
        - THIRD_PERSON
    + number: `+38093*****85` (string, optional)


## `Service_dictionary`
### `Service`
+ id: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
+ name: `Ультразвукове дослідження черевного відділу стравоходу' (string, required)
+ code: `JF2 01` (string, required)
+ is_active: true (boolean, required)
+ parent_id: null (string, optional)
+ category: `imaging` (string, required)
+ is_composition: false (boolean, required)
+ request_allowed: true (boolean, required)
+ `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `inserted_by`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of user who has inserted record
+ `updated_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `updated_by`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of user who has inserted record

### `Service_group`
+ id: `e5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
+ name: `Ультразвукові дослідження' (string, required)
+ code: `FJ` (string, required)
+ is_active: true (boolean, required)
+ request_allowed: false (boolean, required)
+ `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `inserted_by`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of user who has inserted record
+ `updated_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `updated_by`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of user who has inserted record

### `Service_in_group`
+ include (Service_group)
+ groups (array, optional, fixed-type)
    + (Service_group)
        + id: `75a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
        + name: `Ультразвукові дослідження в гастроентерології' (string, required)
        + code: `2FJ` (string, required)
        + services (array, optional, fixed-type)
             + (`Service`)

## `Person_details`
### `Person_identity`
+ last_name: Іванов (string, required) - full surname of the patient
+ first_name: І. (string, required) - short format of the patient's first name with the dot
+ second_name: І. (string, required) - short format of the patient's second name with the dot
+ gender: MALE (enum, required) - gender of the patient, value from the dictionary GENDER
    - MALE
    - FEMALE
+ age: 35 (number, required) - full years between inserted_at and birth date

## Care plan
### `Care_Plan_Create`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ `based_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `care_plan` (string)
+ `part_of` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `care_plan` (string)
+ category (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/care_plan_categories` (string)
            + code: `diabetics` (string)
+ title: `Diabetics health plan` (string, required)
+ description: `Some description of the care plan` (string, optional)
+ period (Period, required)
+ `supporting_info` (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (enum)
                            - procedure
                            - diagnostic_report
+ note: `Some notes` (string, optional)
+ intent: `order` (enum, required)
    - order
+ encounter (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ addresses (array, required, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + code: `E11.9` (string)
                + system: `eHealth/ICD10_AM/condition_codes` (string, required)
+ author (Reference_request, required) - `author of the Care plan`
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ contributor (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
+ `terms_of_service` (Codeable_Concept,required)
    + coding (array, fixed-type)
        + (Coding)
            + code: INPATIENT (enum)
                - INPATIENT
                - OUTPATIENT
            + system: `PROVIDING_CONDITION` (string)
+ inform_with (object, optional)
    + `auth_method_id`: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional) - identifier of patient's auth method 
+ status: new (string, required)

### `Prequalify_Care_Plan_Activity_base`
+ author (Reference_request, required) - `author of the activity`
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `care_plan` (Reference_request, required) - `Care plan to which the activity belongs`
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `care_plan` (string)
+ `detail` (Prequslify_Care_Plan_activity_detail_base, required)

### `Prequalify_Care_Plan_Activity_Responce`
+ `program_id`: `59781de0-2e64-4359-b716-bcc05a32c10f` (string, required) - `Medical program identifier`
+ `program_name` : `Fee-For-Service`(string, required)
+ `status` : `INVALID` (enum, required) - Status for ability use program for this activity
    - VALID
    - INVALID
+ `rejection_reason` : `Service is not included in the program` (string) - Reason to fetch invalid status

### `Care_Plan_activity_base`
+ id: `75a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - unique within the care plan
+ author (Reference_request, required) - `author of the activity`
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `care_plan` (Reference_request, required) - `Care plan to which the activity belongs`
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `care_plan` (string)
+ `detail` (`Care_Plan_activity_detail_base`, required)

### `Prequslify_Care_Plan_activity_detail_base`
+ kind: `medication_request` (enum, required)
    - service_request
    - medication_request
    - device_request
- One of
    - `product_reference` (object) - `medication if kind is medication request, service/service_group if service request, device_definition if device request`
         + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `medication` (enum)
                            - service
                            - `service_group`
                            - medication
                            - `device_definition`
                + text (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea3` (string, required)
    - `product_codeable_concept` (object)
        + coding (array, optional, fixed-type)
            + object
                + code: `30221` (string)
                + system: `device_definition_classification_type` (string, required)
+ `reason_code` (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + code: `X85` (string)
                + system: `eHealth/ICD10_AM/condition_codes` (string, required)
+ `reason_reference` (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (enum) - `conditions/oservations/diagnostic_reports/clinical_impressions that approves diagnoses`
                            - condition
                            - oservation
                            - diagnostic_report
                            - clinical_impression
+ goal (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + code: `diabetes_treatment` (string)
                + system: `eHealth/care_plan_activity_goals` (string, required)
+ quantity (object)
    + value: 13 (number, required)
    + `system`: `MEDICATION_UNIT` (enum, optional) - Can be absent in old version of CPA, is required for kind `medication_request`. `MEDICATION_UNIT` used in activities with kind `medication_request`, `SERVICE_UNIT` - with kind `service_request`
        - `MEDICATION_UNIT`
        - `SERVICE_UNIT`
        - `device_unit`
    + `code`: `MG` (string, optional) - Can be absent in old version of CPA, is required for kind `medication_request`.
+ `scheduled_period` (object, required)
    + start: `2018-08-02T10:45:16.000Z`(string, required) -  Starting time with inclusive boundary
    + end: `2018-08-02T11:00:00.000Z`(string, required) -  End time with inclusive boundary, if not ongoing
+ location (Reference_request)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
+ performer (Reference_request)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `daily_amount` (object)
    + value: 13.5 (number, required)
    + `system`: `MEDICATION_UNIT` (enum, optional) - Can be absent in old version of CPA.
        - `MEDICATION_UNIT`
        - `SERVICE_UNIT`
        - `device_unit`
    + `code`: `MG` (string, optional) - Can be absent in old version of CPA.
+ description: `Some activity description` (string)
+ `do_not_perform`: false (boolean, required)
+ status: scheduled (string, required)


### `Care_Plan_activity_detail_base`
+ kind: `medication_request` (enum, required)
    - service_request
    - medication_request
    - device_request
- One of
    - `product_reference` (object) - `medication if kind is medication request, service/service_group if service request, device_definition if device request`
         + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `medication` (enum)
                            - service
                            - `service_group`
                            - medication
                            - `device_definition`
                + text (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea3` (string, required)
    - `product_codeable_concept` (object)
        + coding (array, optional, fixed-type)
            + object
                + code: `30221` (string)
                + system: `device_definition_classification_type` (string, required)
+ `reason_code` (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + code: `X85` (string)
                + system: `eHealth/ICD10_AM/condition_codes` (string, required)
+ `reason_reference` (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (enum) - `conditions/oservations/diagnostic_reports/clinical_impressions that approves diagnoses`
                            - condition
                            - oservation
                            - diagnostic_report
                            - clinical_impression
+ goal (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + code: `diabetes_treatment` (string)
                + system: `eHealth/care_plan_activity_goals` (string, required)
+ quantity (object)
    + value: 13 (number, required)
    + `system`: `MEDICATION_UNIT` (enum, optional) - Can be absent in old version of CPA, required if kind `medication_request`. `MEDICATION_UNIT` used in activities with kind `medication_request`, `SERVICE_UNIT` - with kind `service_request`
        - `MEDICATION_UNIT`
        - `SERVICE_UNIT`
        - `device_unit`
    + `code`: `MG` (string, optional) - Can be absent in old version of CPA, required if kind `medication_request`.
    + `unit`: `мг` (string, optional) - Can be absennt in old version of CPA.
- One of
    - `scheduled_timing` (object)
        + event (array)
            - `2018-08-02T10:45:16Z` ([string])
        + repeat (object)
            - One Of
                - `bounds_duration` (object, optional)
                    + value: 10 (number, required)
                    + comparator: `>` (string, optional)
                    + unit: `доба` (string, optional)
                    + system: `eHealth/ucum/units` (string, required)
                    + code: `day` (string, required)
                - bounds_range (object, optional)
                    + low (object, required)
                        + value: `13` (number, required)
                        + unit: `доба` (string, optional) 
                        + system: `eHealth/ucum/units` (string, required)
                        + code: `day` (string, required)
                    + high (object, required)
                        + value: `23` (number, required)
                        + unit: `доба` (string, optional) 
                        + system: `eHealth/ucum/units` (string, required)
                        + code: `day` (string, required)
                - bounds_period (object, optional)
                    + start: `2018-08-02T10:45:16.000Z`(string, required) - Starting time with inclusive boundary
                    + end: `2018-08-02T11:00:00.000Z`(string, optional) - End time with inclusive boundary, if not ongoing
            + count: 10 (number, optional) - Number of times to repeat
            + `count_max`: 20 (number, optional) - Maximum number of times to repeat
            + duration: 15 (number, optional) - How long when it happens
            + `duration_max`: 25 (number, optional) - How long when it happens
            + `duration_unit`: `day` (string, optional) - unit of time dictionary
            + frequency: 1 (number, optional) - Event occurs frequency times per period
            + `frequency_max`: 4 (number, optinal) - Event occurs up to requency max times per period
            + `period`: 1 (number, optinal) - Event occurs frequency times per period
            + `period_max`: 3 (number, optional) - Upper limit of period, 3-4 hours
            + `period_unit`: `day` (string, optional) - unit of time dictionary
            + `day_of_week` (array, optinal) - DAYS OF WEEK dictionary
                - mon ([string])
            + `time_of_day` (array, optinal) - Time of day for action
                - `16:00:00` ([string])
            + when: (array, optional) - Code for time period of occurrence from EVENT_TIMING dictionary
                - WAKE ([string])
            + offset: 20 (number, optinal) - Minutes from event, before or after
        + code (object)
            + `coding` (array, required, fixed-type)
                + (object)
                    + system: `TIMING_ABBREVIATION` (string, required)
                    + code: `Q4H` (string, required) - Symbol in syntax defined by the system
            + text (string, optional)
    - `scheduled_period` (object)
        + start: `2018-08-02T10:45:16.000Z`(string, required) -  Starting time with inclusive boundary
        + end: `2018-08-02T11:00:00.000Z`(string, required) -  End time with inclusive boundary, if not ongoing
    - `scheduled_string`: `2018-08-02T10:45:16.000Z` (string)
+ location (Reference_request)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
+ performer (Reference_request)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `daily_amount` (object)
    + value: 6.5 (number, required)
    + `system`: `MEDICATION_UNIT` (enum, optional) - Can be absent in old version of CPA, required if kind `medication_request`.
        - `MEDICATION_UNIT`
        - `SERVICE_UNIT`
        - `device_unit`
    + `code`: `MG` (string, optional) - Can be absent in old version of CPA, required if kind `medication_request`. 
    + `unit`: `мг` (string, optional) - Can be absennt in old version of CPA.
+ description: `Some activity description` (string)
+ `do_not_perform`: false (boolean, required)
+ `program` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medical_program` (string)
+ status: scheduled (string, required)


### `Care_plan_activity_show`
+ include `Care_Plan_activity_base`
+ `outcome_reference` (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `encounter` (enum)
                            - encounter
                            - procedure
                            - `diagnostic_report`
                            - `medication_dispense`
                            - `device_dispense`
+ `outcome_codeable_concept` (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + code: `some code` (string)
                + system: `eHealth/care_plan_activity_outcomes` (string, required)
+ `detail` (Care_Plan_activity_detail_base, required)
    + status: scheduled (enum, required)
        - scheduled
        - `in_progress`
        - completed
        - cancelled
    + `status_reason` (Codeable_Concept, optional, fixed-type)
        + coding (array, fixed-type)
            + (Coding)
                + code: `some code` (string)
                + system: `eHealth/care_plan_activity_cancel_reasons` (enum, required)
                    - `eHealth/care_plan_activity_complete_reasons`
                    - `eHealth/care_plan_activity_cancel_reasons`
    + `remaining_quantity` (object)
        + value: 12 (number, required)
        + `system`: `MEDICATION_UNIT` (enum, optional) - Can be absent in old version of CPA. Same value as in quantity attribute
            - `MEDICATION_UNIT`
            - `SERVICE_UNIT`
            - `device_unit`
        + `code`: `MG` (string, optional) - Can be absent in old version of CPA. Same value as in quantity attribute
        + `unit`: `мг` (string, optional) - Can be absennt in old version of CPA. Sets automatically for corresponding code.
    + `remaining_quantity_type`: `for_request` (string, required) - Type of remaining_quantity

### `Care_Plan_Show`
+ include `Care_Plan_Create`
+ subject (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `patient` (string)
        + value: `7c3da506-804d-4550-8993-bf17f9ee0403` (string)
+ status: active (enum, required)
    - new
    - active
    - completed
    - cencelled
    - terminated
+ `managing_organization` (Reference_request, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
     + display_value: `Медікал Солюшнc` (string, required)
+ `status_history` (array, required, fixed-type)
    + (object)
        + status: `active` (string, required)
        + `status_reason` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/care_plan_cancel_reasons` (enum)
                        - `eHealth/care_plan_cancel_reasons`
                        - `eHealth/care_plan_complete_reasons`
                    + code: `some code` (string)
        + `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
        + `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ requisition: `0123-4567-89AB-CEIK` (string, required)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Care_plan_summary`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ `based_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `care_plan` (string)
+ requisition: `0123-4567-89AB-CEIK` (string, required)
+ `part_of` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `care_plan` (string)
+ period (Period, required)
+ intent: `order` (enum, required)
    - order
+ encounter (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ author (Reference_request, required) - `author of the Care plan`
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ subject (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `patient` (string)
        + value: `7c3da506-804d-4550-8993-bf17f9ee0403` (string)
+ status: active (enum, required)
    - new
    - active
    - completed
    - cencelled
    - terminated
+ `managing_organization` (Reference_request, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
     + display_value: `Медікал Солюшнc` (string, required)
+ `terms_of_service` (Codeable_Concept,required)
    + coding (array, fixed-type)
        + (Coding)
            + code: INPATIENT (enum)
                - INPATIENT
                - OUTPATIENT
            + system: `PROVIDING_CONDITION` (string)

### `Medical_Event_Context_Episode_Response`
+ `episode` (`Medical_Event_Context_Episode`)

### `Medical_Event_Context_Episode_with_Diagnostic_Report_Response`
+ `episode` (`Medical_Event_Context_Episode`)
+ `diagnostic_report` (`Medical_Event_Context_Diagnostic_Report`)

### `Medical_Event_Context_Episode_with_Origin_Episode_Response`
+ `episode` (`Medical_Event_Context_Episode`)
+ `origin_episode` (`Medical_Event_Context_Episode`)

### `Medical_Event_Context_Episode`
+ identifier (Identifier)
    + type (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + code: `episode` (string)
    + value: `7c3da506-804d-4550-8993-bf17f9ee0402` (string)
+ display_value: `null` (string, required) - This field is filled on creating and never updated after

### `Medical_Event_Context_Diagnostic_Report`
+ identifier (Identifier)
    + type (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + code: `diagnostic_report` (string)
    + value: `7c3da506-804d-4550-8993-bf17f9ee0403` (string)
+ display_value: `null` (string, required) - This field is filled on creating and never updated after

### `Medical_Event_Context_Care_Plan`
+ identifier (Identifier)
    + type (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + code: `care_plan` (string)
    + value: `7c3da506-804d-4550-8993-bf17f9ee0404` (string)
+ display_value: `null` (string, required) - This field is filled on creating and never updated after

### `Medical_Event_Context_Care_Plan_with_Episode_Response`
+ `episode` (`Medical_Event_Context_Episode`)
+ `care_plan` (`Medical_Event_Context_Care_Plan`) - Care plan identifier related to the Activity on which Device request is based on


### `Device_Request_Base`
+ intent: `order` (string, required)
+ quantity (object)
    + value: 10 (number, required)
    + system: `device_unit` (string, required)
    + code: piece (string, required)
- One Of
    + `code` (object, optional)
        + coding (array, optional, fixed-type)
            + object
                + system: `device_definition_classification_type` (string)
                + code: `30221` (string)
    + `code_reference`  (object, optional)
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, required, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `device_definition` (string)
+ `encounter` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `reason` (array, optional)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
+ `requester` (Reference_request, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
+ authored_on: `2000-01-01T00:00:00.000Z` (string, required)
+ occurrence_period (object, required, fixed-type)
    + start : `2000-01-01T00:00:00.000Z`(string, required) 
    + end : `2018-08-02T11:00:00.000Z`(string, required)
+ based_on (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string, required)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string, required)
+ priority: `routine` (string, optional)
+ `parameter` (array, optional)
    + (Device_parameter)
+ `performer` (Reference_request, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
+ supporting_info (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (enum, required)
                            - condition
                            - observation
                            - diagnostic_report
                            - procedure
                            - encounter
                            - episode
                            - device
                            - device_association


### `Device_Request_Response_Base`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ include `Device_Request_Base`
+ quantity (object)
    + value: 10 (number, required)
    + system: `device_unit` (string, required)
    + code: piece (string, required)
+ `status`: `active` (string, required)
+ `status_reason` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `device_request_revoke_reasons` (string)
            + code: `incorrect_patient` (string)
+ `encounter` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `subject` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
+ `reason` (array, optional)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
+ `requester` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
    + display_value: `Мельник Микола Микитович` (string, required) - This field is filled on creating and never updated after
+ `requester_legal_entity` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
    + display_value: `Комунальне підприємство Медлаб` (string, required) - This field is filled on creating and never updated after
+ `program` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medical_program` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
    + display_value: `Доступні медичні вироби` (string, required) - This field is filled on creating and never updated after    
+ requisition: `AX65-4654-TІВ1-ТВТ1` (string, required)
+ dispense_valid_to: `2018-08-02T10:45:16.000Z` (string, required)
+ note: `Some notes` (string, optionnal)
+ `inserted_at`: `2018-08-02T10:45:16.000Z` (string, optional)
+ `updated_at`: `2018-08-02T10:45:16.000Z` (string, optional)
+ based_on (array, optional, fixed-type)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string, required)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string, required)
+ priority: `routine` (string, optional)
+ `parameter` (array, optional)
    + (Device_parameter)
+ `performer` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
+ supporting_info (array,optional, fixed-type)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (enum, required)
                            - condition
                            - observation
                            - diagnostic_report
                            - procedure
                            - encounter
                            - episode
                            - device
                            - device_association


### `Device_Request_Response_Details`
+ include `Device_Request_Response_Base`
+ `remaining_quantity` (object)
    + value: 10 (number, required)
    + system: `device_unit` (string, required)
    + code: piece (string, required)
    + unit: шт (string, required) 

### `Qualify_Device_Request_Base`
+ `program_id`: `59781de0-2e64-4359-b716-bcc05a32c10f` (string, required) - `Medical program Identifier`
+ `program_name` : `Доступні медичні вироби`(string, required)
+ `status` : `INVALID` (enum, required) - Status for ability use program for this `Device Request`
    - VALID
    - INVALID
+ `rejection_reason` : `No appropriate participants found for this medical program` (string) - Reason to fetch invalid status

### Device_Request_Complete_Request
+ include `Device_Request_Response_Base`
+ `status`: completed (string, required) - Device Request status

### `Program_device`
+ id: `0f2fbf93-3041-4c0d-a3cf-ff558c861df8` (string, required) - Program participant identifier
+ `device_definition`(`Device_Definition_base`, required) -  Device definition
+ reimbursement (object, required) - Information about reimbursement by the program
   + type: `FIXED` (string) - reimbursement type according to REIMBURSEMENT_TYPE dictionary
   + percentage_discount: 12.45 (number) - Percent of a discount. Applicable only if type PERCENTAGE
   + `reimbursement_amount`: 50.98 (number) - Amount to reimburse for one device by medical_program. Applicable only if type FIXED
+ wholesale_price: 25.14 (number, optional) - Wholesale pricing per package, UAH
+ consumer_price: 34.03 (number, optional) - Retail price for packaging, UAH
+ reimbursement_daily_count: 5 (number, optional) - The daily count of the device definition to be compensated
+ estimated_payment_amount: 5.15 (number, optional) - Amount of additional payment for packing, UAH
+ max_daily_count: 10 (number, optional) - The maximum allowable daily quantity of the device
+ registry_number: `REG-1111` (string, optional) - Registry number
+ `start_date`: `2019-01-01` (string, required) - Active from date
+ `end_date`: `2019-06-30` (string, optional) - Active to date

### `Device_Definition_base`
+ id: `3e34da3d-9b8c-4aaf-be8e-24a161279b6a` (string, required) - Unique identifier of Device definition
+ `device_names` (array [`device_name`], required)
+ `classification_type`: `30221` (string, required) - Classification type. Dictionary `device_definition_classification_type`
+ `manufacturer` (`Manufacturer`, optional)
+ model_number: `M23N76` (string, optional) - Model number
+ `packaging` (`Device_definition_package`, required)

### `device_name`
+ `name`: `Тест-смужки Accu-Chek Active для глюкометра` (string, required) - Device name
+ `type`: `user_friendly` (enum, required) - Device name type. Dictionary `device_name_type`
    - user_friendly
    - registered
    - patient_reported    

### `Device_definition_package`
+ `packaging_type`: `undefined` (string, required) - Packaging type. Dictionary `device_definition_packaging_type`
+ packaging_count: 50 (number, required) - Number of devices in container
+ `packaging_unit`: `pcs` (string, required) - Packaging unit. Dictionary `device_unit`

### `Manufacturer`
+ `name` : `ПАТ "Київський вітамінний завод"` (string, required)
+ `country` : `UA` (string, required) - `Dictionary COUNTRY`

### `Qualify_Device_Request_Responce`
+ include `Qualify_Device_Request_Base`
+ `participants` (array, required)
    + (object)
        + include `Program_device`


### Device_Dispense_Base
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Device Dispense Identifier
+ `status`: `completed`  (string, required) 
+ `performer` (Reference_request, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
+ `location` (Reference_request, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
+ `note`: `Some notes` (string, optionnal)




### Device_Dispense_Create_Request
+ include `Device_Dispense_Base`
+ `based_on` (Reference_request, required) - Device request
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `device_request` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
+ `program` (Reference_request, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medical_program` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `details` (array[`Device_Dispense_Detail_Request`], fixed, required)
+ `when_handed_over`:`2018-08-02T10:45:16.000Z` (string, optional) 
        

### Device_Dispense_EncounterPCG_Request
+ include `Device_Dispense_Base`
+ `based_on` (Reference_request, optional) - Device request
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `device_request` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
+ `when_handed_over`:`2018-08-02T10:45:16.000Z` (string, required) 
+ `part_of` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `procedure` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `encounter` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ supporting_info (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (enum)
                            - condition
                            - observation
                            - diagnostic_report
                            - procedure
                            - encounter
                            - episode 
                            - device
                            - device_association
+ `details` (array[`Device_Dispense_Detail_EncounterPCG_Request`], fixed, required)

### Device_Dispense_Complete_Request
+ include `Device_Dispense_Create_Response`
+ `program` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medical_program` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
    + display_value: `Доступні медичні вироби` (string, required) - This field is filled on creating and never updated after
+ `status`: completed (string, required) - Device Dispense status
+ `when_handed_over`: `2018-08-02T10:45:16.000Z` (string, required)
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid devices
+ `payment_amount`: 50 (number, required) - receipt amount which was paid by patient (UAH)

### Device_Dispense_Response
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Device Dispense Response Identifier
+ `based_on` (Reference_response, optional) - Device request
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `device_request` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
+ `status`: completed (string, required) - Device Dispense status
+ `subject` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
+ `performer` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
    + display_value: `Мельник Микола Микитович` (string, required) - This field is filled on creating and never updated after
+ `location` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
    + display_value: `Перше відділення` (string, required) - This field is filled on creating and never updated after
+ `when_handed_over`: `2018-08-02T10:45:16.000Z` (string, optional)
+ `note`: `Some notes` (string, optionnal)
+ `performer_legal_entity` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
    + display_value: `Комунальне підприємство Медлаб` (string, required) - This field is filled on creating and never updated after
+ `program` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medical_program` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
    + display_value: `Доступні медичні вироби` (string, required) - This field is filled on creating and never updated after
+ `details` (array[`Device_Dispense_Detail_Response`], fixed, required)
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid devices
+ `payment_amount`: 50 (number, optional) - receipt amount which was paid by patient (UAH)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)
+ `part_of` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `procedure` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `encounter` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ supporting_info (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (enum)
                            - condition
                            - observation
                            - diagnostic_report
                            - procedure
                            - encounter
                            - episode 
                            - device
                            - device_association
+ `status_reason` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `device_dispense_mark_in_error_reasons` (string)
            + code: `incorrect_patient` (string)
            


### Device_Dispense_EncounterPCG_Response
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Device Dispense Response Identifier
+ `based_on` (Reference_response, optional) - Device request
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `device_request` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
+ `status`: completed (string, required) - Device Dispense status
+ `subject` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
+ `performer` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
    + display_value: `Мельник Микола Микитович` (string, required) - This field is filled on creating and never updated after
+ `location` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
    + display_value: `Перше відділення` (string, required) - This field is filled on creating and never updated after
+ `when_handed_over`: `2018-08-02T10:45:16.000Z` (string, optional)
+ `note`: `Some notes` (string, optionnal)
+ `performer_legal_entity` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
    + display_value: `Комунальне підприємство Медлаб` (string, required) - This field is filled on creating and never updated after
+ `details` (array[`Device_Dispense_Detail_Response`], fixed, required)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)
+ `part_of` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `procedure` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `encounter` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ supporting_info (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (enum)
                            - condition
                            - observation
                            - diagnostic_report
                            - procedure
                            - encounter
                            - episode 
                            - device
                            - device_association
            
            
### Device_Dispense_Create_Response
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Device Dispense Response Identifier
+ `based_on` (Reference_response, required) - Device request
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `device_request` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
+ `status`: completed (string, required) - Device Dispense status
+ `subject` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
+ `performer` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
    + display_value: `Мельник Микола Микитович` (string, required) - This field is filled on creating and never updated after
+ `location` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
    + display_value: `Перше відділення` (string, required) - This field is filled on creating and never updated after
+ `when_handed_over`: `2018-08-02T10:45:16.000Z` (string, optional)
+ `note`: `Some notes` (string, optionnal)
+ `performer_legal_entity` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
    + display_value: `Комунальне підприємство Медлаб` (string, required) - This field is filled on creating and never updated after
+ `program` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medical_program` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
    + display_value: `Доступні медичні вироби` (string, required) - This field is filled on creating and never updated after
+ `details` (array[`Device_Dispense_Detail_Response`], fixed, required)
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid devices
+ `payment_amount`: 50 (number, optional) - receipt amount which was paid by patient (UAH)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)



### Device_Dispense_Response_Base
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Device Dispense Response Identifier
+ `based_on` (Reference_response, optional) - Device request
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `device_request` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
+ `status`: completed (string, required) - Device Dispense status
+ `subject` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
+ `performer` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
    + display_value: `Мельник Микола Микитович` (string, required) - This field is filled on creating and never updated after
+ `location` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
    + display_value: `Перше відділення` (string, required) - This field is filled on creating and never updated after
+ `when_handed_over`: `2018-08-02T10:45:16.000Z` (string, optional)
+ `note`: `Some notes` (string, optionnal)
+ `performer_legal_entity` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
    + display_value: `Комунальне підприємство Медлаб` (string, required) - This field is filled on creating and never updated after
+ `program` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medical_program` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
    + display_value: `Доступні медичні вироби` (string, required) - This field is filled on creating and never updated after
+ `details` (array[`Device_Dispense_Detail_Response`], fixed, required)
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid devices
+ `payment_amount`: 50 (number, optional) - receipt amount which was paid by patient (UAH)
+ `status_reason` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `device_dispense_mark_in_error_reasons` (string)
            + code: `incorrect_patient` (string)

### `Device_Dispense_Detail_Request`
- One Of
    + `device` (object, optional)
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, required, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `device_definition` (string)
            + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
    + `device_code` (object, optional)
        + coding (array, optional, fixed-type)
            + object
                + system: `device_definition_classification_type` (string)
                + code: `30221` (string)
+ `program_device` (Reference_request, optional) - Program device
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `program_device` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
+ quantity (object, required)
    + value: 10 (number, required)
    + system: `device_unit` (string, required)
    + code: piece (string, required)
+ `sell_price`: 18.65 (number, optional) - price for one device
+ `discount_amount`: 150 (number, optional) - pharmacy's expected price of dicsount for the requested device quantity


### `Device_Dispense_Detail_EncounterPCG_Request`
- One Of
    + `device` (object, optional)
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, required, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `device_definition` (enum, required)
                            - device_definition
                            - device
            + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
    + `device_code` (object, optional)
        + coding (array, optional, fixed-type)
            + object
                + system: `device_definition_classification_type` (string)
                + code: `30221` (string)
+ quantity (object, required)
    + value: 10 (number, required)
    + system: `device_unit` (string, required)
    + code: piece (string, required)
+ `sell_price`: 18.65 (number, optional) - price for one device


### `Device_Dispense_Detail_Response`
+ include `Device_Dispense_Detail_Request`
+ `program_device` (Reference_response, optional) - Program device
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `program_device` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
+ quantity (object, required)
    + value: 10 (number, required)
    + system: `device_unit` (string, required)
    + code: piece (string, required)
    + unit: шт (string, required)
+ `reimbursement_amount`: 450 (number, optional) - Amount to reimburse for device by medical_program

### `Specimen_Collection_Request`
+ collector (Reference_request, required) - Who collected the Specimen.
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (enum, required)
                        - employee
                        - patient
- One Of
    + collected_date_time: `2023-04-20T19:14:13Z` (string, optional) - The time when Specimen was collected. ISO 8601 date and time in UTC timezone.
    + collected_period (object, optional) - The period of time during which the Specimen was collected
        + start : `2023-04-20T10:45:16.000Z`(string, required) - Starting time with inclusive boundary
        + end : `2023-04-20T11:00:00.000Z`(string, optional) - End time with inclusive boundary, if not ongoing
+ duration (object, optional) - How long it took to collect Specimen
    + value: 5 (number, required)
    + system: `eHealth/ucum/units` (string, required)
    + code: min (string, required)
    + comparator: `>` (string, optional)
+ quantity (object, required) - The quantity of specimen collected
    + value: 20 (number, required)
    + system: `eHealth/ucum/units` (string, required)
    + code: g (string, required)
+ method (Codeable_Concept, optional) - Technique used to perform collection
    + coding (array, fixed-type)
        + (Coding)
            + system: `specimen_collection_methods` (string)
            + code: `default` (string)
+ `body_site` (Codeable_Concept, optional) - Anatomical collection site
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/body_sites` (string)
            + code: `head` (string)
+ `fasting_status_codeable_concept` (Codeable_Concept, optional) - Whether or how long patient abstained from food and/or drink
    + coding (array, fixed-type)
        + (Coding)
            + system: `fasting_statuses` (string)
            + code: `default` (string)


### `Specimen_Container_Request`
+ identifier: `1-3244-ABC` (string, required) - Id for the container
+ description: `Some container description` (string, optional) - Textual description of the container
+ type (Codeable_Concept, required) - Kind of container directly associated with specimen.
    + coding (array, fixed-type)
        + (Coding)
            + system: `specimen_container_types` (string)
            + code: `default` (string)
+ capacity (object, required) - Container volume or size
    + value: 30000 (number, required)
    + system: `eHealth/ucum/units` (string, required)
    + code: mg (string, required)
+ specimen_quantity (object, required) - Quantity of specimen within container
    + value: 20 (number, required)
    + system: `eHealth/ucum/units` (string, required)
    + code: g (string, required)
+ `additive_codeable_concept` (Codeable_Concept, optional) - Additive associated with container.
    + coding (array, fixed-type)
        + (Coding)
            + system: `specimen_container_additives` (string)
            + code: `default` (string)

### `Specimen_Request`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Specimen Identifier
+ status: `available` (string, required) - status of the Specimen according to `specimen_statuses`
+ type (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `specimen_types` (string)
            + code: `default` (string)
+ condition (Codeable_Concept, optional) - State of the specimen.
    + coding (array, fixed-type)
        + (Coding)
            + system: `specimen_conditions` (string)
            + code: `default` (string)
+ note: `Some notes` (string, optional) - Comments
+ `managing_organization` (Reference_request, required) - Legal entity where the specimen was created
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
+ `registered_by` (Reference_request, required) - Who registered the specimen.
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string, required)
+ parent (array, optional) - Specimens from which this Specimen originated
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: specimen (string)
+ request (array, optional) - Service requests on diagnostic, represents why the Specimen was collected.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: service_request (string)
+ collection (`Specimen_Collection_Request`, required) - Collection details
+ container (array, required) - Direct container of Specimen 
    + (`Specimen_Container_Request`)

### `Specimen_EDP_Request`
+ include `Specimen_Request`
+ `context` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ collection (`Specimen_Collection_Request`, required) - Collection details
    + procedure (Reference_request, optional) - Procedure that collects the specimen.
        + identifier (Identifier, required)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `procedure` (string, required)
+ `received_time`: `2023-04-20T19:14:13Z` (string, optional) - The time when Specimen was received for processing
+ status: `available` (enum, required) - status of the Specimen according to `specimen_statuses`
    - available
    - unavailable
+ `status_reason` (Codeable_Concept, optional) - in case the Specimen has unavailable status
    + coding (array, fixed-type)
        + (Coding)
            + system: `specimen_invalidate_reasons` (string)
            + code: `used` (string)

### `Specimen_Response`
+ include `Specimen_Request`
+ status: `available` (enum, required) - status of the Specimen according to `specimen_statuses`
    - available
    - unavailable
    - unsatisfactory
    - `entered_in_error`
+ `managing_organization` (Reference_response, required) - Legal entity where the Specimen was created
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
    + display_value: `Комунальне підприємство Медлаб` (string, required) - This field is filled on creating and never updated after
+ `registered_by` (Reference_response, required) - Who registered the Specimen.
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string, required)
    + display_value: `Тарасенко Максим Петрович` (string, required) - This field is filled on creating and never updated after
+ context (Reference_response, optional) - Encounter if Specimen created using EDP.
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string, required)
+ `accession_identifier`: `AX64-654T-X654-AX65` (string, required) - Human readable requisition number
+ `received_time`: `2023-04-20T19:14:13Z` (string, optional) - The time when Specimen was received for processing. ISO 8601 date and time in UTC timezone.
+ parent (array, optional) - Specimens from which this Specimen originated
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: specimen (string)
+ request (array, optional) - Service requests on diagnostic, represents why the Specimen was collected.
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: service_request (string)
+ `subject` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
+ `status_reason` (Codeable_Concept)
    + coding (array, fixed-type)
        + (Coding)
            + system: `specimen_invalidate_reasons` (enum, string)
                - `specimen_reject_reasons`
                - `specimen_invalidate_reasons`
                - `specimen_cancel_reasons`
            + code: `default` (string)
+ collection (`Specimen_Collection_Request`, required) - Collection details
    + collector (Reference_response, required) - Who collected the Specimen.
        + identifier (Identifier, required)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (enum, required)
                            - employee
                            - patient
        + display_value: `Василенко Олена Павлівна` (string, required) - This field is filled on creating and never updated after
    + duration (object, optional) - How long it took to collect Specimen
        + value: 5 (number, required)
        + system: `eHealth/ucum/units` (string, required)
        + code: min (string, required)
        + comparator: `>` (string, optional)
        + unit: хв (string, required)
    + quantity (object, required) - The quantity of Specimen collected
        + value: 20 (number, required)
        + system: `eHealth/ucum/units` (string, required)
        + code: g (string, required)
        + unit: грам (string, required)
    + procedure (Reference_response, optional) - Procedure that collects the Specimen.
        + identifier (Identifier, required)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `procedure` (string, required)
+ container (array, required) - Direct container of Specimen 
    + (`Specimen_Container_Request`)
        + capacity (object, required) - Container volume or size
            + value: 30000 (number, required)
            + system: `eHealth/ucum/units` (string, required)
            + code: mg (string, required)
            + unit: міліграм (string, required)
        + specimen_quantity (object, required) - Quantity of Specimen within container
            + value: 20 (number, required)
            + system: `eHealth/ucum/units` (string, required)
            + code: g (string, required)
            + unit: грам (string, required)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)  

### Device_parameter
+ `code`(Codeable_Concept)
    + coding (array, fixed-type)
        + (Coding)
            + system: `device_request_code_parameter` (enum, string)
- One Of
    - `value_codeable_concept` (Codeable_Concept)
    - `value_quantity` (Quantity, optional)
    - `value_range` (Range, optional)
    - `value_boolean` (boolean, optional)
    - `value_string` (string, optional)
